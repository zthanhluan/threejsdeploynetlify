{"version":3,"file":"js/app.c734b1a2.js","mappings":"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","sources":["webpack://threejsdemo/./src/App.vue","webpack://threejsdemo/./src/components/FollowCamPage.vue","webpack://threejsdemo/./src/components/NavMenu.vue","webpack://threejsdemo/./src/components/NavMenu.vue?bcc5","webpack://threejsdemo/./src/components/FollowCamPage.vue?2e4e","webpack://threejsdemo/./src/components/SelectBoxPage.vue","webpack://threejsdemo/./src/const.js","webpack://threejsdemo/./src/components/SelectBoxPage.vue?082c","webpack://threejsdemo/./src/components/MulticoloredSpherePage.vue","webpack://threejsdemo/./src/components/MulticoloredSpherePage.vue?8697","webpack://threejsdemo/./src/components/ParticlesSystemPage.vue","webpack://threejsdemo/./src/components/ParticlesSystemPage.vue?0bce","webpack://threejsdemo/./src/components/TempPage.vue","webpack://threejsdemo/./src/components/TempPage.vue?ef17","webpack://threejsdemo/./src/components/CanonJSPage.vue","webpack://threejsdemo/./src/components/CanonJSPage.vue?7eb0","webpack://threejsdemo/./src/components/ConvexObjectPage.vue","webpack://threejsdemo/./src/components/utils/cannonUtils.js","webpack://threejsdemo/./src/components/ConvexObjectPage.vue?805b","webpack://threejsdemo/./src/components/WaterPage.vue","webpack://threejsdemo/./src/components/utils/floater.js","webpack://threejsdemo/./src/components/utils/gerstnerWater.js","webpack://threejsdemo/./src/components/WaterPage.vue?7bb9","webpack://threejsdemo/./src/components/EdgeDetectPage.vue","webpack://threejsdemo/./src/components/EdgeDetectPage.vue?cce8","webpack://threejsdemo/./src/components/ShadersOceanPage.vue","webpack://threejsdemo/./src/components/ShadersOceanPage.vue?5caf","webpack://threejsdemo/./src/components/GamePage.vue","webpack://threejsdemo/./src/components/GamePage.vue?782a","webpack://threejsdemo/./src/components/Draw3DSurfacePage.vue","webpack://threejsdemo/./src/components/Draw3DSurfacePage.vue?8e82","webpack://threejsdemo/./src/components/DrawRainBowLightPage.vue","webpack://threejsdemo/./src/components/DrawRainBowLightPage.vue?28b0","webpack://threejsdemo/./src/components/DrawDimensionPage.vue","webpack://threejsdemo/./src/components/DrawDimensionPage.vue?48f1","webpack://threejsdemo/./src/components/DrawSelectAreaPage.vue","webpack://threejsdemo/./src/components/DrawSelectAreaPage.vue?4281","webpack://threejsdemo/./src/components/EdgeProjectionPage.vue","webpack://threejsdemo/./src/components/utils/edgeUtils.js","webpack://threejsdemo/./src/components/EdgeProjectionPage.vue?dd4d","webpack://threejsdemo/./src/components/CharacterMovementPage.vue","webpack://threejsdemo/./src/components/CharacterMovementPage.vue?25ba","webpack://threejsdemo/./src/router.js","webpack://threejsdemo/./src/App.vue?7ccd","webpack://threejsdemo/./src/main.js","webpack://threejsdemo/webpack/bootstrap","webpack://threejsdemo/webpack/runtime/chunk loaded","webpack://threejsdemo/webpack/runtime/compat get default export","webpack://threejsdemo/webpack/runtime/define property getters","webpack://threejsdemo/webpack/runtime/global","webpack://threejsdemo/webpack/runtime/hasOwnProperty shorthand","webpack://threejsdemo/webpack/runtime/jsonp chunk loading","webpack://threejsdemo/webpack/startup"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <router-view></router-view>\n  </div>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\">\n    <symbol id=\"bootstrap\" viewBox=\"0 0 118 94\">\n      <title>Bootstrap</title>\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n        d=\"M24.509 0c-6.733 0-11.715 5.893-11.492 12.284.214 6.14-.064 14.092-2.066 20.577C8.943 39.365 5.547 43.485 0 44.014v5.972c5.547.529 8.943 4.649 10.951 11.153 2.002 6.485 2.28 14.437 2.066 20.577C12.794 88.106 17.776 94 24.51 94H93.5c6.733 0 11.714-5.893 11.491-12.284-.214-6.14.064-14.092 2.066-20.577 2.009-6.504 5.396-10.624 10.943-11.153v-5.972c-5.547-.529-8.934-4.649-10.943-11.153-2.002-6.484-2.28-14.437-2.066-20.577C105.214 5.894 100.233 0 93.5 0H24.508zM80 57.863C80 66.663 73.436 72 62.543 72H44a2 2 0 01-2-2V24a2 2 0 012-2h18.437c9.083 0 15.044 4.92 15.044 12.474 0 5.302-4.01 10.049-9.119 10.88v.277C75.317 46.394 80 51.21 80 57.863zM60.521 28.34H49.948v14.934h8.905c6.884 0 10.68-2.772 10.68-7.727 0-4.643-3.264-7.207-9.012-7.207zM49.948 49.2v16.458H60.91c7.167 0 10.964-2.876 10.964-8.281 0-5.406-3.903-8.178-11.425-8.178H49.948z\">\n      </path>\n    </symbol>\n    <symbol id=\"facebook\" viewBox=\"0 0 16 16\">\n      <path\n        d=\"M16 8.049c0-4.446-3.582-8.05-8-8.05C3.58 0-.002 3.603-.002 8.05c0 4.017 2.926 7.347 6.75 7.951v-5.625h-2.03V8.05H6.75V6.275c0-2.017 1.195-3.131 3.022-3.131.876 0 1.791.157 1.791.157v1.98h-1.009c-.993 0-1.303.621-1.303 1.258v1.51h2.218l-.354 2.326H9.25V16c3.824-.604 6.75-3.934 6.75-7.951z\" />\n    </symbol>\n    <symbol id=\"instagram\" viewBox=\"0 0 16 16\">\n      <path\n        d=\"M8 0C5.829 0 5.556.01 4.703.048 3.85.088 3.269.222 2.76.42a3.917 3.917 0 0 0-1.417.923A3.927 3.927 0 0 0 .42 2.76C.222 3.268.087 3.85.048 4.7.01 5.555 0 5.827 0 8.001c0 2.172.01 2.444.048 3.297.04.852.174 1.433.372 1.942.205.526.478.972.923 1.417.444.445.89.719 1.416.923.51.198 1.09.333 1.942.372C5.555 15.99 5.827 16 8 16s2.444-.01 3.298-.048c.851-.04 1.434-.174 1.943-.372a3.916 3.916 0 0 0 1.416-.923c.445-.445.718-.891.923-1.417.197-.509.332-1.09.372-1.942C15.99 10.445 16 10.173 16 8s-.01-2.445-.048-3.299c-.04-.851-.175-1.433-.372-1.941a3.926 3.926 0 0 0-.923-1.417A3.911 3.911 0 0 0 13.24.42c-.51-.198-1.092-.333-1.943-.372C10.443.01 10.172 0 7.998 0h.003zm-.717 1.442h.718c2.136 0 2.389.007 3.232.046.78.035 1.204.166 1.486.275.373.145.64.319.92.599.28.28.453.546.598.92.11.281.24.705.275 1.485.039.843.047 1.096.047 3.231s-.008 2.389-.047 3.232c-.035.78-.166 1.203-.275 1.485a2.47 2.47 0 0 1-.599.919c-.28.28-.546.453-.92.598-.28.11-.704.24-1.485.276-.843.038-1.096.047-3.232.047s-2.39-.009-3.233-.047c-.78-.036-1.203-.166-1.485-.276a2.478 2.478 0 0 1-.92-.598 2.48 2.48 0 0 1-.6-.92c-.109-.281-.24-.705-.275-1.485-.038-.843-.046-1.096-.046-3.233 0-2.136.008-2.388.046-3.231.036-.78.166-1.204.276-1.486.145-.373.319-.64.599-.92.28-.28.546-.453.92-.598.282-.11.705-.24 1.485-.276.738-.034 1.024-.044 2.515-.045v.002zm4.988 1.328a.96.96 0 1 0 0 1.92.96.96 0 0 0 0-1.92zm-4.27 1.122a4.109 4.109 0 1 0 0 8.217 4.109 4.109 0 0 0 0-8.217zm0 1.441a2.667 2.667 0 1 1 0 5.334 2.667 2.667 0 0 1 0-5.334z\" />\n    </symbol>\n    <symbol id=\"twitter\" viewBox=\"0 0 16 16\">\n      <path\n        d=\"M5.026 15c6.038 0 9.341-5.003 9.341-9.334 0-.14 0-.282-.006-.422A6.685 6.685 0 0 0 16 3.542a6.658 6.658 0 0 1-1.889.518 3.301 3.301 0 0 0 1.447-1.817 6.533 6.533 0 0 1-2.087.793A3.286 3.286 0 0 0 7.875 6.03a9.325 9.325 0 0 1-6.767-3.429 3.289 3.289 0 0 0 1.018 4.382A3.323 3.323 0 0 1 .64 6.575v.045a3.288 3.288 0 0 0 2.632 3.218 3.203 3.203 0 0 1-.865.115 3.23 3.23 0 0 1-.614-.057 3.283 3.283 0 0 0 3.067 2.277A6.588 6.588 0 0 1 .78 13.58a6.32 6.32 0 0 1-.78-.045A9.344 9.344 0 0 0 5.026 15z\" />\n    </symbol>\n  </svg>\n\n  <div class=\"container\">\n    <footer class=\"d-flex flex-wrap justify-content-between align-items-center py-2 my-2\">\n      <div class=\"col-md-4 d-flex align-items-center\">\n        <a class=\"mb-3 me-2 mb-md-0 text-body-secondary text-decoration-none lh-1\" href=\"#\">\n          <img src=\"img/favicon-32x32.png\" width=\"20\" height=\"20\" alt=\"\">\n        </a>\n        <span class=\"mb-3 mb-md-0 text-body-secondary\">&copy; 2023 Z Company, Inc</span>\n      </div>\n\n      <ul class=\"nav col-md-4 justify-content-end list-unstyled d-flex\">\n        <li class=\"ms-3\"><a class=\"text-body-secondary\" href=\"#\"><svg class=\"bi\" width=\"24\" height=\"24\">\n              <use xlink:href=\"#twitter\" />\n            </svg></a></li>\n        <li class=\"ms-3\"><a class=\"text-body-secondary\" href=\"#\"><svg class=\"bi\" width=\"24\" height=\"24\">\n              <use xlink:href=\"#instagram\" />\n            </svg></a></li>\n        <li class=\"ms-3\"><a class=\"text-body-secondary\" href=\"#\"><svg class=\"bi\" width=\"24\" height=\"24\">\n              <use xlink:href=\"#facebook\" />\n            </svg></a></li>\n      </ul>\n    </footer>\n  </div>\n</template>\n\n<script>\nimport router from './router'\n// import LegendaryCursor from \"legendary-cursor\";\n\nexport default {\n  name: 'App',\n  components: {\n    // Khai báo các component sử dụng trong ứng dụng\n  },\n  router, // Sử dụng router trong ứng dụng\n  mounted() {\n    // window.addEventListener(\"load\", () => {\n    //   LegendaryCursor.init();\n    // });\n  }\n}\n</script>\n\n<style>\n.note-text {\n  position: absolute;\n  top: 90px;\n  left: 20px;\n  font-size: 17px;\n  font-family: monospace;\n  color: white;\n  pointer-events: none;\n}\n\nbody {\n  overflow-x: hidden;\n  height: 100vh;\n  margin: 0px;\n}\n\nbody::-webkit-scrollbar {\n  width: 8px;\n  background-color: #f5f5f5;\n}\n\nbody::-webkit-scrollbar-thumb {\n  background-color: #888;\n  border-radius: 4px;\n}\n\nbody::-webkit-scrollbar-thumb:hover {\n  background-color: #555;\n}\n\nh1 {\n  position: absolute;\n  top: 0px;\n  left: 20px;\n}\n\n/* .nav-buttons {\n  display: flex;\n  justify-content: space-between;\n  position: absolute;\n  top: 70px;\n}\n\n.nav-button {\n  background-color: #ccc;\n  border: 1px solid black;\n  color: #333;\n  padding: 5px 10px;\n  text-align: center;\n  text-decoration: none;\n  font-size: 12px;\n  cursor: pointer;\n  flex-grow: 1;\n  margin: 0 0px;\n}\n\n\n.active {\n  background-color: #f00;\n  color: #fff;\n} */\n\n.x-axis-label {\n  position: absolute;\n  top: 90px;\n  right: 20px;\n  color: #ff0000;\n  font-size: 16px;\n}\n\n.y-axis-label {\n  position: absolute;\n  top: 110px;\n  right: 20px;\n  color: #00ff00;\n  font-size: 16px;\n}\n\n.z-axis-label {\n  position: absolute;\n  top: 130px;\n  right: 20px;\n  color: #0000ff;\n  font-size: 16px;\n}\n\n.x-axis-label,\n.y-axis-label,\n.z-axis-label {\n  z-index: 1000;\n}\n\n.x-color-box {\n  top: 92px;\n  right: 60px;\n  width: 30px;\n  height: 12px;\n  background-color: red;\n  display: inline-block;\n  position: absolute;\n  margin-right: 10px;\n}\n\n.y-color-box {\n  top: 112px;\n  right: 60px;\n  width: 30px;\n  height: 12px;\n  background-color: green;\n  display: inline-block;\n  position: absolute;\n  margin-right: 10px;\n}\n\n.z-color-box {\n\n  top: 132px;\n  right: 60px;\n  width: 30px;\n  height: 12px;\n  background-color: blue;\n  display: inline-block;\n  position: absolute;\n  margin-right: 10px;\n}\n\n#nav {\n  padding: 10px;\n  text-align: center;\n}\n\n#nav a {\n  font-size: 12px;\n  font-weight: bold;\n  color: #2c3e50;\n}\n\n#nav a.router-link-exact-active {\n  color: whitesmoke;\n  background: crimson;\n  border-radius: .5rem;\n}\n\n.dropdown-menu {\n  text-align: center;\n}\n\n/* #footers {\n  position: fixed;\n  bottom: 0px;\n} */\n\n#menuPanel {\n  position: absolute;\n  /* top: 100px; */\n  background-color: rgba(255, 255, 255, 0.5);\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n}\n\n#startButton {\n  height: 50px;\n  width: 200px;\n  margin: -25px -100px;\n  position: relative;\n  top: 50%;\n  left: 50%;\n  font-size: 32px;\n}\n\n#progressBar {\n  width: 500px;\n  height: 24px;\n  position: fixed;\n  left: 50%;\n  top: 110px;\n  margin-left: -250px;\n}\n\n.selectBox {\n  border: 1px solid red;\n  background-color: rgba(255, 0, 0, 0.3);\n  position: fixed;\n}\n\n#my-gui-container {\n  position: absolute;\n  top: 0px;\n  right: 120px;\n}\n\n#boatData {\n  position: absolute;\n  left: 20px;\n  bottom: 50px;\n  font-size: 17px;\n  font-family: monospace;\n  color: white;\n  pointer-events: none;\n}\n\n#locationData {\n  position: absolute;\n  left: 20px;\n  bottom: 20px;\n  font-size: 17px;\n  font-family: monospace;\n  color: white;\n  pointer-events: none;\n}\n\n#inputfordraw3dsurface {\n  position: absolute;\n  top: 100px;\n}\n\n.measurementLabel {\n  font-family: monospace;\n  background-color: black;\n  color: white;\n}\n</style>\n\n","<template>\n  <div>\n    <div class=\"note-text\">A-W-S-D to move. Space to jump. Esc to exit</div>\n\n    <nav-menu />\n    <div id=\"menuPanel\">\n      <button id=\"startButton\">Click to Start</button>\n    </div>\n  </div>\n</template>\n<script>\n//import * as MYCONST from '@/const.js';\nimport NavMenu from '@/components/NavMenu.vue'\nimport * as THREE from 'three'\nimport { PointerLockControls } from 'three/examples/jsm/controls/PointerLockControls'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport * as CANNON from 'cannon-es'\nexport default {\n  name: 'FollowCamPage',\n  components: {\n    NavMenu\n  },\n  mounted() {\n    const scene = new THREE.Scene()\n\n    var light1 = new THREE.SpotLight()\n    light1.position.set(2.5, 5, 2.5)\n    light1.angle = Math.PI / 8\n    light1.penumbra = 0.5\n    light1.castShadow = true\n    light1.shadow.mapSize.width = 1024\n    light1.shadow.mapSize.height = 1024\n    light1.shadow.camera.near = 0.5\n    light1.shadow.camera.far = 20\n    scene.add(light1)\n\n    var light2 = new THREE.SpotLight()\n    light2.position.set(-2.5, 5, 2.5)\n    light2.angle = Math.PI / 8\n    light2.penumbra = 0.5\n    light2.castShadow = true\n    light2.shadow.mapSize.width = 1024\n    light2.shadow.mapSize.height = 1024\n    light2.shadow.camera.near = 0.5\n    light2.shadow.camera.far = 20\n    scene.add(light2)\n\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.01,\n      100\n    )\n    camera.position.set(0, 1.4, 2.0)\n\n    const followCamPivot = new THREE.Object3D()\n    followCamPivot.rotation.order = 'YXZ'\n    const followCam = new THREE.Object3D()\n    followCam.position.z = 2\n    followCamPivot.add(followCam)\n\n    const renderer = new THREE.WebGLRenderer()\n    renderer.setSize(window.innerWidth, window.innerHeight)\n    //renderer.setClearColor(MYCONST.RENDERER_CLEAR_COLOR)\n    renderer.outputEncoding = THREE.sRGBEncoding\n    renderer.shadowMap.enabled = true\n    this.$el.appendChild(renderer.domElement)\n\n    const world = new CANNON.World()\n    world.gravity.set(0, -9.82, 0)\n\n    const groundMaterial = new CANNON.Material('groundMaterial')\n    const slipperyMaterial = new CANNON.Material('slipperyMaterial')\n    const slippery_ground_cm = new CANNON.ContactMaterial(\n      groundMaterial,\n      slipperyMaterial,\n      {\n        friction: 0,\n        restitution: 0.3,\n        contactEquationStiffness: 1e8,\n        contactEquationRelaxation: 3,\n      }\n    )\n    world.addContactMaterial(slippery_ground_cm)\n\n    // Character Collider\n    const characterCollider = new THREE.Object3D()\n    characterCollider.add(followCamPivot)\n    characterCollider.position.y = 3\n    scene.add(characterCollider)\n    const colliderShape = new CANNON.Sphere(0.5)\n    const colliderBody = new CANNON.Body({ mass: 1, material: slipperyMaterial })\n    colliderBody.addShape(colliderShape, new CANNON.Vec3(0, 0.5, 0))\n    colliderBody.addShape(colliderShape, new CANNON.Vec3(0, -0.5, 0))\n    colliderBody.position.set(\n      characterCollider.position.x,\n      characterCollider.position.y,\n      characterCollider.position.z\n    )\n    colliderBody.linearDamping = 0.95\n    colliderBody.angularFactor.set(0, 1, 0) // prevents rotation X,Z axis\n    world.addBody(colliderBody)\n\n    let mixer\n    let modelReady = false\n    let modelMesh\n    const animationActions = []\n    let activeAction\n    let lastAction\n\n    const gltfLoader = new GLTFLoader()\n    gltfLoader.load(\n      'models/eve.glb',\n      (gltf) => {\n        gltf.scene.traverse(function (child) {\n          if ((child).isMesh) {\n            let m = child\n            m.receiveShadow = true\n            m.castShadow = true\n            m.frustumCulled = false\n              ; (m).geometry.computeVertexNormals()\n            if ((child).material) {\n              const mat = (child).material\n                ; (mat).transparent = false\n                ; (mat).side = THREE.FrontSide\n            }\n          }\n        })\n        mixer = new THREE.AnimationMixer(gltf.scene)\n        let animationAction = mixer.clipAction(gltf.animations[0])\n        animationActions.push(animationAction)\n        activeAction = animationActions[0]\n        scene.add(gltf.scene)\n        modelMesh = gltf.scene\n        light1.target = modelMesh\n        light2.target = modelMesh\n\n        //add an animation from another file\n        gltfLoader.load(\n          'models/eve@walking.glb',\n          (gltf) => {\n            console.log('loaded Eve walking')\n            let animationAction = mixer.clipAction(gltf.animations[0])\n            animationActions.push(animationAction)\n\n            gltfLoader.load(\n              'models/eve@jump.glb',\n              (gltf) => {\n                console.log('loaded Eve jump')\n                gltf.animations[0].tracks.shift() //delete the specific track that moves the object up/down while jumping\n                let animationAction = mixer.clipAction(\n                  gltf.animations[0]\n                )\n                animationActions.push(animationAction)\n                //progressBar.style.display = 'none'\n                modelReady = true\n\n                setAction(animationActions[1], true)\n              },\n              (xhr) => {\n                if (xhr.lengthComputable) {\n                  //const percentComplete = (xhr.loaded / xhr.total) * 100\n                  //progressBar.value = percentComplete\n                  //progressBar.style.display = 'block'\n                }\n              },\n              (error) => {\n                console.log(error)\n              }\n            )\n          },\n          (xhr) => {\n            if (xhr.lengthComputable) {\n              //const percentComplete = (xhr.loaded / xhr.total) * 100\n              //progressBar.value = percentComplete\n              //progressBar.style.display = 'block'\n            }\n          },\n          (error) => {\n            console.log(error)\n          }\n        )\n      },\n      (xhr) => {\n        if (xhr.lengthComputable) {\n          //const percentComplete = (xhr.loaded / xhr.total) * 100\n          //progressBar.value = percentComplete\n          //progressBar.style.display = 'block'\n        }\n      },\n      (error) => {\n        console.log(error)\n      }\n    )\n\n    const setAction = (toAction, loop) => {\n      if (toAction != activeAction) {\n        lastAction = activeAction\n        activeAction = toAction\n        lastAction.fadeOut(0.1)\n        activeAction.reset()\n        activeAction.fadeIn(0.1)\n        activeAction.play()\n        if (!loop) {\n          activeAction.clampWhenFinished = true\n          activeAction.loop = THREE.LoopOnce\n        }\n      }\n    }\n\n    let moveForward = false\n    let moveBackward = false\n    let moveLeft = false\n    let moveRight = false\n    let canJump = true\n    const contactNormal = new CANNON.Vec3()\n    const upAxis = new CANNON.Vec3(0, 1, 0)\n    colliderBody.addEventListener('collide', function (e) {\n      const contact = e.contact\n      if (contact.bi.id == colliderBody.id) {\n        contact.ni.negate(contactNormal)\n      } else {\n        contactNormal.copy(contact.ni)\n      }\n      if (contactNormal.dot(upAxis) > 0.5) {\n        if (!canJump) {\n          setAction(animationActions[1], true)\n        }\n        canJump = true\n      }\n    })\n\n    const planeGeometry = new THREE.PlaneGeometry(100, 100)\n    const texture = new THREE.TextureLoader().load('img/grid.png')\n    const plane = new THREE.Mesh(\n      planeGeometry,\n      new THREE.MeshPhongMaterial({ map: texture })\n    )\n    plane.rotateX(-Math.PI / 2)\n    plane.receiveShadow = true\n    scene.add(plane)\n    const planeShape = new CANNON.Plane()\n    const planeBody = new CANNON.Body({ mass: 0, material: groundMaterial })\n    planeBody.addShape(planeShape)\n    planeBody.quaternion.setFromAxisAngle(new CANNON.Vec3(1, 0, 0), -Math.PI / 2)\n    world.addBody(planeBody)\n\n    const boxes = []\n    const boxMeshes = []\n    for (let i = 0; i < 10; i++) {\n      const halfExtents = new CANNON.Vec3(\n        Math.random() * 2,\n        Math.random() * 2,\n        Math.random() * 2\n      )\n      const boxShape = new CANNON.Box(halfExtents)\n      const boxGeometry = new THREE.BoxGeometry(\n        halfExtents.x * 2,\n        halfExtents.y * 2,\n        halfExtents.z * 2\n      )\n      const x = (Math.random() - 0.5) * 20\n      const y = 2 + i * 2\n      const z = (Math.random() - 0.5) * 20\n      const boxBody = new CANNON.Body({ mass: 1, material: groundMaterial })\n      boxBody.addShape(boxShape)\n      const boxMesh = new THREE.Mesh(boxGeometry, new THREE.MeshStandardMaterial())\n      world.addBody(boxBody)\n      scene.add(boxMesh)\n      boxBody.position.set(x, y, z)\n      boxMesh.castShadow = true\n      boxMesh.receiveShadow = true\n      boxes.push(boxBody)\n      boxMeshes.push(boxMesh)\n    }\n\n    const menuPanel = document.getElementById('menuPanel')\n    const startButton = document.getElementById('startButton')\n    startButton.addEventListener(\n      'click',\n      () => {\n        controls.lock()\n      },\n      false\n    )\n\n    const controls = new PointerLockControls(camera, renderer.domElement)\n\n    controls.addEventListener('lock', () => {\n      startButton.style.display = 'none'\n      menuPanel.style.display = 'none'\n\n      document.addEventListener('keydown', onDocumentKey, false)\n      document.addEventListener('keyup', onDocumentKey, false)\n\n      renderer.domElement.addEventListener(\n        'mousemove',\n        onDocumentMouseMove,\n        false\n      )\n      renderer.domElement.addEventListener(\n        'mousewheel',\n        onDocumentMouseWheel,\n        false\n      )\n    })\n\n    controls.addEventListener('unlock', () => {\n      menuPanel.style.display = 'block'\n\n      document.removeEventListener('keydown', onDocumentKey, false)\n      document.removeEventListener('keyup', onDocumentKey, false)\n\n      renderer.domElement.removeEventListener(\n        'mousemove',\n        onDocumentMouseMove,\n        false\n      )\n      renderer.domElement.removeEventListener(\n        'mousewheel',\n        onDocumentMouseWheel,\n        false\n      )\n\n      setTimeout(() => {\n        startButton.style.display = 'block'\n      }, 1000)\n    })\n\n    window.addEventListener('resize', onWindowResize, false)\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight\n      camera.updateProjectionMatrix()\n      renderer.setSize(window.innerWidth, window.innerHeight)\n      render()\n    }\n\n    const onDocumentMouseMove = (e) => {\n      followCamPivot.rotation.y -= e.movementX * 0.002\n      followCamPivot.rotation.x -= e.movementY * 0.002\n      return false\n    }\n\n    const onDocumentMouseWheel = (e) => {\n      let newVal = followCam.position.z + e.deltaY * 0.05\n      if (newVal > 0.25 && newVal < 10) {\n        followCam.position.z = newVal\n      }\n      return false\n    }\n\n    const keyMap = {}\n    const onDocumentKey = (e) => {\n      keyMap[e.code] = e.type === 'keydown'\n\n      if (controls.isLocked) {\n        moveForward = keyMap['KeyW']\n        moveBackward = keyMap['KeyS']\n        moveLeft = keyMap['KeyA']\n        moveRight = keyMap['KeyD']\n\n        if (keyMap['Space']) {\n          if (canJump === true) {\n            colliderBody.velocity.y = 10\n            setAction(animationActions[2], false)\n          }\n          canJump = false\n        }\n      }\n    }\n\n    const inputVelocity = new THREE.Vector3()\n    const velocity = new CANNON.Vec3()\n    const euler = new THREE.Euler()\n    const quat = new THREE.Quaternion()\n    const camTo = new THREE.Vector3()\n    const targetQuaternion = new THREE.Quaternion()\n    let distance = 0\n\n    // const stats = new Stats()\n    // document.body.appendChild(stats.dom)\n\n    const clock = new THREE.Clock()\n    let delta = 0\n\n    //const cannonDebugRenderer = new CannonDebugRenderer(scene, world)\n\n    function animate() {\n      requestAnimationFrame(animate)\n\n      if (modelReady) {\n        if (canJump) {\n          //walking\n          mixer.update(delta * distance * 5)\n        } else {\n          //were in the air\n          mixer.update(delta)\n        }\n        const p = characterCollider.position\n        p.y -= 1\n        modelMesh.position.y = characterCollider.position.y\n        distance = modelMesh.position.distanceTo(p)\n\n        const rotationMatrix = new THREE.Matrix4()\n        rotationMatrix.lookAt(p, modelMesh.position, modelMesh.up)\n        targetQuaternion.setFromRotationMatrix(rotationMatrix)\n\n        if (!modelMesh.quaternion.equals(targetQuaternion)) {\n          modelMesh.quaternion.rotateTowards(targetQuaternion, delta * 10)\n        }\n\n        if (canJump) {\n          inputVelocity.set(0, 0, 0)\n\n          if (moveForward) {\n            inputVelocity.z = -10 * delta\n          }\n          if (moveBackward) {\n            inputVelocity.z = 10 * delta\n          }\n\n          if (moveLeft) {\n            inputVelocity.x = -10 * delta\n          }\n          if (moveRight) {\n            inputVelocity.x = 10 * delta\n          }\n\n          // apply camera rotation to inputVelocity\n          euler.y = followCamPivot.rotation.y\n          euler.order = 'XYZ'\n          quat.setFromEuler(euler)\n          inputVelocity.applyQuaternion(quat)\n        }\n\n        modelMesh.position.lerp(characterCollider.position, 0.1)\n      }\n      velocity.set(inputVelocity.x, inputVelocity.y, inputVelocity.z)\n      colliderBody.applyImpulse(velocity)\n\n      delta = Math.min(clock.getDelta(), 0.1)\n      world.step(delta)\n\n      //cannonDebugRenderer.update()\n\n      characterCollider.position.set(\n        colliderBody.position.x,\n        colliderBody.position.y,\n        colliderBody.position.z\n      )\n      boxes.forEach((b, i) => {\n        boxMeshes[i].position.set(b.position.x, b.position.y, b.position.z)\n        boxMeshes[i].quaternion.set(\n          b.quaternion.x,\n          b.quaternion.y,\n          b.quaternion.z,\n          b.quaternion.w\n        )\n      })\n\n      followCam.getWorldPosition(camTo)\n      camera.position.lerpVectors(camera.position, camTo, 0.1)\n\n      render()\n\n      // stats.update()\n    }\n\n    function render() {\n      renderer.render(scene, camera)\n    }\n\n    animate()\n  }\n}\n</script>","<template>\n  <div class=\"x-color-box\"></div>\n  <div class=\"y-color-box\"></div>\n  <div class=\"z-color-box\"></div>\n  <div class=\"x-axis-label\">X Axis</div>\n  <div class=\"y-axis-label\">Y Axis</div>\n  <div class=\"z-axis-label\">Z Axis</div>\n  <div id=\"nav\">\n    <nav class=\"navbar navbar-expand-lg bg-body-tertiary rounded\" aria-label=\"Eleventh navbar example\">\n      <div class=\"container-fluid\">\n        <a class=\"navbar-brand col-lg-1 me-0\" href=\"#\">\n          <img src=\"img/favicon-32x32.png\" width=\"40\" height=\"40\" alt=\"\">\n           World\n        </a>\n        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <div class=\"navbar-nav me-auto mb-0 mb-lg-0\">\n            <router-link class=\"nav-item active nav-link\" to=\"/\">Follow Cam</router-link>\n            <li class=\"nav-item dropdown\">\n              <a class=\"nav-link dropdown-toggle\" href=\"#\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Dropdown</a>\n              <ul class=\"dropdown-menu\">\n                <router-link class=\"dropdown-item nav-item nav-link\" to=\"/draw3dsurface\">Draw3D Surface</router-link>\n                <router-link class=\"dropdown-item nav-item nav-link\" to=\"/rainbow\">Rainbow Light</router-link>\n                <router-link class=\"dropdown-item nav-item nav-link\" to=\"/drawdimen\">Draw Dimension</router-link>\n              </ul>\n            </li>\n            <li class=\"nav-item dropdown\">\n              <a class=\"nav-link dropdown-toggle\" href=\"#\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">MeshBVH</a>\n              <ul class=\"dropdown-menu\">\n                <router-link class=\"dropdown-item nav-item nav-link\" to=\"/edgeprojection\">Edge Projection</router-link>\n                <router-link class=\"dropdown-item nav-item nav-link\" to=\"/selectarea\">Select Area</router-link>\n                <router-link class=\"dropdown-item nav-item nav-link\" to=\"/charactermovement\">Character Movement</router-link>\n              </ul>\n            </li>\n            <router-link class=\"nav-item nav-link\" to=\"/water\">Water Boat</router-link>\n            <router-link class=\"nav-item nav-link\" to=\"/canonjs\">Cannon JS</router-link>\n            <router-link class=\"nav-item nav-link\" to=\"/convexobject\">Convex Object</router-link>\n            <router-link class=\"nav-item nav-link\" to=\"/multicoloredsphere\">Multicolored Sphere</router-link>\n            <router-link class=\"nav-item nav-link\" to=\"/particlessystem\">Particles system</router-link>\n            <router-link class=\"nav-item nav-link\" to=\"/selectbox\">Select Box</router-link>\n            <router-link class=\"nav-item nav-link\" to=\"/edgedetect\">Edge Detect</router-link>\n            <router-link class=\"nav-item nav-link\" to=\"/shadersocean\">Shaders Ocean</router-link>\n            <router-link class=\"nav-item nav-link\" to=\"/game\">Shoot Game</router-link>\n            <router-link class=\"nav-item nav-link\" to=\"/temp\">Temp Page</router-link>\n          </div>\n        </div>\n      </div>\n    </nav>\n  </div>\n</template>\n","import { render } from \"./NavMenu.vue?vue&type=template&id=77967c22\"\nconst script = {}\n\nimport exportComponent from \"G:\\\\Threejs\\\\VuejsThreejsForDemo-main\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./FollowCamPage.vue?vue&type=template&id=494f4f5d\"\nimport script from \"./FollowCamPage.vue?vue&type=script&lang=js\"\nexport * from \"./FollowCamPage.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"G:\\\\Threejs\\\\VuejsThreejsForDemo-main\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n\n    <nav-menu />\n  </div>\n</template>\n<script>\nimport * as MYCONST from '@/const.js';\nimport NavMenu from '@/components/NavMenu.vue'\nimport * as THREE from 'three'\n// import { OrbitControls } from 'three/addons/controls/OrbitControls.js';\n// import Stats from 'three/addons/libs/stats.module.js';\nimport { SelectionBox } from 'three/addons/interactive/SelectionBox.js';\nimport { SelectionHelper } from 'three/addons/interactive/SelectionHelper.js';\n\nexport default {\n  name: 'SelectBoxPage',\n  components: {\n    NavMenu\n  },\n  mounted() {\n    let camera, scene, renderer;\n    let currentpage = this.$el;\n    init();\n    animate();\n\n    function init() {\n      camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 1, 5000 );\n      camera.position.z = 1000;\n      scene = new THREE.Scene();\n      //scene.background = new THREE.Color( 0xf0f0f0 );\n      scene.add( new THREE.AmbientLight( 0x505050 ) );\n\n      const light = new THREE.SpotLight( 0xffffff, 1.5 );\n      light.position.set( 0, 500, 2000 );\n      light.angle = Math.PI / 9;\n\n      light.castShadow = true;\n      light.shadow.camera.near = 1000;\n      light.shadow.camera.far = 4000;\n      light.shadow.mapSize.width = 1024;\n      light.shadow.mapSize.height = 1024;\n\n      scene.add( light );\n\n      const geometry = new THREE.BoxGeometry( 20, 20, 20 );\n\n      for ( let i = 0; i < 400; i ++ ) {\n        const object = new THREE.Mesh( geometry, new THREE.MeshLambertMaterial( { color: Math.random() * 0xffffff } ) );\n\n        object.position.x = Math.random() * 1600 - 800;\n        object.position.y = Math.random() * 900 - 450;\n        object.position.z = Math.random() * 900 - 500;\n\n        object.rotation.x = Math.random() * 2 * Math.PI;\n        object.rotation.y = Math.random() * 2 * Math.PI;\n        object.rotation.z = Math.random() * 2 * Math.PI;\n\n        object.scale.x = Math.random() * 2 + 1;\n        object.scale.y = Math.random() * 2 + 1;\n        object.scale.z = Math.random() * 2 + 1;\n\n        object.castShadow = true;\n        object.receiveShadow = true;\n\n        scene.add( object );\n      }\n\n      renderer = new THREE.WebGLRenderer( { antialias: true } );\n      renderer.setPixelRatio( window.devicePixelRatio );\n      renderer.setSize( window.innerWidth, window.innerHeight );\n\n      renderer.shadowMap.enabled = true;\n      renderer.shadowMap.type = THREE.PCFShadowMap;\n      renderer.setClearColor(MYCONST.RENDERER_CLEAR_COLOR);\n      // const controls = new OrbitControls( camera, renderer.domElement );\n      currentpage.appendChild( renderer.domElement );\n\n      // stats = new Stats();\n      // container.appendChild( stats.dom );\n\n      window.addEventListener( 'resize', onWindowResize );\n    }\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize( window.innerWidth, window.innerHeight );\n    }\n\n    function animate() {\n      requestAnimationFrame( animate );\n      // controls.update();\n      render();\n    }\n\n    function render() {\n      renderer.render( scene, camera );\n    }\n\n    const selectionBox = new SelectionBox( camera, scene );\n    const helper = new SelectionHelper( renderer, 'selectBox' );\n\n    currentpage.addEventListener( 'pointerdown', function ( event ) {\n      for ( const item of selectionBox.collection ) {\n        item.material.emissive.set( 0x000000 );\n      }\n\n      selectionBox.startPoint.set(\n        ( event.clientX / window.innerWidth ) * 2 - 1,\n        - ( (event.clientY - 82)/ window.innerHeight ) * 2 + 1,\n        0.5 );\n    } );\n\n    currentpage.addEventListener( 'pointermove', function ( event ) {\n      if ( helper.isDown ) {\n        for ( let i = 0; i < selectionBox.collection.length; i ++ ) {\n          selectionBox.collection[ i ].material.emissive.set( 0x000000 );\n        }\n\n        selectionBox.endPoint.set(\n          ( event.clientX / window.innerWidth ) * 2 - 1,\n          - ( (event.clientY - 82) / window.innerHeight ) * 2 + 1,\n          0.5 );\n\n        const allSelected = selectionBox.select();\n\n        for ( let i = 0; i < allSelected.length; i ++ ) {\n          allSelected[ i ].material.emissive.set( 0xff0000 );\n        }\n      }\n    } );\n\n    currentpage.addEventListener( 'pointerup', function ( event ) {\n      selectionBox.endPoint.set(\n        ( event.clientX / window.innerWidth ) * 2 - 1,\n        - ( (event.clientY - 82) / window.innerHeight ) * 2 + 1,\n        0.5 );\n\n      const allSelected = selectionBox.select();\n\n      for ( let i = 0; i < allSelected.length; i ++ ) {\n        allSelected[ i ].material.emissive.set( 0xff0000 );\n      }\n\n    });\n  },\n}\n</script>","export const RENDERER_CLEAR_COLOR = 0xcccccc;\r\nexport const TOLERANCE = 0.0001;","import { render } from \"./SelectBoxPage.vue?vue&type=template&id=f9d83636\"\nimport script from \"./SelectBoxPage.vue?vue&type=script&lang=js\"\nexport * from \"./SelectBoxPage.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"G:\\\\Threejs\\\\VuejsThreejsForDemo-main\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n\n    <nav-menu />\n  </div>\n</template>\n<script>\nimport * as MYCONST from '@/const.js';\nimport NavMenu from '@/components/NavMenu.vue'\nimport * as THREE from 'three'\nimport { OrbitControls } from 'three/addons/controls/OrbitControls.js';\nexport default {\n  name: 'MulticoloredSpherePage',\n  components: {\n    NavMenu\n  },\n  mounted() {\n      const scene = new THREE.Scene();\n      \n      const camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\n      const renderer = new THREE.WebGLRenderer();\n      renderer.setClearColor(MYCONST.RENDERER_CLEAR_COLOR);\n      renderer.setSize( window.innerWidth, window.innerHeight );\n      \n      this.$el.appendChild( renderer.domElement );\n\n      const controls = new OrbitControls( camera, renderer.domElement );\n\n      const axesHelper = new THREE.AxesHelper( 10 );\n      scene.add( axesHelper );\n\n      // const geometry = new THREE.BoxGeometry();\n      // const material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\n      // const cube = new THREE.Mesh( geometry, material );\n      // scene.add( cube );\n      const size = 10;\n      const divisions = 10;\n\n      const gridHelper = new THREE.GridHelper( size, divisions );\n      scene.add( gridHelper );\n      // const geometryp = new THREE.PlaneGeometry( 10, 10 );\n      // const materialp = new THREE.MeshBasicMaterial( {color: 0x444400, side: THREE.DoubleSide} );\n      // const plane = new THREE.Mesh( geometryp, materialp );\n      // plane.rotateX(Math.PI/2);\n      // scene.add( plane );\n\n      camera.position.set(5,5,5);\n\n      var sphereMesh;\n      const createsphere = function () {\n        const radius = 3;\n        const widthSegments = 32;\n        const heightSegments = 32;\n        const sphereGeometry = new THREE.SphereGeometry(radius, widthSegments, heightSegments);\n        var rainbowColors = [\n          0xff0000, // Đỏ\n          0xffa500, // Cam\n          0xffff00, // Vàng\n          0x00ff00, // Xanh lá\n          0x0000ff, // Xanh dương\n          0x4b0082, // Xanh da trời\n          0xee82ee  // Tím\n        ];\n        const colors = new Array(sphereGeometry.attributes.position.count).fill().map(() =>\n            new THREE.Color().setHex(rainbowColors[Math.floor(Math.random() * rainbowColors.length)])\n        );\n        const colorAttribute = new THREE.Float32BufferAttribute(colors.flatMap(color => color.toArray()), 3);\n        sphereGeometry.setAttribute('color', colorAttribute);\n        const material = new THREE.MeshBasicMaterial({ vertexColors: true });\n        sphereMesh = new THREE.Mesh(sphereGeometry, material);\n        // sphereMesh.position.set(0,3,0);\n        scene.add(sphereMesh);\n      }\n      createsphere();\n\n      const animate = function () {\n        requestAnimationFrame( animate );\n        controls.update();\n        sphereMesh.rotation.y += 0.02;\n        sphereMesh.rotation.x += 0.02;\n        renderer.render( scene, camera );\n      };\n      animate();\n      function onWindowResize() {\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n        renderer.setSize(window.innerWidth, window.innerHeight);\n      }\n      window.addEventListener('resize', onWindowResize);\n    }\n  }\n</script>\n","import { render } from \"./MulticoloredSpherePage.vue?vue&type=template&id=77b042b0\"\nimport script from \"./MulticoloredSpherePage.vue?vue&type=script&lang=js\"\nexport * from \"./MulticoloredSpherePage.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"G:\\\\Threejs\\\\VuejsThreejsForDemo-main\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <div class=\"note-text\">Using mouse move and mouse click</div>\n\n    <nav-menu />\n  </div>\n</template>\n<script>\nimport * as MYCONST from '@/const.js';\nimport NavMenu from '@/components/NavMenu.vue'\nimport * as THREE from 'three'\nimport { OrbitControls } from 'three/addons/controls/OrbitControls.js';\n//import TWEEN from '@tweenjs/tween.js'\nexport default {\n  name: 'ParticlesSystemPage',\n  components: {\n    NavMenu\n  },\n  mounted() {\n    // Khởi tạo scene, camera, renderer\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(5,1,5);\n    var renderer = new THREE.WebGLRenderer();\n    renderer.setClearColor(MYCONST.RENDERER_CLEAR_COLOR);\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    this.$el.appendChild(renderer.domElement);\n\n    const controls = new OrbitControls( camera, renderer.domElement );\n\n    const axesHelper = new THREE.AxesHelper( 10 );\n    scene.add( axesHelper );\n\n    // const geometryp = new THREE.PlaneGeometry( 2, 2 );\n    // const materialp = new THREE.MeshBasicMaterial( {color: 0xff0, side: THREE.DoubleSide} );\n    // const plane = new THREE.Mesh( geometryp, materialp );\n    // plane.rotateX(Math.PI/2);\n    // scene.add( plane );\n    const size = 10;\n    const divisions = 10;\n\n    const gridHelper = new THREE.GridHelper( size, divisions );\n    scene.add( gridHelper );\n\n    const particleGeometry = new THREE.BufferGeometry();\n\n    // generate random positions for each particle\n    const positions = [];\n    // const colors = [];\n    for (let i = 0; i < 100; i++) {\n      positions.push(\n        THREE.MathUtils.randFloatSpread(20),\n        THREE.MathUtils.randFloatSpread(20),\n        THREE.MathUtils.randFloatSpread(20)\n      );\n      // // add a random color for the particle\n      // colors.push(\n      //   Math.random(), // r\n      //   Math.random(), // g\n      //   Math.random(), // b\n      //   1 // a\n      // );\n    }\n\n    // create a buffer attribute for the particle positions\n    const positionAttribute = new THREE.Float32BufferAttribute(positions, 3);\n    particleGeometry.setAttribute('position', positionAttribute);\n\n    // // create a buffer attribute for the particle colors\n    // const colorAttribute = new THREE.Float32BufferAttribute(colors, 4);\n    // particleGeometry.setAttribute('color', colorAttribute);\n\n    // create a particle material\n    const particleMaterial = new THREE.PointsMaterial();\n\n    // create a particle system and add it to the scene\n    const particleSystem = new THREE.Points(particleGeometry, particleMaterial);\n    scene.add(particleSystem);\n\n    // // Khởi tạo audio listener\n    // var listener = new THREE.AudioListener();\n    // camera.add(listener);\n\n    // // Tải âm thanh\n    // var audioLoader = new THREE.AudioLoader();\n    // var sound;\n    // audioLoader.load('sound.mp3', function(buffer) {\n    //     sound = new THREE.Audio(listener);\n    //     sound.setBuffer(buffer);\n    //     sound.setLoop(true);\n    //     sound.setVolume(0.5);\n    //     sound.play();\n    // });\n\n    // Thêm sự kiện mousemove để thay đổi background\n    document.addEventListener('mousemove', function(event) {\n        var mouseX = event.clientX;\n        var mouseY = (event.clientY - 82);\n\n        // Di chuyển particle theo vị trí của chuột\n        particleSystem.rotation.x += 0.02;\n        particleSystem.rotation.y += 0.02;\n        particleSystem.position.x = (mouseX / window.innerWidth) * 2 - 1;\n        particleSystem.position.y = -(mouseY / window.innerHeight) * 2 + 1;\n\n        // Thay đổi màu nền dựa trên vị trí của particle\n        var color = new THREE.Color(0xffffff);\n        color.r = particleSystem.position.x * 0.5 + 0.5;\n        color.g = particleSystem.position.y * 0.5 + 0.5;\n        renderer.setClearColor(color);\n    });\n    var bSplat = false;\n    document.addEventListener('click', (event) => {\n      // calculate mouse position in normalized device coordinates\n      const mouse = new THREE.Vector2();\n      mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n      mouse.y = -((event.clientY - 82) / window.innerHeight) * 2 + 1;\n\n      // unproject mouse position into particleSystem's local coordinate system\n      const raycaster = new THREE.Raycaster();\n      raycaster.setFromCamera(mouse, camera);\n      const particleSystemWorldPosition = new THREE.Vector3();\n      particleSystem.getWorldPosition(particleSystemWorldPosition);\n      const particleSystemWorldQuaternion = new THREE.Quaternion();\n      particleSystem.getWorldQuaternion(particleSystemWorldQuaternion);\n      const particleSystemWorldScale = new THREE.Vector3();\n      particleSystem.getWorldScale(particleSystemWorldScale);\n      const particleSystemMatrixWorld = new THREE.Matrix4();\n      particleSystemMatrixWorld.compose(\n        particleSystemWorldPosition,\n        particleSystemWorldQuaternion,\n        particleSystemWorldScale\n      );\n      var particleSystemInverseMatrixWorld = new THREE.Matrix4();\n      particleSystemInverseMatrixWorld = particleSystemMatrixWorld;\n      particleSystemInverseMatrixWorld.invert();\n      const particleSystemLocalRaycaster = new THREE.Raycaster();\n      particleSystemLocalRaycaster.ray.copy(raycaster.ray);\n      particleSystemLocalRaycaster.ray.applyMatrix4(particleSystemInverseMatrixWorld);\n      const intersection = particleSystemLocalRaycaster.intersectObject(particleSystem);\n      if (intersection.length > 0) {\n        // update particle positions\n        const positionAttribute = particleGeometry.getAttribute('position');\n        if (!bSplat) {\n          const array0 = new Float32Array(positionAttribute.count * 3);\n          for (let i = 0; i < positionAttribute.count * 3; i+=3) {\n            array0[i] = positionAttribute.getX(i/3);\n            array0[i+1] = 0;\n            array0[i+2] = positionAttribute.getZ(i/3);\n\n          }\n          positionAttribute.array = array0; // cập nhật vị trí mới\n          positionAttribute.needsUpdate = true; // cập nhật thay đổi\n          bSplat = true;\n        } else {\n          const array1 = new Float32Array(positionAttribute.count * 3);\n          for (let i = 0; i < positionAttribute.count * 3; i++) {\n            array1[i] = THREE.MathUtils.randFloatSpread(20);\n          }\n          positionAttribute.array = array1; // cập nhật vị trí mới\n          positionAttribute.needsUpdate = true; // cập nhật thay đổi\n          bSplat = false;\n        }\n\n      }\n    });\n\n    // Render scene\n    function animate() {\n        requestAnimationFrame(animate);\n        controls.update();\n        //TWEEN.update();\n        renderer.render(scene, camera);\n    }\n    animate();\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n    window.addEventListener('resize', onWindowResize);\n  }\n}\n</script>","import { render } from \"./ParticlesSystemPage.vue?vue&type=template&id=4cdf5f50\"\nimport script from \"./ParticlesSystemPage.vue?vue&type=script&lang=js\"\nexport * from \"./ParticlesSystemPage.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"G:\\\\Threejs\\\\VuejsThreejsForDemo-main\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <div class=\"note-text\">Hello</div>\n    <nav-menu />\n    <div id=\"my-gui-container\"></div>\n  </div>\n</template>\n<script>\nimport NavMenu from '@/components/NavMenu.vue';\nimport * as MYCONST from '@/const.js';\nimport * as THREE from 'three'\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\nimport { OrbitControls } from 'three/addons/controls/OrbitControls.js';\n\nlet gui;\nexport default {\n  name: 'TempPage',\n  components: {\n    NavMenu\n  },\n  unmounted() {\n    if (gui) gui.destroy();\n    gui = null;\n  },\n  mounted() {\n    const scene = new THREE.Scene();\n\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setClearColor(MYCONST.RENDERER_CLEAR_COLOR);\n    renderer.setSize(window.innerWidth, window.innerHeight);\n\n    this.$el.appendChild(renderer.domElement);\n\n    const controls = new OrbitControls(camera, renderer.domElement);\n\n    const axesHelper = new THREE.AxesHelper(10);\n    scene.add(axesHelper);\n\n    camera.position.set(5, 5, 5);\n\n\n    gui = new GUI({ autoPlace: false });\n    var customContainer = document.getElementById('my-gui-container');\n    customContainer.appendChild(gui.domElement);\n\n    const animate = function () {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n    window.addEventListener('resize', onWindowResize);\n  }\n}\n</script>\n","import { render } from \"./TempPage.vue?vue&type=template&id=3647e56b\"\nimport script from \"./TempPage.vue?vue&type=script&lang=js\"\nexport * from \"./TempPage.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"G:\\\\Threejs\\\\VuejsThreejsForDemo-main\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div>\n\n        <nav-menu />\n        <div id=\"my-gui-container\"></div>\n        <!-- <div id=\"my-stats-container\"></div> -->\n    </div>\n</template>\n<script>\nimport * as MYCONST from '@/const.js';\nimport NavMenu from '@/components/NavMenu.vue'\nimport * as THREE from 'three'\nimport { OrbitControls } from 'three/addons/controls/OrbitControls.js';\n// import Stats from 'three/examples/jsm/libs/stats.module'\nimport { GUI } from 'dat.gui'\nimport * as CANNON from 'cannon-es'\n\nlet gui;\nexport default {\n    name: 'APage',\n    components: {\n        NavMenu\n    },\n    unmounted() {\n        if (gui) gui.destroy();\n        gui = null;\n    },\n    mounted() {\n        const scene = new THREE.Scene();\n\n        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n        const renderer = new THREE.WebGLRenderer();\n        renderer.setClearColor(MYCONST.RENDERER_CLEAR_COLOR);\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        renderer.shadowMap.enabled = true\n        this.$el.appendChild(renderer.domElement);\n\n        const controls = new OrbitControls(camera, renderer.domElement);\n        controls.enableDamping = true\n        controls.target.y = 0.5\n\n        const axesHelper = new THREE.AxesHelper(10);\n        scene.add(axesHelper);\n\n        camera.position.set(0, 4, 6)\n        //\n        const light1 = new THREE.SpotLight()\n        light1.position.set(2.5, 5, 5)\n        light1.angle = Math.PI / 4\n        light1.penumbra = 0.5\n        light1.castShadow = true\n        light1.shadow.mapSize.width = 1024\n        light1.shadow.mapSize.height = 1024\n        light1.shadow.camera.near = 0.5\n        light1.shadow.camera.far = 20\n        scene.add(light1)\n\n        const light2 = new THREE.SpotLight()\n        light2.position.set(-2.5, 5, 5)\n        light2.angle = Math.PI / 4\n        light2.penumbra = 0.5\n        light2.castShadow = true\n        light2.shadow.mapSize.width = 1024\n        light2.shadow.mapSize.height = 1024\n        light2.shadow.camera.near = 0.5\n        light2.shadow.camera.far = 20\n        scene.add(light2)\n\n        const world = new CANNON.World()\n        world.gravity.set(0, -9.82, 0)\n\n        const normalMaterial = new THREE.MeshNormalMaterial()\n        const phongMaterial = new THREE.MeshPhongMaterial()\n\n        const cubeGeometry = new THREE.BoxGeometry(1, 1, 1)\n        const cubeMesh = new THREE.Mesh(cubeGeometry, normalMaterial)\n        cubeMesh.position.x = -3\n        cubeMesh.position.y = 3\n        cubeMesh.castShadow = true\n        scene.add(cubeMesh)\n        const cubeShape = new CANNON.Box(new CANNON.Vec3(0.5, 0.5, 0.5))\n        const cubeBody = new CANNON.Body({ mass: 1 })\n        cubeBody.addShape(cubeShape)\n        cubeBody.position.x = cubeMesh.position.x\n        cubeBody.position.y = cubeMesh.position.y\n        cubeBody.position.z = cubeMesh.position.z\n        world.addBody(cubeBody)\n\n        const sphereGeometry = new THREE.SphereGeometry()\n        const sphereMesh = new THREE.Mesh(sphereGeometry, normalMaterial)\n        sphereMesh.position.x = -1\n        sphereMesh.position.y = 3\n        sphereMesh.castShadow = true\n        scene.add(sphereMesh)\n        const sphereShape = new CANNON.Sphere(1)\n        const sphereBody = new CANNON.Body({ mass: 1 })\n        sphereBody.addShape(sphereShape)\n        sphereBody.position.x = sphereMesh.position.x\n        sphereBody.position.y = sphereMesh.position.y\n        sphereBody.position.z = sphereMesh.position.z\n        world.addBody(sphereBody)\n\n        const icosahedronGeometry = new THREE.IcosahedronGeometry(1, 0)\n        const icosahedronMesh = new THREE.Mesh(icosahedronGeometry, normalMaterial)\n        icosahedronMesh.position.x = 1\n        icosahedronMesh.position.y = 3\n        icosahedronMesh.castShadow = true\n        scene.add(icosahedronMesh)\n        const position = (\n            icosahedronMesh.geometry.attributes.position\n        ).array\n        const icosahedronPoints = []\n        for (let i = 0; i < position.length; i += 3) {\n            icosahedronPoints.push(\n                new CANNON.Vec3(position[i], position[i + 1], position[i + 2])\n            )\n        }\n        const icosahedronFaces = []\n        for (let i = 0; i < position.length / 3; i += 3) {\n            icosahedronFaces.push([i, i + 1, i + 2])\n        }\n        const icosahedronShape = new CANNON.ConvexPolyhedron({\n            vertices: icosahedronPoints,\n            faces: icosahedronFaces,\n        })\n        const icosahedronBody = new CANNON.Body({ mass: 1 })\n        icosahedronBody.addShape(icosahedronShape)\n        icosahedronBody.position.x = icosahedronMesh.position.x\n        icosahedronBody.position.y = icosahedronMesh.position.y\n        icosahedronBody.position.z = icosahedronMesh.position.z\n        world.addBody(icosahedronBody)\n\n        const torusKnotGeometry = new THREE.TorusKnotGeometry()\n        const torusKnotMesh = new THREE.Mesh(torusKnotGeometry, normalMaterial)\n        torusKnotMesh.position.x = 4\n        torusKnotMesh.position.y = 3\n        torusKnotMesh.castShadow = true\n        scene.add(torusKnotMesh)\n        const torusKnotShape = CreateTrimesh(torusKnotMesh.geometry)\n        const torusKnotBody = new CANNON.Body({ mass: 1 })\n        torusKnotBody.addShape(torusKnotShape)\n        torusKnotBody.position.x = torusKnotMesh.position.x\n        torusKnotBody.position.y = torusKnotMesh.position.y\n        torusKnotBody.position.z = torusKnotMesh.position.z\n        world.addBody(torusKnotBody)\n\n        function CreateTrimesh(geometry) {\n            const vertices = (geometry.attributes.position)\n                .array\n            const indices = Object.keys(vertices).map(Number)\n            return new CANNON.Trimesh(vertices, indices)\n        }\n\n        const planeGeometry = new THREE.PlaneGeometry(25, 25)\n        const planeMesh = new THREE.Mesh(planeGeometry, phongMaterial)\n        planeMesh.rotateX(-Math.PI / 2)\n        planeMesh.receiveShadow = true\n        scene.add(planeMesh)\n        const planeShape = new CANNON.Plane()\n        const planeBody = new CANNON.Body({ mass: 0 })\n        planeBody.addShape(planeShape)\n        planeBody.quaternion.setFromAxisAngle(new CANNON.Vec3(1, 0, 0), -Math.PI / 2)\n        world.addBody(planeBody)\n\n        //   const stats = new Stats({ autoPlace: false })\n        //   //this.$el.appendChild(stats.dom)\n        //   var statsContainer = document.getElementById('my-stats-container');\n        //   statsContainer.appendChild(stats.domElement);\n\n        gui = new GUI({ autoPlace: false });\n        var customContainer = document.getElementById('my-gui-container');\n        customContainer.appendChild(gui.domElement);\n        const physicsFolder = gui.addFolder('Physics')\n        physicsFolder.add(world.gravity, 'x', -10.0, 10.0, 0.1)\n        physicsFolder.add(world.gravity, 'y', -10.0, 10.0, 0.1)\n        physicsFolder.add(world.gravity, 'z', -10.0, 10.0, 0.1)\n        //physicsFolder.open()\n        gui.close()\n        const clock = new THREE.Clock()\n        let delta\n        //\n        function animate() {\n            requestAnimationFrame(animate)\n\n            controls.update()\n\n            //delta = clock.getDelta()\n            delta = Math.min(clock.getDelta(), 0.1)\n            world.step(delta)\n\n            // Copy coordinates from Cannon to Three.js\n            cubeMesh.position.set(\n                cubeBody.position.x,\n                cubeBody.position.y,\n                cubeBody.position.z\n            )\n            cubeMesh.quaternion.set(\n                cubeBody.quaternion.x,\n                cubeBody.quaternion.y,\n                cubeBody.quaternion.z,\n                cubeBody.quaternion.w\n            )\n            sphereMesh.position.set(\n                sphereBody.position.x,\n                sphereBody.position.y,\n                sphereBody.position.z\n            )\n            sphereMesh.quaternion.set(\n                sphereBody.quaternion.x,\n                sphereBody.quaternion.y,\n                sphereBody.quaternion.z,\n                sphereBody.quaternion.w\n            )\n            icosahedronMesh.position.set(\n                icosahedronBody.position.x,\n                icosahedronBody.position.y,\n                icosahedronBody.position.z\n            )\n            icosahedronMesh.quaternion.set(\n                icosahedronBody.quaternion.x,\n                icosahedronBody.quaternion.y,\n                icosahedronBody.quaternion.z,\n                icosahedronBody.quaternion.w\n            )\n            torusKnotMesh.position.set(\n                torusKnotBody.position.x,\n                torusKnotBody.position.y,\n                torusKnotBody.position.z\n            )\n            torusKnotMesh.quaternion.set(\n                torusKnotBody.quaternion.x,\n                torusKnotBody.quaternion.y,\n                torusKnotBody.quaternion.z,\n                torusKnotBody.quaternion.w\n            )\n\n            render()\n\n            // stats.update()\n        }\n\n        function render() {\n            renderer.render(scene, camera)\n        }\n\n        animate()\n\n        function onWindowResize() {\n            camera.aspect = window.innerWidth / window.innerHeight;\n            camera.updateProjectionMatrix();\n            renderer.setSize(window.innerWidth, window.innerHeight);\n            render()\n        }\n        window.addEventListener('resize', onWindowResize);\n    }\n}\n</script>","import { render } from \"./CanonJSPage.vue?vue&type=template&id=16ef559c\"\nimport script from \"./CanonJSPage.vue?vue&type=script&lang=js\"\nexport * from \"./CanonJSPage.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"G:\\\\Threejs\\\\VuejsThreejsForDemo-main\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <div class=\"note-text\">A-W-S-D to move camera. Arrow key to move vehicle. Left click to shoot. Esc\n      to exit</div>\n\n    <progress value=\"0\" max=\"100\" id=\"progressBar\"></progress>\n    <nav-menu />\n    <div id=\"menuPanel\">\n      <button id=\"startButton\">Click to Start</button>\n    </div>\n  </div>\n</template>\n<script>\n//import * as MYCONST from '@/const.js';\nimport NavMenu from '@/components/NavMenu.vue'\nimport * as THREE from 'three'\nimport { PointerLockControls } from 'three/examples/jsm/controls/PointerLockControls'\n// import Stats from 'three/examples/jsm/libs/stats.module'\nimport * as CANNON from 'cannon-es'\nimport CannonUtils from './utils/cannonUtils'\nimport { ConvexGeometry } from 'three/examples/jsm/geometries/ConvexGeometry'\nimport { ConvexObjectBreaker } from 'three/examples/jsm/misc/ConvexObjectBreaker'\nimport { Reflector } from 'three/examples/jsm/objects/Reflector'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport TWEEN from '@tweenjs/tween.js'\n// import { OrbitControls } from 'three/addons/controls/OrbitControls.js';\nexport default {\n  name: 'ConvexObjectPage',\n  components: {\n    NavMenu\n  },\n  mounted() {\n    const scene = new THREE.Scene();\n\n    const light1 = new THREE.DirectionalLight()\n    light1.position.set(20, 20, 20)\n    scene.add(light1)\n\n    const light2 = new THREE.DirectionalLight()\n    light2.position.set(-20, 20, 20)\n    scene.add(light2)\n\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      1000\n    )\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true })\n    //renderer.setClearColor(MYCONST.RENDERER_CLEAR_COLOR);\n    renderer.setSize(window.innerWidth, window.innerHeight)\n    this.$el.appendChild(renderer.domElement)\n\n    // const controlsOrbit = new OrbitControls(camera, renderer.domElement);\n    const progressBar = document.getElementById(\n      'progressBar'\n    )\n\n    const menuPanel = document.getElementById('menuPanel')\n    const startButton = document.getElementById('startButton')\n    startButton.addEventListener(\n      'click',\n      function () {\n        controls.lock()\n      },\n      false\n    )\n\n    const controls = new PointerLockControls(camera, renderer.domElement)\n    controls.addEventListener('lock', () => (menuPanel.style.display = 'none'))\n    controls.addEventListener('unlock', () => (menuPanel.style.display = 'block'))\n\n    camera.position.y = 1\n    camera.position.z = 4\n\n    // movement - please calibrate these values\n    // var xSpeed = 0.25;\n    // var ySpeed = 0.25;\n    let axisY = new THREE.Vector3(0, 1, 0);\n    let currentDir = new THREE.Vector3(0, 0, 1);\n\n    const onKeyDown = function (event) {\n      switch (event.key) {\n        case 'w':\n          controls.moveForward(0.25)\n          break\n        case 'a':\n          controls.moveRight(-0.25)\n          break\n        case 's':\n          controls.moveForward(-0.25)\n          break\n        case 'd':\n          controls.moveRight(0.25)\n          break\n        case 'ArrowRight':\n          {\n            currentDir.applyAxisAngle(axisY, -Math.PI / 10);\n            let _q = new THREE.Quaternion();\n            _q.setFromAxisAngle(axisY, -Math.PI / 10)\n            let tempRot = new THREE.Quaternion();\n            tempRot.copy(weapon.quaternion);\n            tempRot.multiply(_q);\n            new TWEEN.Tween(weapon.quaternion)\n              .to(\n                {\n                  _x: tempRot._x,\n                  _y: tempRot._y,\n                  _z: tempRot._z,\n                  _w: tempRot._w,\n                },\n                1000\n              )\n              .easing(TWEEN.Easing.Cubic.Out)\n              .start()\n          }\n          break\n        case 'ArrowLeft':\n          {\n            currentDir.applyAxisAngle(axisY, Math.PI / 10);\n            let _q = new THREE.Quaternion();\n            _q.setFromAxisAngle(axisY, Math.PI / 10)\n            let tempRot = new THREE.Quaternion();\n            tempRot.copy(weapon.quaternion);\n            tempRot.multiply(_q);\n            new TWEEN.Tween(weapon.quaternion)\n              .to(\n                {\n                  _x: tempRot._x,\n                  _y: tempRot._y,\n                  _z: tempRot._z,\n                  _w: tempRot._w,\n                },\n                1000\n              )\n              .easing(TWEEN.Easing.Cubic.Out)\n              .start()\n          }\n          break\n        case 'ArrowUp':\n          {\n            let tempPos = new THREE.Vector3()\n            tempPos.copy(weapon.position)\n            let tempDir = new THREE.Vector3(0, 0, 1)\n            tempDir.applyQuaternion(weapon.quaternion);\n            tempDir.y = 0;\n            tempPos.addScaledVector(tempDir, 0.5)\n            new TWEEN.Tween(weapon.position)\n              .to(\n                {\n                  x: tempPos.x,\n                  y: tempPos.y,\n                  z: tempPos.z,\n                },\n                1000\n              )\n              .easing(TWEEN.Easing.Cubic.Out)\n              .start()\n          }\n          break\n        case 'ArrowDown':\n          {\n            let tempPos = new THREE.Vector3()\n            tempPos.copy(weapon.position)\n            let tempDir = new THREE.Vector3(0, 0, 1)\n            tempDir.applyQuaternion(weapon.quaternion);\n            tempDir.y = 0;\n            tempPos.addScaledVector(tempDir, -0.5)\n            new TWEEN.Tween(weapon.position)\n              .to(\n                {\n                  x: tempPos.x,\n                  y: tempPos.y,\n                  z: tempPos.z,\n                },\n                1000\n              )\n              .easing(TWEEN.Easing.Cubic.Out)\n              .start()\n          }\n          break\n        case 'Space':\n          weapon.position.set(0, 0, 0);\n          break\n      }\n    }\n    document.addEventListener('keydown', onKeyDown, false)\n\n    const world = new CANNON.World()\n    world.gravity.set(0, -9.82, 0)\n    //;(world.solver as CANNON.GSSolver).iterations = 20\n    //world.allowSleep = true\n\n    const material = new THREE.MeshStandardMaterial({\n      //color: 0xa2ffb8,\n      color: 0xffffff,\n      //reflectivity: 0.15,\n      metalness: 1.0,\n      roughness: 0.25,\n      transparent: true,\n      opacity: 0.75,\n      //transmission: 1.0,\n      side: THREE.DoubleSide,\n      //clearcoat: 1.0,\n      //clearcoatRoughness: 0.35,\n    })\n\n    const pmremGenerator = new THREE.PMREMGenerator(renderer)\n    const envTexture = new THREE.TextureLoader().load(\n      'img/pano-equirectangular.jpg',\n      () => {\n        material.envMap = pmremGenerator.fromEquirectangular(envTexture).texture\n      }\n    )\n\n    const meshes = {}\n    const bodies = {}\n    let meshId = 0\n\n    const groundMirror = new Reflector(new THREE.PlaneGeometry(1024, 1024), {\n      color: new THREE.Color(0x222222),\n      clipBias: 0.003,\n      textureWidth: window.innerWidth * window.devicePixelRatio,\n      textureHeight: window.innerHeight * window.devicePixelRatio,\n    })\n    groundMirror.position.y = -0.05\n    groundMirror.rotateX(-Math.PI / 2)\n    scene.add(groundMirror)\n\n    const planeShape = new CANNON.Plane()\n    const planeBody = new CANNON.Body({ mass: 0 })\n    planeBody.addShape(planeShape)\n    planeBody.quaternion.setFromAxisAngle(new CANNON.Vec3(1, 0, 0), -Math.PI / 2)\n    world.addBody(planeBody)\n\n    const convexObjectBreaker = new ConvexObjectBreaker()\n\n    for (let i = 0; i < 20; i++) {\n      const size = {\n        x: Math.random() * 4 + 2,\n        y: Math.random() * 10 + 5,\n        z: Math.random() * 4 + 2,\n      }\n      const geo = new THREE.BoxGeometry(\n        size.x,\n        size.y,\n        size.z\n      )\n      const cube = new THREE.Mesh(geo, material)\n\n      cube.position.x = Math.random() * 50 - 25\n      cube.position.y = size.y / 2 + 0.1\n      cube.position.z = Math.random() * 50 - 25\n\n      if (Math.abs(cube.position.x - camera.position.x) < 5 && Math.abs(cube.position.z - camera.position.z) < 5) {\n        cube.position.x += 5;\n        cube.position.z += 5;\n      }\n\n      scene.add(cube)\n      meshes[meshId] = cube\n      convexObjectBreaker.prepareBreakableObject(\n        meshes[meshId],\n        1,\n        new THREE.Vector3(),\n        new THREE.Vector3(),\n        true\n      )\n\n      const cubeShape = new CANNON.Box(\n        new CANNON.Vec3(size.x / 2, size.y / 2, size.z / 2)\n      )\n      const cubeBody = new CANNON.Body({ mass: 1 })\n        ; (cubeBody).userData = { splitCount: 0, id: meshId }\n      cubeBody.addShape(cubeShape)\n      cubeBody.position.x = cube.position.x\n      cubeBody.position.y = cube.position.y\n      cubeBody.position.z = cube.position.z\n\n      world.addBody(cubeBody)\n      bodies[meshId] = cubeBody\n\n      meshId++\n    }\n\n    const bullets = {}\n    const bulletBodies = {}\n    let bulletId = 0\n\n    const bulletMaterial = new THREE.MeshPhysicalMaterial({\n      map: new THREE.TextureLoader().load('img/marble.png'),\n      clearcoat: 1.0,\n      clearcoatRoughness: 0,\n      clearcoatMap: null,\n      clearcoatRoughnessMap: null,\n      metalness: 0.4,\n      roughness: 0.3,\n      color: 'white',\n    })\n    document.addEventListener('click', onClick, false)\n    function onClick() {\n      if (controls.isLocked) {\n        const bullet = new THREE.Mesh(\n          new THREE.SphereGeometry(0.5, 16, 16),\n          bulletMaterial\n        )\n        bullet.position.copy(weapon.position)\n        bullet.position.y += 2\n        scene.add(bullet)\n        bullets[bulletId] = bullet\n\n        const bulletShape = new CANNON.Sphere(0.5)\n        const bulletBody = new CANNON.Body({ mass: 1 })\n        bulletBody.addShape(bulletShape)\n        bulletBody.position.x = weapon.position.x\n        bulletBody.position.y = weapon.position.y\n        bulletBody.position.z = weapon.position.z\n        bulletBody.position.y += 2\n\n        world.addBody(bulletBody)\n        bulletBodies[bulletId] = bulletBody\n\n        bulletBody.addEventListener('collide', (e) => {\n          if (e.body.userData) {\n            if (e.body.userData.splitCount < 2) {\n              splitObject(e.body.userData, e.contact)\n            }\n          }\n        })\n\n        //const v = raycaster.ray.direction.clone();\n        const v = new THREE.Vector3(0, 0, 1)\n        v.applyQuaternion(weapon.quaternion)\n        // const gunPos = new THREE.Vector3()\n        // gunPos.set(weapon.position.x, weapon.position.y+2, weapon.position.z)\n        //v.subVectors(pointS.position, gunPos).normalize();\n\n        // const v = new THREE.Vector3(0, 0, -1) // (0, 0 , -1) to shoot behind\n        // v.applyQuaternion(camera.quaternion)\n        // v.multiplyScalar(50)\n        v.multiplyScalar(50);\n        bulletBody.velocity.set(v.x, v.y, v.z)\n        bulletBody.angularVelocity.set(\n          Math.random() * 10 + 1,\n          Math.random() * 10 + 1,\n          Math.random() * 10 + 1\n        )\n\n        bulletId++\n\n        //remove old bullets\n        while (Object.keys(bullets).length > 5) {\n          scene.remove(bullets[bulletId - 6])\n          delete bullets[bulletId - 6]\n          world.removeBody(bulletBodies[bulletId - 6])\n          delete bulletBodies[bulletId - 6]\n        }\n      }\n    }\n\n    function splitObject(userData, contact) {\n      const contactId = userData.id\n      if (meshes[contactId]) {\n        const poi = bodies[contactId].pointToLocalFrame(\n          (contact.bj.position).vadd(contact.rj)\n        )\n        const n = new THREE.Vector3(\n          contact.ni.x,\n          contact.ni.y,\n          contact.ni.z\n        ).negate()\n        const shards = convexObjectBreaker.subdivideByImpact(\n          meshes[contactId],\n          new THREE.Vector3(poi.x, poi.y, poi.z),\n          n,\n          1,\n          0\n        )\n\n        scene.remove(meshes[contactId])\n        delete meshes[contactId]\n        world.removeBody(bodies[contactId])\n        delete bodies[contactId]\n\n        shards.forEach((d) => {\n          const nextId = meshId++\n\n          scene.add(d)\n          meshes[nextId] = d\n            ; (d).geometry.scale(0.99, 0.99, 0.99)\n          const shape = gemoetryToShape((d).geometry)\n\n          const body = new CANNON.Body({ mass: 1 })\n          body.addShape(shape)\n            ; (body).userData = {\n              splitCount: userData.splitCount + 1,\n              id: nextId,\n            }\n          body.position.x = d.position.x\n          body.position.y = d.position.y\n          body.position.z = d.position.z\n          body.quaternion.x = d.quaternion.x\n          body.quaternion.y = d.quaternion.y\n          body.quaternion.z = d.quaternion.z\n          body.quaternion.w = d.quaternion.w\n          world.addBody(body)\n          bodies[nextId] = body\n        })\n      }\n    }\n\n    function gemoetryToShape(geometry) {\n      const position = (geometry.attributes.position).array\n      const points = []\n      for (let i = 0; i < position.length; i += 3) {\n        points.push(\n          new THREE.Vector3(position[i], position[i + 1], position[i + 2])\n        )\n      }\n      const convexHull = new ConvexGeometry(points)\n      const shape = CannonUtils.CreateConvexPolyhedron(convexHull)\n      return shape\n    }\n\n    const mouse = new THREE.Vector2()\n    const raycaster = new THREE.Raycaster()\n    const geometryS = new THREE.SphereGeometry(0.05)\n    const materialS = new THREE.MeshBasicMaterial({ color: 0x000000 })\n    const pointS = new THREE.Mesh(geometryS, materialS)\n    scene.add(pointS)\n    pointS.visible = false;\n    const geometryT = new THREE.TorusGeometry(0.2, 0.01, 16, 100)\n    const materialT = new THREE.MeshBasicMaterial({ color: 0xff0000 })\n    const torus = new THREE.Mesh(geometryT, materialT)\n    scene.add(torus)\n    torus.visible = false;\n\n    renderer.domElement.addEventListener('mousemove', onMouseMove, false)\n    function onMouseMove(event) {\n      event.preventDefault()\n      mouse.set(\n        (event.clientX / window.innerWidth) * 2 - 1,\n        -((event.clientY - 82) / window.innerHeight) * 2 + 1\n      )\n\n      raycaster.setFromCamera(mouse, camera)\n\n      let arrayMeshs = [];\n      Object.keys(meshes).forEach((m) => {\n        arrayMeshs.push(meshes[m]);\n      })\n\n      const wall_intersects = raycaster.intersectObjects(arrayMeshs, false)\n\n      if (wall_intersects.length > 0) {\n\n        const n = new THREE.Vector3()\n        n.copy((wall_intersects[0].face).normal)\n        n.transformDirection(wall_intersects[0].object.matrixWorld)\n\n        // arrowHelper.setDirection(n)\n        // arrowHelper.position.copy(wall_intersects[0].point)\n        // arrowHelper.visible = true;\n        pointS.lookAt(n)\n        pointS.position.copy(wall_intersects[0].point)\n        pointS.position.addScaledVector(n, 0.1)\n        pointS.visible = true;\n\n        torus.lookAt(n)\n        torus.position.copy(wall_intersects[0].point)\n        torus.position.addScaledVector(n, 0.1)\n        torus.visible = true;\n        if (weapon) {\n          const rotationMatrix = new THREE.Matrix4()\n          //const rayDirection = raycaster.ray.direction.clone()\n          const direction = new THREE.Vector3()\n          const gunPos = new THREE.Vector3()\n          gunPos.set(weapon.position.x, weapon.position.y+2, weapon.position.z)\n          direction.subVectors(pointS.position, gunPos).normalize();\n          rotationMatrix.lookAt(weapon.position, weapon.position.clone().add(direction), weapon.up)\n          weapon.quaternion.setFromRotationMatrix(rotationMatrix);\n          weapon.rotateY(Math.PI)\n        }\n      }\n      else {\n        pointS.visible = false;\n        torus.visible = false;\n        if (weapon) {\n          const rotationMatrix = new THREE.Matrix4()\n          const rayDirection = raycaster.ray.direction.clone()\n          const pointB = new THREE.Vector3();\n          pointB.copy(camera.position).add(rayDirection.multiplyScalar(1000));\n          const direction = new THREE.Vector3()\n          const gunPos = new THREE.Vector3()\n          gunPos.set(weapon.position.x, weapon.position.y+2, weapon.position.z)\n          direction.subVectors(pointB, gunPos).normalize();\n\n          rotationMatrix.lookAt(weapon.position, weapon.position.clone().add(direction), weapon.up)\n          weapon.quaternion.setFromRotationMatrix(rotationMatrix);\n          weapon.rotateY(Math.PI)\n        }\n      }\n      arrayMeshs = [];\n    }\n\n    var weapon = null;\n    const loader = new GLTFLoader()\n    loader.load(\n      'models/artillery_military_weapon.glb',\n      function (gltf) {\n        progressBar.style.display = 'none'\n        gltf.scene.traverse(function (child) {\n          if ((child).isMesh) {\n            const m = child\n            m.receiveShadow = true\n            m.castShadow = true\n          }\n          if ((child).isLight) {\n            const l = child\n            l.castShadow = true\n            l.shadow.bias = -0.003\n            l.shadow.mapSize.width = 2048\n            l.shadow.mapSize.height = 2048\n          }\n        })\n        gltf.scene.scale.set(0.01, 0.01, 0.01)\n        weapon = gltf.scene;\n        weapon.rotateY(Math.PI);\n        scene.add(gltf.scene)\n      },\n      (xhr) => {\n        const percentComplete = (xhr.loaded / xhr.total) * 100\n        progressBar.value = percentComplete === Infinity ? 100 : percentComplete\n      },\n    )\n\n    window.addEventListener('resize', onWindowResize, false)\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight\n      camera.updateProjectionMatrix()\n      renderer.setSize(window.innerWidth, window.innerHeight)\n      render()\n    }\n    // const options = {\n    //   side: {\n    //     FrontSide: THREE.FrontSide,\n    //     BackSide: THREE.BackSide,\n    //     DoubleSide: THREE.DoubleSide,\n    //   },\n    // }\n\n    const clock = new THREE.Clock()\n    let delta\n\n    function animate() {\n      requestAnimationFrame(animate)\n\n      delta = clock.getDelta()\n      if (delta > 0.1) delta = 0.1\n      world.step(delta)\n\n      Object.keys(meshes).forEach((m) => {\n        meshes[m].position.set(\n          bodies[m].position.x,\n          bodies[m].position.y,\n          bodies[m].position.z\n        )\n        meshes[m].quaternion.set(\n          bodies[m].quaternion.x,\n          bodies[m].quaternion.y,\n          bodies[m].quaternion.z,\n          bodies[m].quaternion.w\n        )\n      })\n\n      Object.keys(bullets).forEach((b) => {\n        bullets[b].position.set(\n          bulletBodies[b].position.x,\n          bulletBodies[b].position.y,\n          bulletBodies[b].position.z\n        )\n        bullets[b].quaternion.set(\n          bulletBodies[b].quaternion.x,\n          bulletBodies[b].quaternion.y,\n          bulletBodies[b].quaternion.z,\n          bulletBodies[b].quaternion.w\n        )\n      })\n\n      // controlsOrbit.update();\n      TWEEN.update()\n\n      render()\n\n      // stats.update()\n    }\n\n    function render() {\n      renderer.render(scene, camera)\n    }\n\n    animate()\n  }\n}\n</script>","//MIT License\r\n//Copyright (c) 2020-2021 Sean Bradley\r\nimport * as THREE from 'three'\r\nimport * as CANNON from 'cannon-es'\r\n\r\n// interface Face3 {\r\n//     a: number\r\n//     b: number\r\n//     c: number\r\n//     normals: THREE.Vector3[]\r\n// }\r\n\r\nclass CannonUtils {\r\n    static CreateTrimesh(\r\n        geometry\r\n    ) {\r\n        let vertices\r\n        if (geometry.index === null) {\r\n            vertices = (geometry.attributes.position).array\r\n        } else {\r\n            vertices = (geometry.clone().toNonIndexed().attributes.position).array\r\n        }\r\n        const indices = Object.keys(vertices).map(Number)\r\n        return new CANNON.Trimesh(vertices, indices)\r\n    }\r\n\r\n    static CreateConvexPolyhedron(\r\n        geometry\r\n    ) {\r\n        const position = geometry.attributes.position\r\n        const normal = geometry.attributes.normal\r\n        const vertices = []\r\n        for (let i = 0; i < position.count; i++) {\r\n            vertices.push(new THREE.Vector3().fromBufferAttribute(position, i))\r\n        }\r\n        const faces = []\r\n        for (let i = 0; i < position.count; i += 3) {\r\n            const vertexNormals =\r\n                normal === undefined\r\n                    ? []\r\n                    : [\r\n                          new THREE.Vector3().fromBufferAttribute(normal, i),\r\n                          new THREE.Vector3().fromBufferAttribute(\r\n                              normal,\r\n                              i + 1\r\n                          ),\r\n                          new THREE.Vector3().fromBufferAttribute(\r\n                              normal,\r\n                              i + 2\r\n                          ),\r\n                      ]\r\n            const face = {\r\n                a: i,\r\n                b: i + 1,\r\n                c: i + 2,\r\n                normals: vertexNormals,\r\n            }\r\n            faces.push(face)\r\n        }\r\n\r\n        const verticesMap = {}\r\n        const points = []\r\n        const changes = []\r\n        for (let i = 0, il = vertices.length; i < il; i++) {\r\n            const v = vertices[i]\r\n            const key =\r\n                Math.round(v.x * 100) +\r\n                '_' +\r\n                Math.round(v.y * 100) +\r\n                '_' +\r\n                Math.round(v.z * 100)\r\n            if (verticesMap[key] === undefined) {\r\n                verticesMap[key] = i\r\n                points.push(\r\n                    new CANNON.Vec3(vertices[i].x, vertices[i].y, vertices[i].z)\r\n                )\r\n                changes[i] = points.length - 1\r\n            } else {\r\n                changes[i] = changes[verticesMap[key]]\r\n            }\r\n        }\r\n\r\n        const faceIdsToRemove = []\r\n        for (let i = 0, il = faces.length; i < il; i++) {\r\n            const face = faces[i]\r\n            face.a = changes[face.a]\r\n            face.b = changes[face.b]\r\n            face.c = changes[face.c]\r\n            const indices = [face.a, face.b, face.c]\r\n            for (let n = 0; n < 3; n++) {\r\n                if (indices[n] === indices[(n + 1) % 3]) {\r\n                    faceIdsToRemove.push(i)\r\n                    break\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = faceIdsToRemove.length - 1; i >= 0; i--) {\r\n            const idx = faceIdsToRemove[i]\r\n            faces.splice(idx, 1)\r\n        }\r\n\r\n        const cannonFaces = faces.map(function (f) {\r\n            return [f.a, f.b, f.c]\r\n        })\r\n\r\n        return new CANNON.ConvexPolyhedron({\r\n            vertices: points,\r\n            faces: cannonFaces,\r\n        })\r\n    }\r\n\r\n    static offsetCenterOfMass(\r\n        body,\r\n        centreOfMass\r\n    ) {\r\n        body.shapeOffsets.forEach(function (offset) {\r\n            centreOfMass.vadd(offset, centreOfMass)\r\n        })\r\n        centreOfMass.scale(1 / body.shapes.length, centreOfMass)\r\n        body.shapeOffsets.forEach(function (offset) {\r\n            offset.vsub(centreOfMass, offset)\r\n        })\r\n        const worldCenterOfMass = new CANNON.Vec3()\r\n        body.vectorToWorldFrame(centreOfMass, worldCenterOfMass)\r\n        body.position.vadd(worldCenterOfMass, body.position)\r\n    }\r\n}\r\n\r\nexport default CannonUtils","import { render } from \"./ConvexObjectPage.vue?vue&type=template&id=e1809282\"\nimport script from \"./ConvexObjectPage.vue?vue&type=script&lang=js\"\nexport * from \"./ConvexObjectPage.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"G:\\\\Threejs\\\\VuejsThreejsForDemo-main\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <div id=\"boatData\"></div>\n    <div id=\"locationData\"></div>\n\n    <nav-menu />\n    <div id=\"my-gui-container\"></div>\n  </div>\n</template>\n<script>\n//import * as MYCONST from '@/const.js';\nimport NavMenu from '@/components/NavMenu.vue'\nimport * as THREE from 'three'\nimport { OrbitControls } from 'three/addons/controls/OrbitControls.js'\n//import Stats from '/jsm/libs/stats.module.js'\nimport { GUI } from 'dat.gui'\nimport { Sky } from 'three/examples/jsm/objects/Sky.js'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js'\nimport Floater from './utils/floater.js'\nimport GerstnerWater from './utils/gerstnerWater.js'\n\nlet gui\nexport default {\n  name: 'WaterPage',\n  components: {\n    NavMenu\n  },\n  unmounted() {\n    if (gui) gui.destroy();\n    gui = null;\n  },\n  mounted() {\n    const scene = new THREE.Scene()\n\n    const earth = new THREE.Group()\n    scene.add(earth)\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true })\n    renderer.setPixelRatio(window.devicePixelRatio)\n    renderer.setSize(window.innerWidth, window.innerHeight)\n    renderer.outputEncoding = THREE.sRGBEncoding\n    this.$el.appendChild(renderer.domElement)\n\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 50000)\n\n    let cameraLerp = false\n    let controlsChanging = false\n    const controls = new OrbitControls(camera, renderer.domElement)\n    controls.maxPolarAngle = Math.PI * 0.495;\n    controls.enableDamping = true\n    controls.maxDistance = 100\n    controls.addEventListener('start', () => {\n      controlsChanging = true\n      cameraLerp = false\n    })\n    controls.addEventListener('end', () => {\n      controlsChanging = false\n    })\n\n    const sun = new THREE.Vector3()\n\n    gui = new GUI({ autoPlace: false })\n    var customContainer = document.getElementById('my-gui-container')\n    customContainer.appendChild(gui.domElement);\n\n    const gerstnerWater = new GerstnerWater(gui)\n    earth.add(gerstnerWater.water)\n    gui.close()\n\n    const sky = new Sky()\n    sky.scale.setScalar(10000)\n    scene.add(sky)\n\n    const skyUniforms = sky.material.uniforms\n\n    skyUniforms['turbidity'].value = 10\n    skyUniforms['rayleigh'].value = 2\n    skyUniforms['mieCoefficient'].value = 0.005\n    skyUniforms['mieDirectionalG'].value = 0.8\n\n    // const parameters = {\n    //   elevation: 2,\n    //   azimuth: -7.7,\n    // }\n\n    // const pmremGenerator = new THREE.PMREMGenerator(renderer)\n\n    // function updateSun() {\n    //   const phi = THREE.MathUtils.degToRad(90 - parameters.elevation)\n    //   const theta = THREE.MathUtils.degToRad(parameters.azimuth)\n\n    //   sun.setFromSphericalCoords(1, phi, theta)\n\n    //   sky.material.uniforms['sunPosition'].value.copy(sun)\n    //   gerstnerWater.water.material.uniforms['sunDirection'].value.copy(sun)\n\n    //   scene.environment = pmremGenerator.fromScene(sky).texture\n    // }\n\n    // updateSun()\n\n    const parameters = {\n        elevation: 2,\n        azimuth: 180\n      };\n\n      const pmremGenerator = new THREE.PMREMGenerator(renderer);\n      let renderTarget;\n\n      function updateSun() {\n\n        const phi = THREE.MathUtils.degToRad(90 - parameters.elevation);\n        const theta = THREE.MathUtils.degToRad(parameters.azimuth);\n\n        sun.setFromSphericalCoords(1, phi, theta);\n\n        sky.material.uniforms['sunPosition'].value.copy(sun);\n        gerstnerWater.water.material.uniforms['sunDirection'].value.copy(sun).normalize();\n\n        if (renderTarget !== undefined) renderTarget.dispose();\n\n        renderTarget = pmremGenerator.fromScene(sky);\n\n        scene.environment = renderTarget.texture;\n\n      }\n\n      updateSun();\n\n    const divisor = -46080\n    const divisorMultiplier = 1.40625\n\n    // const planes = {}\n    // let visibleId = ''\n    let locationDataText = ''\n    const locationDataElem = document.getElementById('locationData')\n    // //const textureLoader = new THREE.TextureLoader()\n\n    // function makeVisible(layerId, divisor) {\n    //   const tileX = Math.floor(-earth.position.x / divisor)\n    //   const tileY = Math.floor(-earth.position.z / divisor)\n    //   let adjacentX = 0\n    //   let adjacentY = 0\n    //   if (tileX === Math.round(-earth.position.x / divisor)) {\n    //     adjacentX = tileX - 1\n    //   } else {\n    //     adjacentX = tileX + 1\n    //   }\n    //   if (tileY === Math.round(-earth.position.z / divisor)) {\n    //     adjacentY = tileY - 1\n    //   } else {\n    //     adjacentY = tileY + 1\n    //   }\n    //   visibleId = layerId + ',' + tileX + ',' + tileY\n    //   if (!planes[visibleId]) {\n    //     createPlane(layerId, tileX, tileY, divisor)\n    //   }\n    //   planes[visibleId].visible = true\n    //   visibleId = layerId + ',' + adjacentX + ',' + tileY\n    //   if (!planes[visibleId]) {\n    //     createPlane(layerId, adjacentX, tileY, divisor)\n    //   }\n    //   planes[visibleId].visible = true\n    //   visibleId = layerId + ',' + adjacentX + ',' + adjacentY\n    //   if (!planes[visibleId]) {\n    //     createPlane(layerId, adjacentX, adjacentY, divisor)\n    //   }\n    //   planes[visibleId].visible = true\n    //   visibleId = layerId + ',' + tileX + ',' + adjacentY\n    //   if (!planes[visibleId]) {\n    //     createPlane(layerId, tileX, adjacentY, divisor)\n    //   }\n    //   planes[visibleId].visible = true\n    // }\n\n    // function createPlane(layerId, x, y, divisor) {\n    //   const id = layerId + ',' + x.toString() + ',' + y.toString()\n    //   planes[id] = new THREE.Mesh(\n    //     new THREE.PlaneGeometry(divisor, divisor, 107, 107),\n    //     new THREE.MeshPhysicalMaterial() //wireframe: true })\n    //   )\n    //   planes[id].rotateX(-Math.PI / 2)\n    //   planes[id].position.x = x * divisor + divisor / 2\n    //   planes[id].position.z = y * divisor + divisor / 2\n    //   earth.add(planes[id])\n    //   // let offsetX = 128\n    //   // let offsetY = 64\n    //   // const hgtImage = new Image()\n    //   // hgtImage.onload = () => {\n    //   //   const canvas = document.createElement('canvas')\n    //   //   canvas.width = 108\n    //   //   canvas.height = 108\n    //   //   const context = canvas.getContext('2d')\n    //   //   context.drawImage(hgtImage, 0, 0)\n    //   //   const data = context.getImageData(0, 0, 108, 108)\n    //   //   let dataOffset = 0\n    //   //   let ele = 0\n    //   //   for (let i = 2; i < planes[id].geometry.attributes.position.array.length; i = i + 3) {\n    //   //     let b0 = data.data[dataOffset + 0]\n    //   //     let b1 = data.data[dataOffset + 1]\n    //   //     ele = ((b1 << 8) | b0) - 32767\n    //   //     planes[id].geometry.attributes.position.array[i] = ele\n    //   //     dataOffset += 4\n    //   //   }\n    //   //   planes[id].geometry.computeVertexNormals()\n    //   //   planes[id].geometry.attributes.position.needsUpdate = true\n    //   // }\n    //   // hgtImage.src = '/tiles_hgt/' + layerId + '_' + (y + offsetY) + '_' + (x + offsetX) + '.png'\n    //   // const tileUrl = '/tiles/' + layerId + '_' + (y + offsetY) + '_' + (x + offsetX) + '.jpg'\n    //   // textureLoader.load(tileUrl, (t) => {\n    //   //   planes[id].material.map = t\n    //   //   planes[id].material.needsUpdate = true\n    //   // })\n    // }\n\n    //boat\n    let controlledBoatId = 0\n    const followCamPivot = new THREE.Object3D()\n    const lat = 15.0302\n    const lon = -24.4485\n    let boatDataText = ''\n    const boatDataElem = document.getElementById('boatData')\n    const startX = (lon * divisor) / divisorMultiplier\n    const startZ = -(lat * divisor) / divisorMultiplier\n\n    let floaters = []\n\n    // main user boat\n    const loader = new GLTFLoader()\n    loader.load(\n      'models/oselvar_wooden_boat.glb',\n      function (gltf) {\n        gltf.scene.traverse(function (child) {\n          if (child.isMesh) {\n            child.material = new THREE.MeshStandardMaterial({ roughness: 0 })\n          }\n        })\n        const group = new THREE.Group()\n        group.add(gltf.scene)\n        const floater = new Floater(earth, group, gerstnerWater, true)\n        floaters.push(floater)\n        controlledBoatId = floaters.length - 1\n\n        gltf.scene.position.y = 0.6\n\n        gltf.scene.add(followCamPivot)\n        followCamPivot.position.set(0, 5, -7.5)\n\n        group.position.x = startX\n        group.position.z = startZ\n\n        camera.position.set(group.position.x, 100, group.position.z - 100)\n\n        earth.add(group)\n\n        cameraLerp = true\n\n        loadTestBoxes()\n        //loadTestBoat1()\n        //loadTestBoat2()\n\n        camera.position.set(0, 100, -100)\n      },\n      (xhr) => {\n        console.log((xhr.loaded / xhr.total) * 100 + '% loaded')\n      },\n      (error) => {\n        console.log(error)\n      }\n    )\n\n    // floating boxes\n    function loadTestBoxes() {\n      const boxGeometry = new THREE.BoxGeometry(3, 3, 3)\n\n      for (let i = 0; i < 10; i++) {\n        const box = new THREE.Mesh(\n          boxGeometry.clone(),\n          new THREE.MeshStandardMaterial({ roughness: 0 })\n        )\n        const group = new THREE.Group()\n        group.position.set(startX + (i * 10 - 30), 0, startZ + (i * 10 - 50))\n        group.add(box.clone())\n        const floater = new Floater(earth, group, gerstnerWater)\n        floaters.push(floater)\n        earth.add(group)\n      }\n    }\n\n    // function loadTestBoat1() {\n    //   loader.load(\n    //     'models/boat2.glb',\n    //     function (gltf) {\n    //       for (let i = 0; i < 1; i++) {\n    //         const group = new THREE.Group()\n    //         group.position.set(startX + 20, 0, startZ + 20)\n    //         group.add(gltf.scene)\n    //         const floater = new Floater(earth, group, gerstnerWater)\n    //         floaters.push(floater)\n    //         earth.add(group)\n    //       }\n    //     },\n    //     (xhr) => {\n    //       console.log((xhr.loaded / xhr.total) * 100 + '% loaded')\n    //     },\n    //     (error) => {\n    //       console.log(error)\n    //     }\n    //   )\n    // }\n\n    // function loadTestBoat2() {\n    //   loader.load(\n    //     'models/boat3.glb',\n    //     function (gltf) {\n    //       for (let i = 0; i < 1; i++) {\n    //         const group = new THREE.Group()\n    //         group.position.set(startX - 40, 0, startZ + 40)\n    //         group.add(gltf.scene)\n    //         const floater = new Floater(earth, group, gerstnerWater)\n    //         floaters.push(floater)\n    //         earth.add(group)\n    //       }\n    //     },\n    //     (xhr) => {\n    //       console.log((xhr.loaded / xhr.total) * 100 + '% loaded')\n    //     },\n    //     (error) => {\n    //       console.log(error)\n    //     }\n    //   )\n    // }\n\n    //const stats = new Stats()\n    //document.body.appendChild(stats.dom)\n\n    const folderSky = gui.addFolder('Sky')\n    folderSky.add(parameters, 'elevation', 0, 90, 0.1).onChange(updateSun)\n    folderSky.add(parameters, 'azimuth', -180, 180, 0.1).onChange(updateSun)\n    //folderSky.open()\n\n    window.addEventListener('resize', onWindowResize)\n\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight\n      camera.updateProjectionMatrix()\n\n      renderer.setSize(window.innerWidth, window.innerHeight)\n    }\n\n    const onKeyDown = function (event) {\n      switch (event.code) {\n        case 'KeyW':\n          if (!controlsChanging) {\n            cameraLerp = true\n          }\n          if (floaters[controlledBoatId].power < 1) {\n            floaters[controlledBoatId].power += 0.01\n          }\n          break\n        case 'KeyA':\n          if (!controlsChanging) {\n            cameraLerp = true\n          }\n          floaters[controlledBoatId].heading += 0.05\n          break\n        case 'KeyS':\n          if (!controlsChanging) {\n            cameraLerp = true\n          }\n          if (floaters[controlledBoatId].power > -1) {\n            floaters[controlledBoatId].power -= 0.01\n          }\n          break\n        case 'KeyD':\n          if (!controlsChanging) {\n            cameraLerp = true\n          }\n          floaters[controlledBoatId].heading -= 0.05\n          break\n      }\n    }\n    document.addEventListener('keydown', onKeyDown, false)\n\n    const clock = new THREE.Clock()\n    let delta = 0\n\n    function animate() {\n      requestAnimationFrame(animate)\n      delta = clock.getDelta()\n\n      floaters.forEach((f) => {\n        f.update(delta)\n        // f.sphereMesh.visible = false\n        // floaters.forEach((f2) => {\n        //     if (f !== f2 && f.collisionSphere.intersectsSphere(f2.collisionSphere)) {\n        //         f.sphereMesh.visible = true\n        //     }\n        // })\n      })\n\n      if (floaters[controlledBoatId]) {\n        earth.position.x = -floaters[controlledBoatId].object.position.x\n        earth.position.z = -floaters[controlledBoatId].object.position.z\n\n        boatDataText =\n          'pwr:' +\n          floaters[controlledBoatId].power.toFixed(2) +\n          ' ms:' +\n          floaters[controlledBoatId].ms.toFixed(2) +\n          ` kts:` +\n          (floaters[controlledBoatId].ms * 1.94384).toFixed(2) +\n          ' hdg:' +\n          -((floaters[controlledBoatId].heading / Math.PI) * 180).toFixed(2)\n        boatDataElem.innerText = boatDataText\n\n        if (cameraLerp) {\n          const v = new THREE.Vector3()\n          followCamPivot.getWorldPosition(v)\n          camera.position.lerp(v, 0.025)\n          controls.target.y = floaters[controlledBoatId].object.position.y + 2\n        }\n      }\n\n      controls.update()\n\n      gerstnerWater.update(delta)\n\n      render()\n\n      // makeVisible(7, divisor)\n      locationDataText =\n        ((earth.position.z / divisor) * divisorMultiplier).toFixed(6) +\n        ' ' +\n        ((-earth.position.x / divisor) * divisorMultiplier).toFixed(6)\n      locationDataElem.innerText = locationDataText\n\n      //stats.update()\n    }\n\n    function render() {\n      renderer.render(scene, camera)\n    }\n\n    animate()\n  }\n}\n</script>","import * as THREE from 'three'\n\nexport default class Floater {\n    earth\n    object\n    gerstnerWater\n    cogHelper\n    velocityHelper\n    waveNormalHelpers = []\n    gravityHelpers = []\n    gravitySlideHelpers = []\n    floatPoints = []\n    down = new THREE.Vector3(0, -1, 0)\n    heading = 0\n    power = 0\n    isPlayerFloater = false\n    collisionSphere\n    //sphereMesh\n    //boxHelper: THREE.Box3Helper\n    lastPosition = new THREE.Vector3()\n    velocity = new THREE.Vector3()\n    ms = 0\n    forces = []\n\n    constructor(\n        earth,\n        object,\n        gerstnerWater,\n        isPlayerFloater = false\n    ) {\n        this.earth = earth\n        this.object = object\n        this.gerstnerWater = gerstnerWater\n        this.isPlayerFloater = isPlayerFloater\n\n        this.object.traverse((child) => {\n            if (child.name.startsWith('floatPoint')) {\n                this.floatPoints.push(child)\n            }\n        })\n        if (!this.floatPoints.length) {\n            //then create one in the middle that we can use\n            const floatPoint = new THREE.Object3D()\n            //floatPoint.name = 'floatPoint'\n            this.object.add(floatPoint)\n            this.floatPoints.push(floatPoint)\n        }\n\n        //;(this.object as THREE.Mesh).geometry.computeBoundingBox()\n        const aabb = new THREE.Box3().setFromObject(this.object)\n        this.collisionSphere = new THREE.Sphere()\n        aabb.getBoundingSphere(this.collisionSphere)\n        // this.sphereMesh = new THREE.Mesh(\n        //     new THREE.SphereGeometry(this.collisionSphere.radius, 8, 8),\n        //     new THREE.MeshBasicMaterial({\n        //         color: 0xff0000,\n        //         transparent: true,\n        //         opacity: 0.25,\n        //         visible: false,\n        //     })\n        // )\n        // this.object.add(this.sphereMesh)\n\n        //console.log(this.collisionSphere)\n\n        //this.object.add(this.boxHelper)\n\n        this.cogHelper = new THREE.ArrowHelper(\n            new THREE.Vector3(),\n            new THREE.Vector3(),\n            7.5,\n            0x00ff00\n        )\n        earth.add(this.cogHelper)\n\n        this.velocityHelper = new THREE.ArrowHelper(\n            new THREE.Vector3(),\n            new THREE.Vector3(),\n            7.5,\n            0xff00ff\n        )\n        earth.add(this.velocityHelper)\n\n        this.floatPoints.forEach((fp) => {\n            const waveNormalHelper = new THREE.ArrowHelper(\n                new THREE.Vector3(),\n                new THREE.Vector3(),\n                5,\n                0xffff00\n            )\n            waveNormalHelper.position.copy(fp.position)\n            this.waveNormalHelpers.push(waveNormalHelper)\n            earth.add(waveNormalHelper)\n\n            const gravitySlideHelper = new THREE.ArrowHelper(\n                new THREE.Vector3(0, 1, 0),\n                new THREE.Vector3(),\n                5,\n                0x00ffff\n            )\n            gravitySlideHelper.position.copy(fp.position)\n            this.gravitySlideHelpers.push(gravitySlideHelper)\n            earth.add(gravitySlideHelper)\n        })\n    }\n\n    //r = 0\n    update(delta) {\n        //this.boxHelper.updateMatrixWorld(true)\n\n        const t = this.gerstnerWater.water.material.uniforms['time'].value\n\n        const accumulatedPosition = new THREE.Vector3() // this.object.position.clone()\n\n        const accumulatedNormal = new THREE.Vector3(0, 0, 0)\n\n        this.floatPoints.forEach((fp, i) => {\n            const fpWorldPos = new THREE.Vector3()\n\n            fp.getWorldPosition(fpWorldPos)\n            fpWorldPos.sub(this.earth.position)\n\n            const waveInfo = this.gerstnerWater.getWaveInfo(\n                this.object.position.x,\n                this.object.position.z,\n                fpWorldPos.x,\n                fpWorldPos.z,\n                t\n            )\n\n            this.waveNormalHelpers[i].setDirection(waveInfo.normal)\n            this.waveNormalHelpers[i].position.copy(fpWorldPos)\n\n            const gravitySlideDirection = new THREE.Vector3(0, -1, 0)\n                .add(waveInfo.normal)\n                .divideScalar(2)\n                .normalize()\n\n            this.gravitySlideHelpers[i].setDirection(gravitySlideDirection)\n            this.gravitySlideHelpers[i].position.copy(fpWorldPos)\n\n            accumulatedPosition.y += waveInfo.position.y\n            accumulatedPosition.x += this.object.position.x + waveInfo.normal.x\n            accumulatedPosition.z += this.object.position.z + waveInfo.normal.z\n\n            accumulatedNormal.add(waveInfo.normal)\n        })\n\n        //average all floatPoints directions\n        accumulatedPosition.divideScalar(this.floatPoints.length)\n\n        //this.object.position.y = accumulatedPosition.y\n\n        // //apply any forces\n        if (this.forces.length) {\n            this.forces.forEach((f) => {\n                //console.log(f)\n                //accumulatedPosition.add(new THREE.Vector3(f.x, f.y, f.z))\n                accumulatedPosition.x += f.x\n                accumulatedPosition.z += f.z\n                //accumulatedPosition.sub(f)\n            })\n            this.forces = []\n        }\n\n        accumulatedPosition.x += Math.sin(this.heading) * this.power\n        accumulatedPosition.z += Math.cos(this.heading) * this.power\n\n        //console.log(this.object.position.x,accumulatedPosition.x)\n        //this.object.position.copy(accumulatedPosition)//\n        this.object.position.lerp(accumulatedPosition, 0.25)\n\n        this.velocity = this.lastPosition.clone().sub(accumulatedPosition).negate()\n        this.velocityHelper.setDirection(this.velocity)\n        this.velocityHelper.position.set(\n            accumulatedPosition.x,\n            accumulatedPosition.y + 1,\n            accumulatedPosition.z\n        )\n\n        const dist = accumulatedPosition.distanceTo(this.lastPosition)\n        this.ms = dist * 1000 * delta\n        this.velocityHelper.setLength(this.ms)\n        this.lastPosition = accumulatedPosition\n\n        this.collisionSphere.center.copy(this.object.position)\n\n        accumulatedNormal.divideScalar(this.floatPoints.length).normalize()\n\n        this.cogHelper.setDirection(accumulatedNormal)\n        this.cogHelper.position.copy(accumulatedPosition)\n\n        this.object.children[0].rotation.y = this.heading\n        this.object.quaternion.rotateTowards(this.cogHelper.quaternion, delta * 0.2)\n\n        if (this.isPlayerFloater) {\n            this.gerstnerWater.water.position.x = -this.earth.position.x\n            this.gerstnerWater.water.position.z = -this.earth.position.z\n            this.gerstnerWater.water.material.uniforms['offsetX'].value =\n                -this.earth.position.x\n            this.gerstnerWater.water.material.uniforms['offsetZ'].value =\n                -this.earth.position.z\n        }\n    }\n}\n","33\nimport * as THREE from 'three'\nimport { Water } from 'three/examples/jsm/objects/Water.js'\n\nexport default class GerstnerWater {\n    water\n    waves\n    texture\n\n    constructor(gui) {\n        const waterGeometry = new THREE.PlaneGeometry(4096, 4096, 256, 256)\n        this.texture = new THREE.TextureLoader().load('img/waternormals.jpg', function (texture) {\n            texture.wrapS = texture.wrapT = THREE.RepeatWrapping\n        })\n\n        this.waves = [\n            { direction: 0, steepness: 0.15, wavelength: 100 },\n            { direction: 30, steepness: 0.15, wavelength: 50 },\n            { direction: 60, steepness: 0.15, wavelength: 25 },\n        ]\n\n        this.water = new Water(waterGeometry, {\n            textureWidth: 512,\n            textureHeight: 512,\n            waterNormals: this.texture,\n            sunDirection: new THREE.Vector3(),\n            sunColor: 0xffffff,\n            waterColor: 0x001e0f,\n            distortionScale: 8,\n            fog: undefined,\n        })\n\n        this.water.material.wireframe = false\n        this.water.rotation.x = -Math.PI / 2\n        this.water.material.onBeforeCompile = (\n            shader\n        ) => {\n            shader.uniforms.offsetX = { value: 0 }\n            shader.uniforms.offsetZ = { value: 0 }\n            shader.uniforms.waveA = {\n                value: [\n                    Math.sin((this.waves[0].direction * Math.PI) / 180),\n                    Math.cos((this.waves[0].direction * Math.PI) / 180),\n                    this.waves[0].steepness,\n                    this.waves[0].wavelength,\n                ],\n            }\n            shader.uniforms.waveB = {\n                value: [\n                    Math.sin((this.waves[1].direction * Math.PI) / 180),\n                    Math.cos((this.waves[1].direction * Math.PI) / 180),\n                    this.waves[1].steepness,\n                    this.waves[1].wavelength,\n                ],\n            }\n            shader.uniforms.waveC = {\n                value: [\n                    Math.sin((this.waves[2].direction * Math.PI) / 180),\n                    Math.cos((this.waves[2].direction * Math.PI) / 180),\n                    this.waves[2].steepness,\n                    this.waves[2].wavelength,\n                ],\n            }\n            shader.vertexShader = `\n                uniform mat4 textureMatrix;\n                uniform float time;\n\n                varying vec4 mirrorCoord;\n                varying vec4 worldPosition;\n\n                #include <common>\n                #include <fog_pars_vertex>\n                #include <shadowmap_pars_vertex>\n                #include <logdepthbuf_pars_vertex>\n\n                uniform vec4 waveA;\n                uniform vec4 waveB;\n                uniform vec4 waveC;\n\n                uniform float offsetX;\n                uniform float offsetZ;\n\n                vec3 GerstnerWave (vec4 wave, vec3 p) {\n                    float steepness = wave.z;\n                    float wavelength = wave.w;\n                    float k = 2.0 * PI / wavelength;\n                    float c = sqrt(9.8 / k);\n                    vec2 d = normalize(wave.xy);\n                    float f = k * (dot(d, vec2(p.x, p.y)) - c * time);\n                    float a = steepness / k;\n\n                    return vec3(\n                        d.x * (a * cos(f)),\n                        d.y * (a * cos(f)),\n                        a * sin(f)\n                    );\n                }\n\n                void main() {\n\n                    mirrorCoord = modelMatrix * vec4( position, 1.0 );\n                    worldPosition = mirrorCoord.xyzw;\n                    mirrorCoord = textureMatrix * mirrorCoord;\n\n                    vec3 gridPoint = position.xyz;\n                    vec3 tangent = vec3(1, 0, 0);\n                    vec3 binormal = vec3(0, 0, 1);\n                    vec3 p = gridPoint;\n                    gridPoint.x += offsetX;//*2.0;\n                    gridPoint.y -= offsetZ;//*2.0;\n                    p += GerstnerWave(waveA, gridPoint);\n                    p += GerstnerWave(waveB, gridPoint);\n                    p += GerstnerWave(waveC, gridPoint);\n                    gl_Position = projectionMatrix * modelViewMatrix * vec4( p.x, p.y, p.z, 1.0);\n\n                    #include <beginnormal_vertex>\n                    #include <defaultnormal_vertex>\n                    #include <logdepthbuf_vertex>\n                    #include <fog_vertex>\n                    #include <shadowmap_vertex>\n                }`\n\n            shader.fragmentShader = `\n                uniform sampler2D mirrorSampler;\n                uniform float alpha;\n                uniform float time;\n                uniform float size;\n                uniform float distortionScale;\n                uniform sampler2D normalSampler;\n                uniform vec3 sunColor;\n                uniform vec3 sunDirection;\n                uniform vec3 eye;\n                uniform vec3 waterColor;\n\n                varying vec4 mirrorCoord;\n                varying vec4 worldPosition;\n\n                uniform float offsetX;\n                uniform float offsetZ;\n\n                vec4 getNoise( vec2 uv ) {\n                    vec2 uv0 = ( uv / 103.0 ) + vec2(time / 17.0, time / 29.0);\n                    vec2 uv1 = uv / 107.0-vec2( time / -19.0, time / 31.0 );\n                    vec2 uv2 = uv / vec2( 8907.0, 9803.0 ) + vec2( time / 101.0, time / 97.0 );\n                    vec2 uv3 = uv / vec2( 1091.0, 1027.0 ) - vec2( time / 109.0, time / -113.0 );\n                    vec4 noise = texture2D( normalSampler, uv0 ) +\n                        texture2D( normalSampler, uv1 ) +\n                        texture2D( normalSampler, uv2 ) +\n                        texture2D( normalSampler, uv3 );\n                    return noise * 0.5 - 1.0;\n                }\n\n                void sunLight( const vec3 surfaceNormal, const vec3 eyeDirection, float shiny, float spec, float diffuse, inout vec3 diffuseColor, inout vec3 specularColor ) {\n                    vec3 reflection = normalize( reflect( -sunDirection, surfaceNormal ) );\n                    float direction = max( 0.0, dot( eyeDirection, reflection ) );\n                    specularColor += pow( direction, shiny ) * sunColor * spec;\n                    diffuseColor += max( dot( sunDirection, surfaceNormal ), 0.0 ) * sunColor * diffuse;\n                }\n\n                #include <common>\n                #include <packing>\n                #include <bsdfs>\n                #include <fog_pars_fragment>\n                #include <logdepthbuf_pars_fragment>\n                #include <lights_pars_begin>\n                #include <shadowmap_pars_fragment>\n                #include <shadowmask_pars_fragment>\n\n                void main() {\n\n                    #include <logdepthbuf_fragment>\n\n                    vec4 noise = getNoise( (worldPosition.xz) + vec2(offsetX/12.25,offsetZ/12.25) * size );\n                    vec3 surfaceNormal = normalize( noise.xzy * vec3( 1.5, 1.0, 1.5 ) );\n\n                    vec3 diffuseLight = vec3(0.0);\n                    vec3 specularLight = vec3(0.0);\n\n                    vec3 worldToEye = eye-worldPosition.xyz;\n                    vec3 eyeDirection = normalize( worldToEye );\n                    sunLight( surfaceNormal, eyeDirection, 100.0, 2.0, 0.5, diffuseLight, specularLight );\n\n                    float distance = length(worldToEye);\n\n                    vec2 distortion = surfaceNormal.xz * ( 0.001 + 1.0 / distance ) * distortionScale;\n                    vec3 reflectionSample = vec3( texture2D( mirrorSampler, mirrorCoord.xy / mirrorCoord.w + distortion ) );\n\n                    float theta = max( dot( eyeDirection, surfaceNormal ), 0.0 );\n                    float rf0 = 0.3;\n                    float reflectance = rf0 + ( 1.0 - rf0 ) * pow( ( 1.0 - theta ), 5.0 );\n                    vec3 scatter = max( 0.0, dot( surfaceNormal, eyeDirection ) ) * waterColor;\n                    vec3 albedo = mix( ( sunColor * diffuseLight * 0.3 + scatter ) * getShadowMask(), ( vec3( 0.1 ) + reflectionSample * 0.9 + reflectionSample * specularLight ), reflectance);\n                    vec3 outgoingLight = albedo;\n                    gl_FragColor = vec4( outgoingLight, alpha );\n\n                    #include <tonemapping_fragment>\n                    #include <fog_fragment>\n                }`\n            shader.uniforms.size.value = 10.0\n        }\n\n        const waterUniforms = this.water.material.uniforms\n\n        const folderWater = gui.addFolder('Water')\n        folderWater.add(waterUniforms.distortionScale, 'value', 0, 8, 0.1).name('distortionScale')\n        folderWater.add(waterUniforms.size, 'value', 0.1, 10, 0.1).name('size')\n        folderWater.add(this.water.material, 'wireframe')\n        //folderWater.open()\n\n        const waveAFolder = gui.addFolder('Wave A')\n        waveAFolder\n            .add(this.waves[0], 'direction', 0, 359)\n            .name('Direction')\n            .onChange((v) => {\n                const x = (v * Math.PI) / 180\n                waterUniforms.waveA.value[0] = Math.sin(x)\n                waterUniforms.waveA.value[1] = Math.cos(x)\n            })\n        waveAFolder\n            .add(this.waves[0], 'steepness', 0, 1, 0.01)\n            .name('Steepness')\n            .onChange((v) => {\n                waterUniforms.waveA.value[2] = v\n            })\n        waveAFolder\n            .add(this.waves[0], 'wavelength', 1, 100)\n            .name('Wavelength')\n            .onChange((v) => {\n                waterUniforms.waveA.value[3] = v\n            })\n        //waveAFolder.open()\n\n        const waveBFolder = gui.addFolder('Wave B')\n        waveBFolder\n            .add(this.waves[1], 'direction', 0, 359)\n            .name('Direction')\n            .onChange((v) => {\n                const x = (v * Math.PI) / 180\n                waterUniforms.waveB.value[0] = Math.sin(x)\n                waterUniforms.waveB.value[1] = Math.cos(x)\n            })\n        waveBFolder\n            .add(this.waves[1], 'steepness', 0, 1, 0.01)\n            .name('Steepness')\n            .onChange((v) => {\n                waterUniforms.waveB.value[2] = v\n            })\n        waveBFolder\n            .add(this.waves[1], 'wavelength', 1, 100)\n            .name('Wavelength')\n            .onChange((v) => {\n                waterUniforms.waveB.value[3] = v\n            })\n        //waveBFolder.open()\n\n        const waveCFolder = gui.addFolder('Wave C')\n        waveCFolder\n            .add(this.waves[2], 'direction', 0, 359)\n            .name('Direction')\n            .onChange((v) => {\n                const x = (v * Math.PI) / 180\n                waterUniforms.waveC.value[0] = Math.sin(x)\n                waterUniforms.waveC.value[1] = Math.cos(x)\n            })\n        waveCFolder\n            .add(this.waves[2], 'steepness', 0, 1, 0.01)\n            .name('Steepness')\n            .onChange((v) => {\n                waterUniforms.waveC.value[2] = v\n            })\n        waveCFolder\n            .add(this.waves[2], 'wavelength', 1, 100)\n            .name('Wavelength')\n            .onChange((v) => {\n                waterUniforms.waveC.value[3] = v\n            })\n        //waveCFolder.open()\n    }\n\n    getWaveInfo(offsetX, offsetZ, x, z, time) {\n        const pos = new THREE.Vector3()\n        const tangent = new THREE.Vector3(1, 0, 0)\n        const binormal = new THREE.Vector3(0, 0, 1)\n        this.waves.forEach((w) => {\n            const k = (Math.PI * 2.0) / w.wavelength\n            const c = Math.sqrt(9.8 / k)\n            const d = new THREE.Vector2(\n                Math.sin((w.direction * Math.PI) / 180),\n                -Math.cos((w.direction * Math.PI) / 180)\n            )\n            const f = k * (d.dot(new THREE.Vector2(x, z)) - c * time)\n            const a = w.steepness / k\n\n            pos.x += d.x * (a * Math.cos(f))\n            pos.y += a * Math.sin(f)\n            pos.z += d.y * (a * Math.cos(f))\n\n            tangent.x += -d.x * d.x * (w.steepness * Math.sin(f))\n            tangent.y += d.x * (w.steepness * Math.cos(f))\n            tangent.z += -d.x * d.y * (w.steepness * Math.sin(f))\n\n            binormal.x += -d.x * d.y * (w.steepness * Math.sin(f))\n            binormal.y += d.y * (w.steepness * Math.cos(f))\n            binormal.z += -d.y * d.y * (w.steepness * Math.sin(f))\n        })\n\n        const normal = binormal.cross(tangent).normalize()\n        return { position: pos, normal: normal }\n    }\n\n    update(delta) {\n        this.water.material.uniforms['time'].value += delta\n    }\n}","import { render } from \"./WaterPage.vue?vue&type=template&id=734ad0c6\"\nimport script from \"./WaterPage.vue?vue&type=script&lang=js\"\nexport * from \"./WaterPage.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"G:\\\\Threejs\\\\VuejsThreejsForDemo-main\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n\n    <nav-menu />\n    <div id=\"my-gui-container\"></div>\n  </div>\n</template>\n<script>\n//import * as MYCONST from '@/const.js';\nimport NavMenu from '@/components/NavMenu.vue'\nimport * as THREE from 'three';\n\nimport { GUI } from 'three/addons/libs/lil-gui.module.min.js';\n\nimport { OrbitControls } from 'three/addons/controls/OrbitControls.js';\n\nimport { EffectComposer } from 'three/addons/postprocessing/EffectComposer.js';\nimport { RenderPass } from 'three/addons/postprocessing/RenderPass.js';\nimport { ShaderPass } from 'three/addons/postprocessing/ShaderPass.js';\n\nimport { LuminosityShader } from 'three/addons/shaders/LuminosityShader.js';\nimport { SobelOperatorShader } from 'three/addons/shaders/SobelOperatorShader.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\n\nlet gui;\n\nexport default {\n  name: 'EdgeDetectPage',\n  components: {\n    NavMenu\n  },\n  unmounted() {\n    if (gui) {\n      gui.destroy();\n    }\n    gui = null\n  },\n  mounted() {\n    let camera, scene, renderer, composer;\n\n    let effectSobel;\n\n    const params = {\n      enable: true\n    };\n\n    let doc = this.$el;\n    init(doc);\n    animate();\n\n\n\n    function init(doc) {\n\n      //\n\n      scene = new THREE.Scene();\n\n      camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.1, 200);\n      camera.position.set(0, 10, 25);\n      camera.lookAt(scene.position);\n\n      //\n\n      // const geometry = new THREE.TorusKnotGeometry(8, 3, 256, 32, 2, 3);\n      // const material = new THREE.MeshPhongMaterial({ color: 0xffff00 });\n\n      // const mesh = new THREE.Mesh(geometry, material);\n      // scene.add(mesh);\n\n      const loader = new GLTFLoader()\n      loader.load(\n        'models/artillery_military_weapon.glb',\n        function (gltf) {\n          gltf.scene.traverse(function (child) {\n            if ((child).isMesh) {\n              const m = child\n              m.receiveShadow = true\n              m.castShadow = true\n            }\n            if ((child).isLight) {\n              const l = child\n              l.castShadow = true\n              l.shadow.bias = -0.003\n              l.shadow.mapSize.width = 2048\n              l.shadow.mapSize.height = 2048\n            }\n          })\n          gltf.scene.scale.set(0.06, 0.06, 0.06)\n          gltf.scene.rotateY(Math.PI / 2)\n          scene.add(gltf.scene)\n        },\n      )\n      //\n\n      const ambientLight = new THREE.AmbientLight(0xcccccc, 0.4);\n      scene.add(ambientLight);\n\n      const pointLight = new THREE.PointLight(0xffffff, 0.8);\n      camera.add(pointLight);\n      scene.add(camera);\n\n      //\n\n      renderer = new THREE.WebGLRenderer();\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      doc.appendChild(renderer.domElement);\n\n      // postprocessing\n\n      composer = new EffectComposer(renderer);\n      const renderPass = new RenderPass(scene, camera);\n      composer.addPass(renderPass);\n\n      // color to grayscale conversion\n\n      const effectGrayScale = new ShaderPass(LuminosityShader);\n      composer.addPass(effectGrayScale);\n\n      // you might want to use a gaussian blur filter before\n      // the next pass to improve the result of the Sobel operator\n\n      // Sobel operator\n\n      effectSobel = new ShaderPass(SobelOperatorShader);\n      effectSobel.uniforms['resolution'].value.x = window.innerWidth * window.devicePixelRatio;\n      effectSobel.uniforms['resolution'].value.y = window.innerHeight * window.devicePixelRatio;\n      composer.addPass(effectSobel);\n\n      const controls = new OrbitControls(camera, renderer.domElement);\n      controls.minDistance = 10;\n      controls.maxDistance = 100;\n\n      //\n\n      gui = new GUI({ autoPlace: false });\n      var customContainer = document.getElementById('my-gui-container');\n      customContainer.appendChild(gui.domElement);\n\n      gui.add(params, 'enable');\n      gui.close();\n\n      //\n\n      window.addEventListener('resize', onWindowResize);\n\n    }\n\n    function onWindowResize() {\n\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      composer.setSize(window.innerWidth, window.innerHeight);\n\n      effectSobel.uniforms['resolution'].value.x = window.innerWidth * window.devicePixelRatio;\n      effectSobel.uniforms['resolution'].value.y = window.innerHeight * window.devicePixelRatio;\n\n    }\n\n    function animate() {\n\n      requestAnimationFrame(animate);\n\n      if (params.enable === true) {\n\n        composer.render();\n\n      } else {\n\n        renderer.render(scene, camera);\n\n      }\n\n    }\n  }\n}\n</script>","import { render } from \"./EdgeDetectPage.vue?vue&type=template&id=25099668\"\nimport script from \"./EdgeDetectPage.vue?vue&type=script&lang=js\"\nexport * from \"./EdgeDetectPage.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"G:\\\\Threejs\\\\VuejsThreejsForDemo-main\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n\n    <nav-menu />\n    <div id=\"my-gui-container\"></div>\n  </div>\n</template>\n<script>\n//import * as MYCONST from '@/const.js';\nimport NavMenu from '@/components/NavMenu.vue'\nimport * as THREE from 'three';\n//import Stats from 'three/addons/libs/stats.module.js';\nimport { GUI } from 'three/addons/libs/lil-gui.module.min.js';\nimport { OrbitControls } from 'three/addons/controls/OrbitControls.js';\nimport { Water } from 'three/addons/objects/Water.js';\nimport { Sky } from 'three/addons/objects/Sky.js';\n\nlet gui;\n\nexport default {\n  name: 'ShadersOceanPage',\n  components: {\n    NavMenu\n  },\n  unmounted() {\n    if (gui) {\n      gui.destroy();\n    }\n    gui = null\n  },\n  mounted() {\n    THREE.ColorManagement.enabled = false; // TODO: Confirm correct color management.\n    let container = this.$el; //stats;\n    let camera, scene, renderer;\n    let controls, water, sun, mesh;\n\n    init();\n    animate();\n\n    function init() {\n      //\n\n      renderer = new THREE.WebGLRenderer();\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      renderer.outputColorSpace = THREE.LinearSRGBColorSpace;\n      renderer.toneMapping = THREE.ACESFilmicToneMapping;\n      container.appendChild(renderer.domElement);\n\n      //\n\n      scene = new THREE.Scene();\n\n      camera = new THREE.PerspectiveCamera(55, window.innerWidth / window.innerHeight, 1, 20000);\n      camera.position.set(30, 30, 100);\n\n      //\n\n      sun = new THREE.Vector3();\n\n      // Water\n\n      const waterGeometry = new THREE.PlaneGeometry(10000, 10000);\n\n      water = new Water(\n        waterGeometry,\n        {\n          textureWidth: 512,\n          textureHeight: 512,\n          waterNormals: new THREE.TextureLoader().load('img/waternormals.jpg', function (texture) {\n\n            texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\n\n          }),\n          sunDirection: new THREE.Vector3(),\n          sunColor: 0xffffff,\n          waterColor: 0x001e0f,\n          distortionScale: 3.7,\n          fog: scene.fog !== undefined\n        }\n      );\n\n      water.rotation.x = - Math.PI / 2;\n\n      scene.add(water);\n\n      // Skybox\n\n      const sky = new Sky();\n      sky.scale.setScalar(10000);\n      scene.add(sky);\n\n      const skyUniforms = sky.material.uniforms;\n\n      skyUniforms['turbidity'].value = 10;\n      skyUniforms['rayleigh'].value = 2;\n      skyUniforms['mieCoefficient'].value = 0.005;\n      skyUniforms['mieDirectionalG'].value = 0.8;\n\n      const parameters = {\n        elevation: 2,\n        azimuth: 180\n      };\n\n      const pmremGenerator = new THREE.PMREMGenerator(renderer);\n      let renderTarget;\n\n      function updateSun() {\n\n        const phi = THREE.MathUtils.degToRad(90 - parameters.elevation);\n        const theta = THREE.MathUtils.degToRad(parameters.azimuth);\n\n        sun.setFromSphericalCoords(1, phi, theta);\n\n        sky.material.uniforms['sunPosition'].value.copy(sun);\n        water.material.uniforms['sunDirection'].value.copy(sun).normalize();\n\n        if (renderTarget !== undefined) renderTarget.dispose();\n\n        renderTarget = pmremGenerator.fromScene(sky);\n\n        scene.environment = renderTarget.texture;\n\n      }\n\n      updateSun();\n\n      //\n\n      const geometry = new THREE.BoxGeometry(30, 30, 30);\n      const material = new THREE.MeshStandardMaterial({ roughness: 0 });\n\n      mesh = new THREE.Mesh(geometry, material);\n      scene.add(mesh);\n\n      //\n\n      controls = new OrbitControls(camera, renderer.domElement);\n      controls.maxPolarAngle = Math.PI * 0.495;\n      controls.target.set(0, 10, 0);\n      controls.minDistance = 40.0;\n      controls.maxDistance = 200.0;\n      controls.update();\n\n      //\n\n      //stats = new Stats();\n      //container.appendChild(stats.dom);\n\n      // GUI\n\n      gui = new GUI({ autoPlace: false });\n      var customContainer = document.getElementById('my-gui-container');\n      customContainer.appendChild(gui.domElement);\n\n      const folderSky = gui.addFolder('Sky');\n      folderSky.add(parameters, 'elevation', 0, 90, 0.1).onChange(updateSun);\n      folderSky.add(parameters, 'azimuth', - 180, 180, 0.1).onChange(updateSun);\n      //folderSky.open();\n\n      const waterUniforms = water.material.uniforms;\n\n      const folderWater = gui.addFolder('Water');\n      folderWater.add(waterUniforms.distortionScale, 'value', 0, 8, 0.1).name('distortionScale');\n      folderWater.add(waterUniforms.size, 'value', 0.1, 10, 0.1).name('size');\n      //folderWater.open();\n      gui.close()\n      //\n\n      window.addEventListener('resize', onWindowResize);\n\n    }\n\n    function onWindowResize() {\n\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n\n      renderer.setSize(window.innerWidth, window.innerHeight);\n\n    }\n\n    function animate() {\n\n      requestAnimationFrame(animate);\n      render();\n      //stats.update();\n\n    }\n\n    function render() {\n\n      const time = performance.now() * 0.001;\n\n      mesh.position.y = Math.sin(time) * 20 + 5;\n      mesh.rotation.x = time * 0.5;\n      mesh.rotation.z = time * 0.51;\n\n      water.material.uniforms['time'].value += 1.0 / 60.0;\n\n      renderer.render(scene, camera);\n\n    }\n\n  }\n}\n</script>","import { render } from \"./ShadersOceanPage.vue?vue&type=template&id=68f3dc92\"\nimport script from \"./ShadersOceanPage.vue?vue&type=script&lang=js\"\nexport * from \"./ShadersOceanPage.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"G:\\\\Threejs\\\\VuejsThreejsForDemo-main\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div>\r\n    <div class=\"note-text\">\r\n      Octree threejs demo - basic collisions with static triangle mesh<br />\r\n      MOUSE to look around and to throw balls<br />\r\n      WASD to move and SPACE to jump\r\n    </div>\r\n\r\n    <nav-menu />\r\n    <div id=\"my-gui-container\"></div>\r\n    <div id=\"menuPanel\">\r\n      <button id=\"startButton\">Click to Start</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n//import * as MYCONST from '@/const.js';\r\nimport NavMenu from '@/components/NavMenu.vue'\r\nimport * as THREE from 'three';\r\n\r\n//import Stats from 'three/addons/libs/stats.module.js';\r\n\r\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';\r\n\r\nimport { Octree } from 'three/addons/math/Octree.js';\r\nimport { OctreeHelper } from 'three/addons/helpers/OctreeHelper.js';\r\n\r\nimport { Capsule } from 'three/addons/math/Capsule.js';\r\n\r\nimport { GUI } from 'three/addons/libs/lil-gui.module.min.js';\r\n\r\nimport { PointerLockControls } from 'three/examples/jsm/controls/PointerLockControls'\r\n\r\nlet gui;\r\n\r\nexport default {\r\n  name: 'GamePage',\r\n  components: {\r\n    NavMenu\r\n  },\r\n  unmounted() {\r\n    if (gui) {\r\n      gui.destroy();\r\n    }\r\n    gui = null\r\n  },\r\n  mounted() {\r\n    const clock = new THREE.Clock();\r\n\r\n    const scene = new THREE.Scene();\r\n    scene.background = new THREE.Color(0x88ccee);\r\n    scene.fog = new THREE.Fog(0x88ccee, 0, 50);\r\n\r\n    const camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n    camera.rotation.order = 'YXZ';\r\n\r\n    const fillLight1 = new THREE.HemisphereLight(0x8dc1de, 0x00668d, 0.5);\r\n    fillLight1.position.set(2, 1, 1);\r\n    scene.add(fillLight1);\r\n\r\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\r\n    directionalLight.position.set(- 5, 25, - 1);\r\n    directionalLight.castShadow = true;\r\n    directionalLight.shadow.camera.near = 0.01;\r\n    directionalLight.shadow.camera.far = 500;\r\n    directionalLight.shadow.camera.right = 30;\r\n    directionalLight.shadow.camera.left = - 30;\r\n    directionalLight.shadow.camera.top = 30;\r\n    directionalLight.shadow.camera.bottom = - 30;\r\n    directionalLight.shadow.mapSize.width = 1024;\r\n    directionalLight.shadow.mapSize.height = 1024;\r\n    directionalLight.shadow.radius = 4;\r\n    directionalLight.shadow.bias = - 0.00006;\r\n    scene.add(directionalLight);\r\n\r\n    const container = this.$el;\r\n\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.shadowMap.enabled = true;\r\n    renderer.shadowMap.type = THREE.VSMShadowMap;\r\n    renderer.toneMapping = THREE.ACESFilmicToneMapping;\r\n    container.appendChild(renderer.domElement);\r\n\r\n    //const stats = new Stats();\r\n    //stats.domElement.style.position = 'absolute';\r\n    //stats.domElement.style.top = '0px';\r\n    //stats.domElement.style.left = '330px';\r\n    //container.appendChild(stats.domElement);\r\n\r\n    const GRAVITY = 30;\r\n\r\n    const NUM_SPHERES = 100;\r\n    const SPHERE_RADIUS = 0.2;\r\n\r\n    const STEPS_PER_FRAME = 5;\r\n\r\n    const sphereGeometry = new THREE.IcosahedronGeometry(SPHERE_RADIUS, 5);\r\n    const sphereMaterial = new THREE.MeshLambertMaterial({ color: 0xdede8d });\r\n\r\n    const spheres = [];\r\n    let sphereIdx = 0;\r\n\r\n    for (let i = 0; i < NUM_SPHERES; i++) {\r\n\r\n      const sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);\r\n      sphere.castShadow = true;\r\n      sphere.receiveShadow = true;\r\n\r\n      scene.add(sphere);\r\n\r\n      spheres.push({\r\n        mesh: sphere,\r\n        collider: new THREE.Sphere(new THREE.Vector3(0, - 100, 0), SPHERE_RADIUS),\r\n        velocity: new THREE.Vector3()\r\n      });\r\n\r\n    }\r\n\r\n    const worldOctree = new Octree();\r\n\r\n    const playerCollider = new Capsule(new THREE.Vector3(0, 0.35, 0), new THREE.Vector3(0, 1, 0), 0.35);\r\n\r\n    const playerVelocity = new THREE.Vector3();\r\n    const playerDirection = new THREE.Vector3();\r\n\r\n    let playerOnFloor = false;\r\n    let mouseTime = 0;\r\n\r\n    const keyStates = {};\r\n\r\n    const vector1 = new THREE.Vector3();\r\n    const vector2 = new THREE.Vector3();\r\n    const vector3 = new THREE.Vector3();\r\n\r\n    document.addEventListener('keydown', (event) => {\r\n\r\n      keyStates[event.code] = true;\r\n\r\n    });\r\n\r\n    document.addEventListener('keyup', (event) => {\r\n\r\n      keyStates[event.code] = false;\r\n\r\n    });\r\n\r\n    const menuPanel = document.getElementById('menuPanel')\r\n    const startButton = document.getElementById('startButton')\r\n    startButton.addEventListener(\r\n      'click',\r\n      function () {\r\n        controls1.lock()\r\n      },\r\n      false\r\n    )\r\n\r\n    const controls1 = new PointerLockControls(camera, renderer.domElement)\r\n    controls1.addEventListener('lock', () => (menuPanel.style.display = 'none'))\r\n    controls1.addEventListener('unlock', () => (menuPanel.style.display = 'block'))\r\n\r\n    container.addEventListener('mousedown', () => {\r\n\r\n      //document.body.requestPointerLock();\r\n\r\n      mouseTime = performance.now();\r\n\r\n    });\r\n\r\n    document.addEventListener('mouseup', () => {\r\n\r\n      //if (document.pointerLockElement !== null)\r\n      if (menuPanel.style.display == 'none')\r\n        throwBall();\r\n\r\n    });\r\n\r\n    document.body.addEventListener('mousemove', (event) => {\r\n\r\n      //if (document.pointerLockElement === document.body) {\r\n      if (menuPanel.style.display == 'none') {\r\n        camera.rotation.y -= event.movementX / 500;\r\n        camera.rotation.x -= event.movementY / 500;\r\n      }\r\n\r\n      //}\r\n\r\n    });\r\n\r\n    window.addEventListener('resize', onWindowResize);\r\n\r\n    function onWindowResize() {\r\n\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n\r\n    }\r\n\r\n    function throwBall() {\r\n\r\n      const sphere = spheres[sphereIdx];\r\n\r\n      camera.getWorldDirection(playerDirection);\r\n\r\n      sphere.collider.center.copy(playerCollider.end).addScaledVector(playerDirection, playerCollider.radius * 1.5);\r\n\r\n      // throw the ball with more force if we hold the button longer, and if we move forward\r\n\r\n      const impulse = 15 + 30 * (1 - Math.exp((mouseTime - performance.now()) * 0.001));\r\n\r\n      sphere.velocity.copy(playerDirection).multiplyScalar(impulse);\r\n      sphere.velocity.addScaledVector(playerVelocity, 2);\r\n\r\n      sphereIdx = (sphereIdx + 1) % spheres.length;\r\n\r\n    }\r\n\r\n    function playerCollisions() {\r\n\r\n      const result = worldOctree.capsuleIntersect(playerCollider);\r\n\r\n      playerOnFloor = false;\r\n\r\n      if (result) {\r\n\r\n        playerOnFloor = result.normal.y > 0;\r\n\r\n        if (!playerOnFloor) {\r\n\r\n          playerVelocity.addScaledVector(result.normal, - result.normal.dot(playerVelocity));\r\n\r\n        }\r\n\r\n        playerCollider.translate(result.normal.multiplyScalar(result.depth));\r\n\r\n      }\r\n\r\n    }\r\n\r\n    function updatePlayer(deltaTime) {\r\n\r\n      let damping = Math.exp(- 4 * deltaTime) - 1;\r\n\r\n      if (!playerOnFloor) {\r\n\r\n        playerVelocity.y -= GRAVITY * deltaTime;\r\n\r\n        // small air resistance\r\n        damping *= 0.1;\r\n\r\n      }\r\n\r\n      playerVelocity.addScaledVector(playerVelocity, damping);\r\n\r\n      const deltaPosition = playerVelocity.clone().multiplyScalar(deltaTime);\r\n      playerCollider.translate(deltaPosition);\r\n\r\n      playerCollisions();\r\n\r\n      camera.position.copy(playerCollider.end);\r\n\r\n    }\r\n\r\n    function playerSphereCollision(sphere) {\r\n\r\n      const center = vector1.addVectors(playerCollider.start, playerCollider.end).multiplyScalar(0.5);\r\n\r\n      const sphere_center = sphere.collider.center;\r\n\r\n      const r = playerCollider.radius + sphere.collider.radius;\r\n      const r2 = r * r;\r\n\r\n      // approximation: player = 3 spheres\r\n\r\n      for (const point of [playerCollider.start, playerCollider.end, center]) {\r\n\r\n        const d2 = point.distanceToSquared(sphere_center);\r\n\r\n        if (d2 < r2) {\r\n\r\n          const normal = vector1.subVectors(point, sphere_center).normalize();\r\n          const v1 = vector2.copy(normal).multiplyScalar(normal.dot(playerVelocity));\r\n          const v2 = vector3.copy(normal).multiplyScalar(normal.dot(sphere.velocity));\r\n\r\n          playerVelocity.add(v2).sub(v1);\r\n          sphere.velocity.add(v1).sub(v2);\r\n\r\n          const d = (r - Math.sqrt(d2)) / 2;\r\n          sphere_center.addScaledVector(normal, - d);\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    function spheresCollisions() {\r\n\r\n      for (let i = 0, length = spheres.length; i < length; i++) {\r\n\r\n        const s1 = spheres[i];\r\n\r\n        for (let j = i + 1; j < length; j++) {\r\n\r\n          const s2 = spheres[j];\r\n\r\n          const d2 = s1.collider.center.distanceToSquared(s2.collider.center);\r\n          const r = s1.collider.radius + s2.collider.radius;\r\n          const r2 = r * r;\r\n\r\n          if (d2 < r2) {\r\n\r\n            const normal = vector1.subVectors(s1.collider.center, s2.collider.center).normalize();\r\n            const v1 = vector2.copy(normal).multiplyScalar(normal.dot(s1.velocity));\r\n            const v2 = vector3.copy(normal).multiplyScalar(normal.dot(s2.velocity));\r\n\r\n            s1.velocity.add(v2).sub(v1);\r\n            s2.velocity.add(v1).sub(v2);\r\n\r\n            const d = (r - Math.sqrt(d2)) / 2;\r\n\r\n            s1.collider.center.addScaledVector(normal, d);\r\n            s2.collider.center.addScaledVector(normal, - d);\r\n\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    function updateSpheres(deltaTime) {\r\n\r\n      spheres.forEach(sphere => {\r\n\r\n        sphere.collider.center.addScaledVector(sphere.velocity, deltaTime);\r\n\r\n        const result = worldOctree.sphereIntersect(sphere.collider);\r\n\r\n        if (result) {\r\n\r\n          sphere.velocity.addScaledVector(result.normal, - result.normal.dot(sphere.velocity) * 1.5);\r\n          sphere.collider.center.add(result.normal.multiplyScalar(result.depth));\r\n\r\n        } else {\r\n\r\n          sphere.velocity.y -= GRAVITY * deltaTime;\r\n\r\n        }\r\n\r\n        const damping = Math.exp(- 1.5 * deltaTime) - 1;\r\n        sphere.velocity.addScaledVector(sphere.velocity, damping);\r\n\r\n        playerSphereCollision(sphere);\r\n\r\n      });\r\n\r\n      spheresCollisions();\r\n\r\n      for (const sphere of spheres) {\r\n\r\n        sphere.mesh.position.copy(sphere.collider.center);\r\n\r\n      }\r\n\r\n    }\r\n\r\n    function getForwardVector() {\r\n\r\n      camera.getWorldDirection(playerDirection);\r\n      playerDirection.y = 0;\r\n      playerDirection.normalize();\r\n\r\n      return playerDirection;\r\n\r\n    }\r\n\r\n    function getSideVector() {\r\n\r\n      camera.getWorldDirection(playerDirection);\r\n      playerDirection.y = 0;\r\n      playerDirection.normalize();\r\n      playerDirection.cross(camera.up);\r\n\r\n      return playerDirection;\r\n\r\n    }\r\n\r\n    function controls(deltaTime) {\r\n\r\n      // gives a bit of air control\r\n      const speedDelta = deltaTime * (playerOnFloor ? 25 : 8);\r\n\r\n      if (keyStates['KeyW']) {\r\n\r\n        playerVelocity.add(getForwardVector().multiplyScalar(speedDelta));\r\n\r\n      }\r\n\r\n      if (keyStates['KeyS']) {\r\n\r\n        playerVelocity.add(getForwardVector().multiplyScalar(- speedDelta));\r\n\r\n      }\r\n\r\n      if (keyStates['KeyA']) {\r\n\r\n        playerVelocity.add(getSideVector().multiplyScalar(- speedDelta));\r\n\r\n      }\r\n\r\n      if (keyStates['KeyD']) {\r\n\r\n        playerVelocity.add(getSideVector().multiplyScalar(speedDelta));\r\n\r\n      }\r\n\r\n      if (playerOnFloor) {\r\n\r\n        if (keyStates['Space']) {\r\n\r\n          playerVelocity.y = 15;\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    const loader = new GLTFLoader().setPath('./models/');\r\n\r\n    loader.load('collision-world.glb', (gltf) => {\r\n\r\n      scene.add(gltf.scene);\r\n\r\n      worldOctree.fromGraphNode(gltf.scene);\r\n\r\n      gltf.scene.traverse(child => {\r\n\r\n        if (child.isMesh) {\r\n\r\n          child.castShadow = true;\r\n          child.receiveShadow = true;\r\n\r\n          if (child.material.map) {\r\n\r\n            child.material.map.anisotropy = 4;\r\n\r\n          }\r\n\r\n        }\r\n\r\n      });\r\n\r\n      const helper = new OctreeHelper(worldOctree);\r\n      helper.visible = false;\r\n      scene.add(helper);\r\n\r\n      //const gui = new GUI({ width: 200 });\r\n      gui = new GUI({ autoPlace: false, width: 200 });\r\n      var customContainer = document.getElementById('my-gui-container');\r\n      customContainer.appendChild(gui.domElement);\r\n      gui.add({ debug: false }, 'debug')\r\n        .onChange(function (value) {\r\n\r\n          helper.visible = value;\r\n\r\n        });\r\n\r\n      gui.close();\r\n\r\n      animate();\r\n\r\n    });\r\n\r\n    function teleportPlayerIfOob() {\r\n\r\n      if (camera.position.y <= - 25) {\r\n\r\n        playerCollider.start.set(0, 0.35, 0);\r\n        playerCollider.end.set(0, 1, 0);\r\n        playerCollider.radius = 0.35;\r\n        camera.position.copy(playerCollider.end);\r\n        camera.rotation.set(0, 0, 0);\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n    function animate() {\r\n\r\n      const deltaTime = Math.min(0.05, clock.getDelta()) / STEPS_PER_FRAME;\r\n\r\n      // we look for collisions in substeps to mitigate the risk of\r\n      // an object traversing another too quickly for detection.\r\n\r\n      for (let i = 0; i < STEPS_PER_FRAME; i++) {\r\n\r\n        controls(deltaTime);\r\n\r\n        updatePlayer(deltaTime);\r\n\r\n        updateSpheres(deltaTime);\r\n\r\n        teleportPlayerIfOob();\r\n\r\n      }\r\n\r\n      renderer.render(scene, camera);\r\n\r\n      //stats.update();\r\n\r\n      requestAnimationFrame(animate);\r\n\r\n    }\r\n\r\n  }\r\n}\r\n</script>","import { render } from \"./GamePage.vue?vue&type=template&id=8c184316\"\nimport script from \"./GamePage.vue?vue&type=script&lang=js\"\nexport * from \"./GamePage.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"G:\\\\Threejs\\\\VuejsThreejsForDemo-main\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <div id=\"inputfordraw3dsurface\">\n      <div class=\"form-outline mb-4\">\n        <textarea class=\"form-control\" id=\"coord\" name=\"coord\" rows=\"3\"\n          placeholder=\"Point { x=??? } - (???), Line { x=???, y =??? } - (???,???) or Surface{ x=???, y=???, z=??? } - (???,???,???)\"></textarea>\n      </div>\n      <div>\n        <input type=\"color\" id=\"color-picker\" name=\"color-picker\" value=\"#ff0000\">\n        <button class=\"btn btn-primary rounded-pill px-3\" type=\"button\" id=\"enter\">Enter</button>\n        <button class=\"btn btn-primary rounded-pill px-3\" type=\"button\" id=\"clear\">ClearAll</button>\n      </div>\n\n      <div class=\"checkbox mb-3\">\n        <label>\n          <input type=\"checkbox\" id=\"mesh\" value=\"mesh\"> Visible\n          <input type=\"checkbox\" id=\"Oxy\" value=\"Oxy\"> Oxy\n        </label>\n      </div>\n    </div>\n    <nav-menu />\n  </div>\n</template>\n<script>\nimport * as MYCONST from '@/const.js';\nimport NavMenu from '@/components/NavMenu.vue'\nimport * as THREE from 'three'\nimport { OrbitControls } from 'three/addons/controls/OrbitControls.js';\nimport { ConvexGeometry } from 'three/examples/jsm/geometries/ConvexGeometry.js';\nexport default {\n  name: 'Draw3DSurfacePage',\n  components: {\n    NavMenu\n  },\n  mounted() {\n    const scene = new THREE.Scene();\n\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true })\n    renderer.setClearColor(MYCONST.RENDERER_CLEAR_COLOR);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(window.innerWidth, window.innerHeight)\n    renderer.shadowMap.enabled = true\n    // renderer.outputEncoding = THREE.sRGBEncoding\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap\n\n    this.$el.appendChild(renderer.domElement);\n\n    const controls = new OrbitControls(camera, renderer.domElement);\n\n    const axesHelper = new THREE.AxesHelper(10);\n    scene.add(axesHelper);\n\n    camera.position.set(5, 5, 5);\n\n    const light = new THREE.DirectionalLight()\n    light.castShadow = true\n    light.shadow.mapSize.width = 512\n    light.shadow.mapSize.height = 512\n    light.shadow.camera.near = 0.5\n    light.shadow.camera.far = 100\n    light.position.set(0, 10, 10);\n    // light.color.setHex(0xff0000)\n    scene.add(light)\n\n    const ambient = new THREE.AmbientLight(0x111111);\n    scene.add(ambient)\n    const size = 10;\n    const divisions = 10;\n    const gridHelper = new THREE.GridHelper(size, divisions);\n    gridHelper.translateY(-0.01)\n    scene.add(gridHelper)\n    const planeGeometry = new THREE.PlaneGeometry(15, 15)\n    const plane = new THREE.Mesh(planeGeometry, new THREE.MeshPhongMaterial({ color: 0x888888 }))\n    plane.rotateX(-Math.PI / 2)\n    plane.position.y = -0.05\n    plane.receiveShadow = true\n    scene.add(plane)\n\n    const elementE = document.getElementById(\"enter\")\n    const elementC = document.getElementById(\"clear\")\n    const elementCheck = document.getElementById(\"mesh\")\n    const checkbox = document.getElementById(\"mesh\");\n    elementE?.addEventListener(\"click\", getText)\n    elementC?.addEventListener(\"click\", clearAll)\n    elementCheck?.addEventListener(\"click\", visibleMesh)\n\n    const checkboxOxy = document.getElementById(\"Oxy\");\n    const elementCheckOxy = document.getElementById(\"Oxy\")\n    elementCheckOxy?.addEventListener(\"click\", function () {\n      if (checkboxOxy.checked) {\n        camera.position.set(0, -5, 0)\n        plane.visible = false\n        gridHelper.translateY(0.02)\n        controls.target.set(0, 0, 0)\n        controls.update()\n        camera.updateProjectionMatrix();\n      }\n      else {\n        controls.reset();\n        plane.visible = true\n        gridHelper.translateY(-0.02)\n        camera.position.set(5, 5, 5);\n        controls.target.set(0, 0, 0)\n        controls.update()\n        camera.updateProjectionMatrix();\n      }\n    })\n    const arraylines = []\n    const arrayMeshs = []\n    function getText() {\n      var points = []\n\n      var colorValue = document.getElementById(\"color-picker\").value;\n\n      var inputValue = document.getElementById(\"coord\").value;\n      var lines = inputValue.split(/\\n/);\n      if (lines.length === 0) {\n        points.push(new THREE.Vector3(0, 0, 0))\n      }\n      else {\n        lines.forEach((line) => {\n          let re = line.replace(/\\s+|{|}|x=|\\(|\\)/gm, '')\n          line = re.replace(/y=|z=/gm, ',')\n          var ar = line.split(',')\n          if (ar[0] != \"\") {\n            let [x = 0, y = 0, z = 0] = ar.map(Number).concat([0, 0, 0]).slice(0, 3);\n            points.push(new THREE.Vector3(y / 1000, z / 1000, x / 1000))\n          }\n        });\n      }\n      // To remove duplicate elements\n      if (points.length > 1) {\n        points = points.filter((point, index) => {\n          for (let i = 0; i < index; i++) {\n            if (point.distanceTo(points[i]) < MYCONST.TOLERANCE) {\n              return false;\n            }\n          }\n          return true;\n        });\n      }\n      var hex = parseInt(colorValue.replace(/^#/, ''), 16);\n      if (points.length >= 2) {\n        if (points.length > 2) {\n          //add first elem\n          const [firstPoint] = points;\n          points.push(new THREE.Vector3(...firstPoint.toArray()));\n        }\n        if (points.length > 3) {\n          // add mesh\n          const geometry1 = new ConvexGeometry(points);\n          const material1 = new THREE.MeshBasicMaterial({ color: 0x00ff00, side: THREE.DoubleSide, transparent: true, opacity: 0.5 });\n          const mesh = new THREE.Mesh(geometry1, material1);\n          mesh.visible = checkbox.checked;\n          scene.add(mesh);\n          arrayMeshs.push(mesh)\n          mesh.material.color.setHex(hex)\n        }\n        else {\n          alert(\"No surface created\")\n        }\n\n        // add line\n        let geometry = new THREE.BufferGeometry().setFromPoints(points)\n        let line = new THREE.Line(\n          geometry,\n          new THREE.LineBasicMaterial({ color: 0x88888 })\n        )\n        line.material.color.setHex(hex)\n        arraylines.push(line)\n        scene.add(line)\n\n        autoFit();\n      }\n      else if (points.length == 1) {\n        // add Point\n        const color = hex;\n        const size = 0.01;\n        const geometry = new THREE.SphereGeometry(size, 32, 16);\n        const material = new THREE.MeshBasicMaterial({ color: color });\n        const sphere = new THREE.Mesh(geometry, material);\n        sphere.position.set(points[0].x, points[0].y, points[0].z);\n        scene.add(sphere);\n      }\n      else {\n        alert(\"Please check input again!!!\")\n      }\n    }\n\n    function clearAll() {\n      arraylines.forEach(line => {\n        scene.remove(line)\n      });\n      arrayMeshs.forEach(mesh => {\n        scene.remove(mesh)\n      });\n      arrayMeshs.length = 0;\n      camera.position.set(5, 5, 5)\n    }\n\n    function visibleMesh() {\n      arrayMeshs.forEach(mesh => {\n        mesh.visible = checkbox.checked;\n      });\n    }\n\n    function autoFit() {\n      if (checkboxOxy.checked) return;\n      const FIT_OFFSET = 1.25;\n\n      if (arrayMeshs.length < 1) {\n        camera.near = 0.1;\n        camera.far = 1000;\n        camera.position.set(2, 2, 2);\n        camera.updateProjectionMatrix();\n        controls.maxDistance = Infinity;\n        controls.minDistance = 0;\n        return;\n      }\n\n      const checkLastValueInArray = [arrayMeshs[arrayMeshs.length - 1]];\n      let { minX = 0, minY = 0, minZ = 0, maxX = 0, maxY = 0, maxZ = 0 } = {};\n      let isFirst = true;\n      let isExistBox = false;\n      for (const localMesh of checkLastValueInArray) {\n        if (localMesh instanceof THREE.Mesh) {\n          const posAttr = localMesh.geometry.getAttribute(\"position\");\n          if (posAttr.count == 0) continue;\n\n          localMesh.geometry.computeBoundingBox()\n\n          if (localMesh.geometry.boundingBox.isBox3) {\n            var bBox = new THREE.Box3().copy(localMesh.geometry.boundingBox);\n            bBox.applyMatrix4(localMesh.matrixWorld);\n            isExistBox = true;\n\n            if (isFirst) {\n              minX = bBox.min.x;\n              minY = bBox.min.y;\n              minZ = bBox.min.z;\n              maxX = bBox.max.x;\n              maxY = bBox.max.y;\n              maxZ = bBox.max.z;\n              isFirst = false;\n            }\n            // compute overall bbox (bbox contains the origin)\n            minX = Math.min(minX, bBox.min.x);\n            minY = Math.min(minY, bBox.min.y);\n            minZ = Math.min(minZ, bBox.min.z);\n            maxX = Math.max(maxX, bBox.max.x);\n            maxY = Math.max(maxY, bBox.max.y);\n            maxZ = Math.max(maxZ, bBox.max.z);\n          }\n        }\n      }\n\n      if (!isExistBox) return;\n      const bBox_min = new THREE.Vector3(minX, minY, minZ);\n      const bBox_max = new THREE.Vector3(maxX, maxY, maxZ);\n      const box = new THREE.Box3(bBox_min, bBox_max);\n\n      const center = box.getCenter(new THREE.Vector3());\n\n      const maxSize = bBox_min.distanceTo(bBox_max);\n      const fitHeightDistance =\n        maxSize / (2 * Math.atan((Math.PI * camera.fov) / 360));\n      const fitWidthDistance = fitHeightDistance / camera.aspect;\n      const distance =\n        FIT_OFFSET * Math.max(fitHeightDistance, fitWidthDistance);\n\n      const direction = controls.target\n        .clone()\n        .sub(camera.position)\n        .normalize()\n        .multiplyScalar(distance);\n\n      // Set value max zoom in and zoom out\n      controls.maxDistance = distance * 10;\n      //controls.minDistance = distance / 10;\n      controls.target.copy(center);\n\n      camera.near = distance / 100;\n      camera.far = distance * 100;\n      camera.updateProjectionMatrix();\n\n      camera.position.copy(controls.target).sub(direction);\n\n      controls.update();\n    }\n\n\n    const animate = function () {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n    window.addEventListener('resize', onWindowResize);\n  }\n}\n</script>\n","import { render } from \"./Draw3DSurfacePage.vue?vue&type=template&id=43631289\"\nimport script from \"./Draw3DSurfacePage.vue?vue&type=script&lang=js\"\nexport * from \"./Draw3DSurfacePage.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"G:\\\\Threejs\\\\VuejsThreejsForDemo-main\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <div class=\"note-text\">Create random SpotLight</div>\n    <progress value=\"0\" max=\"100\" id=\"progressBar\"></progress>\n    <nav-menu />\n  </div>\n</template>\n<script>\n//import * as MYCONST from '@/const.js';\nimport NavMenu from '@/components/NavMenu.vue'\nimport * as THREE from 'three'\nimport { OrbitControls } from 'three/addons/controls/OrbitControls.js';\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader'\nimport TWEEN from '@tweenjs/tween.js'\nimport { Reflector } from 'three/examples/jsm/objects/Reflector'\nexport default {\n  name: 'DrawRainBowLightPage',\n  components: {\n    NavMenu\n  },\n  mounted() {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x888888);\n\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(2, 1, 2);\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true })\n    //renderer.setClearColor(MYCONST.RENDERER_CLEAR_COLOR);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(window.innerWidth, window.innerHeight)\n    renderer.shadowMap.enabled = true\n    //renderer.outputEncoding = THREE.sRGBEncoding\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap\n    this.$el.appendChild(renderer.domElement);\n\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true\n    controls.target.set(0, 0, 0);\n    controls.maxPolarAngle = Math.PI / 2;\n    controls.autoRotate = true\n    controls.update();\n\n    const axesHelper = new THREE.AxesHelper(10);\n    scene.add(axesHelper);\n\n    const planeGeometry = new THREE.PlaneGeometry(15, 15)\n    const plane = new THREE.Mesh(planeGeometry, new THREE.MeshPhongMaterial({ color: 0xaaaaaa }))\n    plane.rotateX(-Math.PI / 2)\n    plane.position.y = -0.05\n    plane.receiveShadow = true\n    scene.add(plane)\n\n    const size = 10;\n    const divisions = 10;\n    const gridHelper = new THREE.GridHelper(size, divisions);\n    gridHelper.translateY(-0.01)\n    scene.add(gridHelper)\n\n    const mirrorBack1 = new Reflector(\n      new THREE.PlaneGeometry(4, 4),\n      {\n        color: new THREE.Color(0xcccccc),\n        textureWidth: window.innerWidth * window.devicePixelRatio,\n        textureHeight: window.innerHeight * window.devicePixelRatio\n      }\n    )\n    mirrorBack1.position.y = 1\n    mirrorBack1.position.z = -2\n    scene.add(mirrorBack1)\n\n    const light = new THREE.DirectionalLight()\n    light.castShadow = true\n    light.shadow.mapSize.width = 512\n    light.shadow.mapSize.height = 512\n    light.shadow.camera.near = 0.5\n    light.shadow.camera.far = 100\n    light.position.set(0, 10, 10);\n    // light.color.setHex(0xff0000)\n    scene.add(light)\n\n    const ambient = new THREE.AmbientLight(0x111111);\n    scene.add(ambient)\n\n    const progressBar = document.getElementById(\n      'progressBar'\n    )\n\n    const spotLightColors = [0xFF0000, 0xFFA500, 0xFFFF00, 0x008000, 0x0000FF, 0x4B0082, 0xEE82EE];\n    const spotLights = [];\n    const spotlightTargets = [];\n\n    for (let i = 0; i < spotLightColors.length; i++) {\n      const spotlight = createSpotlight(spotLightColors[i]);\n      spotlight.position.set(0, 3, 0);\n      spotLights.push(spotlight);\n\n      const spotlightTarget = createSpotlightTarget();\n      spotlight.target = spotlightTarget;\n      spotlightTargets.push(spotlightTarget);\n\n      scene.add(spotlight, spotlightTarget);\n    }\n\n    function createSpotlight(color) {\n      const spotlight = new THREE.SpotLight(color, 2);\n      // spotlight.castShadow = true;\n      spotlight.angle = 0.1;\n      spotlight.penumbra = 0.5;\n      spotlight.decay = 1;\n      spotlight.distance = 10;\n      return spotlight;\n    }\n\n    function createSpotlightTarget() {\n      const spotlightTarget = new THREE.Object3D();\n      spotlightTarget.position.set(0, 0, 0);\n      return spotlightTarget;\n    }\n\n    function tween(light) {\n\n      new TWEEN.Tween(light).to({\n        angle: Math.random() * (0.3 - 0.1) + 0.1,\n        penumbra: Math.random() * (1 - 0.3) + 0.3,\n      }, 10)\n        .easing(TWEEN.Easing.Quadratic.Out).start();\n\n    }\n\n    function target(st) {\n      const r = 8;\n      new TWEEN.Tween(st.position).to({\n        x: Math.random() * r * 2 - r\n      }, 10)\n        .easing(TWEEN.Easing.Quadratic.Out).start();\n\n      let zz = Math.sqrt(r * r - st.position.x * st.position.x);\n      new TWEEN.Tween(st.position).to({\n        z: Math.random() * zz * 2 - zz\n      }, 10)\n        .easing(TWEEN.Easing.Quadratic.Out).start();\n    }\n\n    const mixer = {}\n    let modelReady = {}\n\n    const fbxLoader = new FBXLoader()\n\n    const loadModel = (url, scale, position, animationIndex) => {\n      fbxLoader.load(\n        url,\n        (object) => {\n          progressBar.style.display = 'none'\n          object.scale.set(scale, scale, scale)\n          object.position.copy(position)\n          object.traverse(function (child) { child.castShadow = true; child.receiveShadow = true; });\n          mixer[url] = new THREE.AnimationMixer(object)\n\n          const animationAction = mixer[url].clipAction(\n            (object).animations[animationIndex]\n          )\n\n          scene.add(object)\n          modelReady[url] = true\n          setAction(animationAction)\n        },\n        (xhr) => {\n          const percentComplete = (xhr.loaded / xhr.total) * 100\n          progressBar.value = percentComplete === Infinity ? 100 : percentComplete\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n    }\n\n    const setAction = (toAction) => {\n      toAction.reset()\n      toAction.fadeIn(1)\n      toAction.play()\n    }\n\n    // must using 2 clock to run 2 models independently\n    const clocks = [];\n    const numClocks = 1;\n    //loadModel('models/Hip Hop Dancing.fbx', 0.008, new THREE.Vector3(0, 0, -1), 0)\n    loadModel('models/eve@dancing.fbx', 0.01, new THREE.Vector3(0, 0, 0), 0)\n\n    for (let i = 0; i < numClocks; i++) {\n      clocks.push(new THREE.Clock());\n    }\n\n    const animate = function () {\n\n      for (let i = 0; i < spotLightColors.length; i++) {\n        tween(spotLights[i]);\n        target(spotlightTargets[i]);\n      }\n      let i = 0;\n      for (const url in mixer) {\n        if (Object.prototype.hasOwnProperty.call(mixer, url)) {\n          const animationMixer = mixer[url]\n          if (modelReady[url]) {\n            animationMixer.update(clocks[i++].getDelta())\n          }\n        }\n      }\n      controls.update()\n      render()\n    };\n\n    function render() {\n      TWEEN.update()\n      renderer.render(scene, camera)\n      requestAnimationFrame(animate)\n    }\n    animate()\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n    window.addEventListener('resize', onWindowResize);\n  }\n}\n</script>\n","import { render } from \"./DrawRainBowLightPage.vue?vue&type=template&id=5517eaaa\"\nimport script from \"./DrawRainBowLightPage.vue?vue&type=script&lang=js\"\nexport * from \"./DrawRainBowLightPage.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"G:\\\\Threejs\\\\VuejsThreejsForDemo-main\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <div class=\"note-text\">Press CTRL + Left Mouse Click to start drawing a line. <br>Continue to hold CTRL and Left Mouse Click again to mark the end of the line.</div>\n    <nav-menu />\n  </div>\n</template>\n<script>\n//import * as MYCONST from '@/const.js';\nimport NavMenu from '@/components/NavMenu.vue'\nimport * as THREE from 'three'\nimport { OrbitControls } from 'three/addons/controls/OrbitControls.js';\nimport { Reflector } from 'three/examples/jsm/objects/Reflector'\nimport {\n  CSS2DRenderer,\n  CSS2DObject,\n} from 'three/examples/jsm/renderers/CSS2DRenderer'\nexport default {\n  name: 'DrawDimensionPage',\n  components: {\n    NavMenu\n  },\n  mounted() {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x888888);\n\n    const labelRenderer = new CSS2DRenderer()\n    labelRenderer.setSize(window.innerWidth, window.innerHeight)\n    labelRenderer.domElement.style.position = 'absolute'\n    labelRenderer.domElement.style.top = '0px'\n    labelRenderer.domElement.style.pointerEvents = 'none'\n    this.$el.appendChild(labelRenderer.domElement)\n\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(3, 3, 3);\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true })\n    //renderer.setClearColor(MYCONST.RENDERER_CLEAR_COLOR);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(window.innerWidth, window.innerHeight)\n    renderer.shadowMap.enabled = true\n    //renderer.outputEncoding = THREE.sRGBEncoding\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap\n    this.$el.appendChild(renderer.domElement);\n\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true\n    controls.target.set(0, 0, 0);\n    controls.maxPolarAngle = Math.PI / 2;\n    //controls.autoRotate = true\n    controls.update();\n\n    const axesHelper = new THREE.AxesHelper(10);\n    scene.add(axesHelper);\n\n    const planeGeometry = new THREE.PlaneGeometry(15, 15)\n    const plane = new THREE.Mesh(planeGeometry, new THREE.MeshPhongMaterial({ color: 0xaaaaaa }))\n    plane.rotateX(-Math.PI / 2)\n    plane.position.y = -0.05\n    plane.receiveShadow = true\n    scene.add(plane)\n\n    const size = 10;\n    const divisions = 10;\n    const gridHelper = new THREE.GridHelper(size, divisions);\n    gridHelper.translateY(-0.01)\n    scene.add(gridHelper)\n\n    const mirrorBack1 = new Reflector(\n      new THREE.PlaneGeometry(4, 4),\n      {\n        color: new THREE.Color(0xcccccc),\n        textureWidth: window.innerWidth * window.devicePixelRatio,\n        textureHeight: window.innerHeight * window.devicePixelRatio\n      }\n    )\n    mirrorBack1.position.y = 1\n    mirrorBack1.position.z = -2\n    scene.add(mirrorBack1)\n\n    const light = new THREE.DirectionalLight()\n    light.castShadow = true\n    light.shadow.mapSize.width = 512\n    light.shadow.mapSize.height = 512\n    light.shadow.camera.near = 0.5\n    light.shadow.camera.far = 100\n    light.position.set(0, 10, 10);\n    // light.color.setHex(0xff0000)\n    scene.add(light)\n\n    const ambient = new THREE.AmbientLight(0x111111);\n    scene.add(ambient)\n\n    //raycaster\n    renderer.domElement.addEventListener('dblclick', onDoubleClick, false)\n    renderer.domElement.addEventListener('mousemove', onMouseMove, false)\n\n    let geometrysphere = new THREE.SphereGeometry(3, 32, 16, 0, Math.PI * 2, 0, Math.PI * 2);\n    let materialsphere = new THREE.MeshNormalMaterial();\n    const spheresphere = new THREE.Mesh(geometrysphere, materialsphere);\n    spheresphere.position.set(0, 1, 2);\n    spheresphere.name = \"s1\";\n    spheresphere.scale.set(0.1, 0.1, 0.1);\n    scene.add(spheresphere);\n\n    let geometrysphere1 = new THREE.SphereGeometry(3, 32, 16, 0, Math.PI * 2, 0, Math.PI * 2);\n    let materialsphere1 = new THREE.MeshNormalMaterial();\n    const spheresphere1 = new THREE.Mesh(geometrysphere1, materialsphere1);\n    spheresphere1.position.set(2, 1, 0);\n    spheresphere1.scale.set(0.1, 0.1, 0.1);\n    spheresphere1.name = \"s2\";\n    scene.add(spheresphere1);\n\n    let intersectedObject\n    const originalMaterials = {}\n    originalMaterials[spheresphere.name] = (spheresphere).material\n    originalMaterials[spheresphere1.name] = (spheresphere1).material\n\n    const highlightedMaterial = new THREE.MeshBasicMaterial({\n      wireframe: true,\n      color: 0x00ff00,\n    })\n\n    let sceneMeshes = []\n    sceneMeshes.push(spheresphere)\n    sceneMeshes.push(spheresphere1)\n\n    const arrowHelper = new THREE.ArrowHelper(\n      new THREE.Vector3(),\n      new THREE.Vector3(),\n      0.25,\n      0xff0000\n    )\n    const coneGeometry = new THREE.ConeGeometry(0.05, 0.2, 8)\n    const material = new THREE.MeshNormalMaterial()\n    scene.add(arrowHelper)\n\n    const mouse = new THREE.Vector2()\n    const raycaster = new THREE.Raycaster()\n    var intersects\n\n    function onMouseMove(event) {\n      event.preventDefault()\n      mouse.set(\n        (event.clientX / window.innerWidth) * 2 - 1,\n        -((event.clientY - 82) / window.innerHeight) * 2 + 1\n      )\n\n      if (drawingLine) {\n        raycaster.setFromCamera(mouse, camera)\n        intersects = raycaster.intersectObjects(sceneMeshes, false)\n        if (intersects.length > 0) {\n          const positions = (\n            line.geometry.attributes.position\n          ).array\n          const v0 = new THREE.Vector3(\n            positions[0],\n            positions[1],\n            positions[2]\n          )\n          const v1 = new THREE.Vector3(\n            intersects[0].point.x,\n            intersects[0].point.y,\n            intersects[0].point.z\n          )\n          positions[3] = intersects[0].point.x\n          positions[4] = intersects[0].point.y\n          positions[5] = intersects[0].point.z\n          line.geometry.attributes.position.needsUpdate = true\n          const distance = v0.distanceTo(v1)\n          measurementLabels[lineId].element.innerText =\n            distance.toFixed(2) + 'm'\n          measurementLabels[lineId].position.lerpVectors(v0, v1, 0.5)\n        }\n      }\n      // console.log(mouse)\n\n      raycaster.setFromCamera(mouse, camera)\n\n      const intersects1 = raycaster.intersectObjects(sceneMeshes, false)\n\n      if (intersects1.length > 0) {\n\n        const n = new THREE.Vector3()\n        n.copy((intersects1[0].face).normal)\n        n.transformDirection(intersects1[0].object.matrixWorld)\n\n        arrowHelper.setDirection(n)\n        arrowHelper.position.copy(intersects1[0].point)\n      }\n      if (intersects1.length > 0) {\n        intersectedObject = intersects1[0].object;\n      } else {\n        intersectedObject = null;\n      }\n      for (let i = 0; i < sceneMeshes.length; i++) {\n        if (intersectedObject && intersectedObject.name === sceneMeshes[i].name) {\n          (sceneMeshes[i]).material = highlightedMaterial\n        }\n        else {\n          (sceneMeshes[i]).material = originalMaterials[sceneMeshes[i].name]\n        }\n      }\n    }\n\n    function onDoubleClick(event) {\n      mouse.set(\n        (event.clientX / window.innerWidth) * 2 - 1,\n        -((event.clientY - 82) / window.innerHeight) * 2 + 1\n      )\n      raycaster.setFromCamera(mouse, camera)\n\n      const intersects = raycaster.intersectObjects(sceneMeshes, false)\n\n      if (intersects.length > 0) {\n        const n = new THREE.Vector3()\n        n.copy((intersects[0].face).normal)\n        n.transformDirection(intersects[0].object.matrixWorld)\n\n        const cube = new THREE.Mesh(coneGeometry, material)\n\n        cube.lookAt(n)\n        cube.rotateX(Math.PI / 2)\n        cube.position.copy(intersects[0].point)\n        cube.position.addScaledVector(n, 0.1)\n\n        scene.add(cube)\n      }\n    }\n\n    let ctrlDown = false\n    let lineId = 0\n    let line\n    let drawingLine = false\n    const measurementLabels = {}\n\n    window.addEventListener('keydown', function (event) {\n      if (event.key === 'Control') {\n        ctrlDown = true\n        controls.enabled = false\n        renderer.domElement.style.cursor = 'crosshair'\n      }\n    })\n\n    window.addEventListener('keyup', function (event) {\n      if (event.key === 'Control') {\n        ctrlDown = false\n        controls.enabled = true\n        renderer.domElement.style.cursor = 'pointer'\n        if (drawingLine) {\n          //delete the last line because it wasn't committed\n          scene.remove(line)\n          scene.remove(measurementLabels[lineId])\n          drawingLine = false\n        }\n      }\n    })\n\n    renderer.domElement.addEventListener('pointerdown', onClick, false)\n    function onClick() {\n      if (ctrlDown) {\n        raycaster.setFromCamera(mouse, camera)\n        intersects = raycaster.intersectObjects(sceneMeshes, false)\n        if (intersects.length > 0) {\n          if (!drawingLine) {\n            //start the line\n            const points = []\n            points.push(intersects[0].point)\n            points.push(intersects[0].point.clone())\n            const geometry = new THREE.BufferGeometry().setFromPoints(\n              points\n            )\n            line = new THREE.LineSegments(\n              geometry,\n              new THREE.LineBasicMaterial({\n                color: 0xffffff,\n                transparent: true,\n                opacity: 0.75,\n                // depthTest: false,\n                // depthWrite: false\n              })\n            )\n            line.frustumCulled = false\n            scene.add(line)\n\n            const measurementDiv = document.createElement(\n              'div'\n            )\n            measurementDiv.className = 'measurementLabel'\n            measurementDiv.innerText = '0.0m'\n            const measurementLabel = new CSS2DObject(measurementDiv)\n            measurementLabel.position.copy(intersects[0].point)\n            measurementLabels[lineId] = measurementLabel\n            scene.add(measurementLabels[lineId])\n            drawingLine = true\n          } else {\n            //finish the line\n            const positions = (\n              line.geometry.attributes.position\n            ).array\n            positions[3] = intersects[0].point.x\n            positions[4] = intersects[0].point.y\n            positions[5] = intersects[0].point.z\n            line.geometry.attributes.position.needsUpdate = true\n            lineId++\n            drawingLine = false\n          }\n        }\n      }\n    }\n\n\n    const animate = function () {\n      controls.update()\n      render()\n    };\n\n    function render() {\n      labelRenderer.render(scene, camera)\n      renderer.render(scene, camera)\n      requestAnimationFrame(animate)\n    }\n    animate()\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n    window.addEventListener('resize', onWindowResize);\n  }\n}\n</script>\n","import { render } from \"./DrawDimensionPage.vue?vue&type=template&id=1ab75e5a\"\nimport script from \"./DrawDimensionPage.vue?vue&type=script&lang=js\"\nexport * from \"./DrawDimensionPage.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"G:\\\\Threejs\\\\VuejsThreejsForDemo-main\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <nav-menu />\n    <div id=\"my-gui-container\"></div>\n  </div>\n</template>\n<script>\nimport NavMenu from '@/components/NavMenu.vue'\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\n//import Stats from 'three/examples/jsm/libs/stats.module'\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { acceleratedRaycast, computeBoundsTree, disposeBoundsTree, CONTAINED, INTERSECTED, NOT_INTERSECTED } from \"three-mesh-bvh\";\nlet gui;\nexport default {\n  name: 'DrawSelectAreaPage',\n  components: {\n    NavMenu\n  },\n  unmounted() {\n    if (gui) gui.destroy();\n    gui = null;\n  },\n  mounted() {\n    THREE.Mesh.prototype.raycast = acceleratedRaycast;\n    THREE.BufferGeometry.prototype.computeBoundsTree = computeBoundsTree;\n    THREE.BufferGeometry.prototype.disposeBoundsTree = disposeBoundsTree;\n\n    const params = {\n      size: 0.1,\n      rotate: true,\n    };\n\n    //let stats;\n    let scene, camera, renderer, controls;\n    let targetMesh, brushMesh;\n    let mouse = new THREE.Vector2();\n    let mouseType = - 1, brushActive = false;\n    let lastTime;\n    let container = this.$el;\n\n    function init() {\n\n      const bgColor = 0x263238 / 2;\n\n      // renderer setup\n      renderer = new THREE.WebGLRenderer({ antialias: true });\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      renderer.setClearColor(bgColor, 1);\n      renderer.outputEncoding = THREE.sRGBEncoding;\n      container.appendChild(renderer.domElement);\n      renderer.domElement.style.touchAction = 'none';\n\n      // scene setup\n      scene = new THREE.Scene();\n      scene.fog = new THREE.Fog(0x263238 / 2, 20, 60);\n\n      const light = new THREE.DirectionalLight(0xffffff, 0.5);\n      light.position.set(1, 1, 1);\n      scene.add(light);\n      scene.add(new THREE.AmbientLight(0xffffff, 0.4));\n\n      // geometry setup\n      const radius = 1;\n      const tube = 0.4;\n      const tubularSegments = 800;\n      const radialSegments = 400;\n\n      const knotGeometry = new THREE.TorusKnotGeometry(radius, tube, tubularSegments, radialSegments).toNonIndexed();\n      const colorArray = new Uint8Array(knotGeometry.attributes.position.count * 3);\n      colorArray.fill(255);\n      const colorAttr = new THREE.BufferAttribute(colorArray, 3, true);\n      colorAttr.setUsage(THREE.DynamicDrawUsage);\n      knotGeometry.setAttribute('color', colorAttr);\n\n      const knotMaterial = new THREE.MeshStandardMaterial({ color: 0xffffff, roughness: 0.3, metalness: 0, vertexColors: true });\n      targetMesh = new THREE.Mesh(knotGeometry, knotMaterial);\n      targetMesh.geometry.computeBoundsTree();\n      scene.add(targetMesh);\n\n      const brushGeometry = new THREE.SphereGeometry(1, 40, 40);\n      const brushMaterial = new THREE.MeshStandardMaterial({\n        color: 0xEC407A,\n        roughness: 0.75,\n        metalness: 0,\n        transparent: true,\n        opacity: 0.5,\n        premultipliedAlpha: true,\n        emissive: 0xEC407A,\n        emissiveIntensity: 0.5,\n      });\n\n      brushMesh = new THREE.Mesh(brushGeometry, brushMaterial);\n      scene.add(brushMesh);\n\n      // camera setup\n      camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 50);\n      camera.position.set(3, 3, 3);\n      camera.far = 100;\n      camera.updateProjectionMatrix();\n\n\n      // stats setup\n      // stats = new Stats();\n      // document.body.appendChild(stats.dom);\n\n      gui = new GUI({ autoPlace: false });\n      var customContainer = document.getElementById('my-gui-container');\n      customContainer.appendChild(gui.domElement);\n      gui.add(params, 'size').min(0.1).max(1).step(0.1);\n      gui.add(params, 'rotate');\n      gui.open();\n\n      window.addEventListener('resize', function () {\n\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n\n        renderer.setSize(window.innerWidth, window.innerHeight);\n\n      }, false);\n\n      window.addEventListener('pointermove', function (e) {\n\n        mouse.x = (e.clientX / window.innerWidth) * 2 - 1;\n        mouse.y = - ((e.clientY - 82) / window.innerHeight) * 2 + 1;\n        brushActive = true;\n\n      });\n\n      window.addEventListener('pointerdown', function (e) {\n\n        mouse.x = (e.clientX / window.innerWidth) * 2 - 1;\n        mouse.y = - ((e.clientY - 82) / window.innerHeight) * 2 + 1;\n        mouseType = e.button;\n\n        // disable the controls early if we're over the object because on touch screens\n        // we're not constantly tracking where the cursor is.\n        const raycaster = new THREE.Raycaster();\n        raycaster.setFromCamera(mouse, camera);\n        raycaster.firstHitOnly = true;\n\n        const res = raycaster.intersectObject(targetMesh, true);\n        brushActive = true;\n        controls.enabled = res.length === 0;\n\n      }, true);\n\n      window.addEventListener('pointerup', function (e) {\n\n        mouseType = - 1;\n        if (e.pointerType === 'touch') {\n\n          // disable the brush visualization when the pointer action is done only\n          // if it's on a touch device.\n          brushActive = false;\n\n        }\n\n      }, true);\n\n      window.addEventListener('contextmenu', function (e) {\n\n        e.preventDefault();\n\n      });\n\n      window.addEventListener('wheel', function (e) {\n\n        let delta = e.deltaY;\n\n        if (e.deltaMode === 1) {\n\n          delta *= 40;\n\n        }\n\n        if (e.deltaMode === 2) {\n\n          delta *= 40;\n\n        }\n\n        params.size += delta * 0.0005;\n        params.size = Math.max(Math.min(params.size, 1), 0.1);\n\n        gui.controllersRecursive().forEach(c => c.updateDisplay());\n\n      });\n\n      controls = new OrbitControls(camera, renderer.domElement);\n\n      controls.addEventListener('start', function () {\n\n        this.active = true;\n\n      });\n\n      controls.addEventListener('end', function () {\n\n        this.active = false;\n\n      });\n\n      lastTime = window.performance.now();\n\n    }\n\n    function render() {\n\n      requestAnimationFrame(render);\n\n      //stats.begin();\n\n      const geometry = targetMesh.geometry;\n      const bvh = geometry.boundsTree;\n      const colorAttr = geometry.getAttribute('color');\n      const indexAttr = geometry.index;\n\n      if (controls.active || !brushActive) {\n\n        brushMesh.visible = false;\n\n      } else {\n\n        brushMesh.scale.setScalar(params.size);\n\n        const raycaster = new THREE.Raycaster();\n        raycaster.setFromCamera(mouse, camera);\n        raycaster.firstHitOnly = true;\n\n        const res = raycaster.intersectObject(targetMesh, true);\n        if (res.length) {\n\n          brushMesh.position.copy(res[0].point);\n          controls.enabled = false;\n          brushMesh.visible = true;\n\n          const inverseMatrix = new THREE.Matrix4();\n          inverseMatrix.copy(targetMesh.matrixWorld).invert();\n\n          const sphere = new THREE.Sphere();\n          sphere.center.copy(brushMesh.position).applyMatrix4(inverseMatrix);\n          sphere.radius = params.size;\n\n          const indices = [];\n          const tempVec = new THREE.Vector3();\n          bvh.shapecast({\n\n            intersectsBounds: box => {\n\n              const intersects = sphere.intersectsBox(box);\n              const { min, max } = box;\n              if (intersects) {\n\n                for (let x = 0; x <= 1; x++) {\n\n                  for (let y = 0; y <= 1; y++) {\n\n                    for (let z = 0; z <= 1; z++) {\n\n                      tempVec.set(\n                        x === 0 ? min.x : max.x,\n                        y === 0 ? min.y : max.y,\n                        z === 0 ? min.z : max.z\n                      );\n                      if (!sphere.containsPoint(tempVec)) {\n\n                        return INTERSECTED;\n\n                      }\n\n                    }\n\n                  }\n\n                }\n\n                return CONTAINED;\n\n              }\n\n              return intersects ? INTERSECTED : NOT_INTERSECTED;\n\n            },\n\n            intersectsTriangle: (tri, i, contained) => {\n\n              if (contained || tri.intersectsSphere(sphere)) {\n\n                const i3 = 3 * i;\n                indices.push(i3, i3 + 1, i3 + 2);\n\n              }\n\n              return false;\n\n            }\n\n          });\n\n          if (mouseType === 0 || mouseType === 2) {\n\n            let r = 255, g = 255, b = 255;\n            if (mouseType === 0) {\n\n              r = 15;\n              g = 78;\n              b = 85;\n\n            }\n\n            for (let i = 0, l = indices.length; i < l; i++) {\n\n              const i2 = indexAttr.getX(indices[i]);\n              colorAttr.setX(i2, r);\n              colorAttr.setY(i2, g);\n              colorAttr.setZ(i2, b);\n\n            }\n\n            colorAttr.needsUpdate = true;\n\n          }\n\n        } else {\n\n          controls.enabled = true;\n          brushMesh.visible = false;\n\n        }\n\n      }\n\n      const currTime = window.performance.now();\n      if (params.rotate) {\n\n        const delta = currTime - lastTime;\n        targetMesh.rotation.y += delta * 0.001;\n\n      }\n\n      lastTime = currTime;\n\n      renderer.render(scene, camera);\n      //stats.end();\n\n    }\n\n\n    init();\n    render();\n  }\n}\n</script>\n","import { render } from \"./DrawSelectAreaPage.vue?vue&type=template&id=5e8e1886\"\nimport script from \"./DrawSelectAreaPage.vue?vue&type=script&lang=js\"\nexport * from \"./DrawSelectAreaPage.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"G:\\\\Threejs\\\\VuejsThreejsForDemo-main\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <div id=\"info\">\n      Accelerated geometry edge projection and clipping onto<br />the XZ plane for orthographic vector views.\n    </div>\n    <div id=\"output\"></div>\n    <nav-menu />\n    <div id=\"my-gui-container\"></div>\n  </div>\n</template>\n<script>\nimport NavMenu from '@/components/NavMenu.vue'\nimport * as THREE from 'three';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { MeshBVH } from 'three-mesh-bvh';\nimport {\n  generateEdges,\n  isLineAbovePlane,\n  isYProjectedTriangleDegenerate,\n  isLineTriangleEdge,\n  trimToBeneathTriPlane,\n  edgesToGeometry,\n  overlapsToLines,\n  getProjectedOverlaps,\n  isYProjectedLineDegenerate,\n  compressEdgeOverlaps,\n} from './utils/edgeUtils.js';\nimport { mergeBufferGeometries } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport { MeshoptDecoder } from 'three/examples/jsm/libs/meshopt_decoder.module.js';\n\nlet gui;\nexport default {\n  name: 'EdgeProjectionPage',\n  components: {\n    NavMenu\n  },\n  unmounted() {\n    if (gui) gui.destroy();\n    gui = null;\n  },\n  mounted() {\n    const params = {\n      displayModel: 'color',\n      displayEdges: false,\n      displayProjection: true,\n      useBVH: true,\n      sortEdges: true,\n      rotate: () => {\n\n        group.quaternion.random();\n        group.position.set(0, 0, 0);\n        group.updateMatrixWorld(true);\n\n        const box = new THREE.Box3();\n        box.setFromObject(model, true);\n        box.getCenter(group.position).multiplyScalar(- 1);\n        group.position.y = Math.max(0, - box.min.y) + 1;\n\n      },\n      regenerate: () => {\n\n        task = updateEdges();\n\n      },\n    };\n\n    let renderer, camera, scene, controls;\n    let lines, model, projection, group, whiteModel;\n    let outputContainer;\n    let task = null;\n    let container = this.$el;\n\n    init();\n\n    async function init() {\n\n      outputContainer = document.getElementById('output');\n\n      const bgColor = 0xeeeeee;\n\n      // renderer setup\n      renderer = new THREE.WebGLRenderer({ antialias: true });\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      renderer.setClearColor(bgColor, 1);\n      renderer.outputEncoding = THREE.sRGBEncoding;\n      container.appendChild(renderer.domElement);\n\n      // scene setup\n      scene = new THREE.Scene();\n\n      // lights\n      const light = new THREE.DirectionalLight(0xffffff, 1);\n      light.position.set(1, 2, 3);\n      scene.add(light);\n      scene.add(new THREE.AmbientLight(0xb0bec5, 0.25));\n\n      const axesHelper = new THREE.AxesHelper(10);\n      scene.add(axesHelper);\n\n      const planeGeometry = new THREE.PlaneGeometry(5, 5)\n      const plane = new THREE.Mesh(planeGeometry, new THREE.MeshPhongMaterial({ color: 0xcccccc }))\n      plane.rotateX(-Math.PI / 2)\n      plane.position.y = -0.05\n      plane.receiveShadow = true\n      scene.add(plane)\n\n      // load model\n      group = new THREE.Group();\n      scene.add(group);\n\n      window.addEventListener('resize', function () {\n\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n\n        renderer.setSize(window.innerWidth, window.innerHeight);\n\n      }, false);\n\n      const gltf = await new GLTFLoader().setMeshoptDecoder(MeshoptDecoder).loadAsync('models/artillery_military_weapon.glb');\n      model = gltf.scene;\n      model.scale.set(0.01, 0.01, 0.01);\n\n      const whiteMaterial = new THREE.MeshStandardMaterial();\n      whiteModel = model.clone();\n      whiteModel.traverse(c => {\n\n        if (c.material) {\n\n          c.material = whiteMaterial;\n\n        }\n\n      });\n\n      group.updateMatrixWorld(true);\n\n      // center model\n      const box = new THREE.Box3();\n      box.setFromObject(model, true);\n      box.getCenter(group.position).multiplyScalar(- 1);\n      group.position.y = Math.max(0, - box.min.y) + 1;\n      group.add(model, whiteModel);\n\n      // generate geometry line segments\n      lines = new THREE.Group();\n      model.traverse(c => {\n\n        if (c.geometry) {\n\n          const geomLines = new THREE.LineSegments(new THREE.EdgesGeometry(c.geometry, 50), new THREE.LineBasicMaterial({ color: 0x030303 }));\n          geomLines.position.copy(c.position);\n          geomLines.quaternion.copy(c.quaternion);\n          geomLines.scale.copy(c.scale);\n          lines.add(geomLines);\n\n        }\n\n      });\n      group.add(lines);\n\n      // create projection display mesh\n      projection = new THREE.LineSegments(new THREE.BufferGeometry(), new THREE.LineBasicMaterial({ color: 0x030303 }));\n      scene.add(projection);\n\n      // camera setup\n      camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.01, 100);\n      camera.position.setScalar(3.5);\n      camera.updateProjectionMatrix();\n\n      controls = new OrbitControls(camera, renderer.domElement);\n\n      gui = new GUI({ autoPlace: false });\n      var customContainer = document.getElementById('my-gui-container');\n      customContainer.appendChild(gui.domElement);\n      gui.add(params, 'displayModel', ['none', 'color', 'white']);\n      gui.add(params, 'displayEdges');\n      gui.add(params, 'displayProjection');\n      gui.add(params, 'useBVH');\n      gui.add(params, 'sortEdges');\n      gui.add(params, 'rotate');\n      gui.add(params, 'regenerate');\n      gui.open();\n\n      task = updateEdges();\n\n      render();\n\n    }\n\n    function* updateEdges(runTime = 30) {\n\n      outputContainer.innerText = 'processing: --';\n      scene.remove(projection);\n\n      // transform and merge geometries to project into a single model\n      let timeStart = window.performance.now();\n      const geometries = [];\n      model.updateWorldMatrix(true, true);\n      model.traverse(c => {\n\n        if (c.geometry) {\n\n          const clone = c.geometry.clone();\n          clone.applyMatrix4(c.matrixWorld);\n          for (const key in clone.attributes) {\n\n            if (key !== 'position') {\n\n              clone.deleteAttribute(key);\n\n            }\n\n          }\n\n          geometries.push(clone);\n\n        }\n\n      });\n      const mergedGeometry = mergeBufferGeometries(geometries, false);\n      const mergeTime = window.performance.now() - timeStart;\n\n      yield;\n\n      // generate the bvh for acceleration\n      timeStart = window.performance.now();\n      const bvh = new MeshBVH(mergedGeometry);\n      const bvhTime = window.performance.now() - timeStart;\n\n      yield;\n\n      // generate the candidate edges\n      timeStart = window.performance.now();\n      const edges = generateEdges(mergedGeometry, new THREE.Vector3(0, 1, 0), 50);\n\n      if (params.sortEdges) {\n\n        edges.sort((a, b) => {\n\n          return Math.min(a.start.y, a.end.y) - Math.min(b.start.y, b.end.y);\n\n        });\n\n      }\n\n      const edgeGenerateTime = window.performance.now() - timeStart;\n\n      yield;\n\n      scene.add(projection);\n\n      // trim the candidate edges\n      const finalEdges = [];\n      const tempLine = new THREE.Line3();\n      const tempRay = new THREE.Ray();\n      const tempVec = new THREE.Vector3();\n\n      timeStart = window.performance.now();\n      let trimTime = 0;\n      for (let i = 0, l = edges.length; i < l; i++) {\n\n        const line = edges[i];\n        if (isYProjectedLineDegenerate(line)) {\n\n          continue;\n\n        }\n\n        const lowestLineY = Math.min(line.start.y, line.end.y);\n        const overlaps = [];\n        bvh.shapecast({\n\n          intersectsBounds: box => {\n\n            if (!params.useBVH) {\n\n              return true;\n\n            }\n\n            // check if the box bounds are above the lowest line point\n            box.min.y = Math.min(lowestLineY, box.min.y);\n            tempRay.origin.copy(line.start);\n            line.delta(tempRay.direction).normalize();\n\n            if (box.containsPoint(tempRay.origin)) {\n\n              return true;\n\n            }\n\n            if (tempRay.intersectBox(box, tempVec)) {\n\n              return tempRay.origin.distanceToSquared(tempVec) < line.distanceSq();\n\n            }\n\n            return false;\n\n          },\n\n          intersectsTriangle: tri => {\n\n            // skip the triangle if it is completely below the line\n            const highestTriangleY = Math.max(tri.a.y, tri.b.y, tri.c.y);\n\n            if (highestTriangleY < lowestLineY) {\n\n              return false;\n\n            }\n\n            // if the projected triangle is just a line then don't check it\n            if (isYProjectedTriangleDegenerate(tri)) {\n\n              return false;\n\n            }\n\n            // if this line lies on a triangle edge then don't check it\n            if (isLineTriangleEdge(tri, line)) {\n\n              return false;\n\n            }\n\n            trimToBeneathTriPlane(tri, line, tempLine);\n\n            if (isLineAbovePlane(tri.plane, tempLine)) {\n\n              return false;\n\n            }\n\n            if (tempLine.distance() < 1e-10) {\n\n              return false;\n\n            }\n\n            // compress the edge overlaps so we can easily tell if the whole edge is hidden already\n            // and exit early\n            if (getProjectedOverlaps(tri, line, overlaps)) {\n\n              compressEdgeOverlaps(overlaps);\n\n            }\n\n            // if we're hiding the edge entirely now then skip further checks\n            if (overlaps.length !== 0) {\n\n              const [d0, d1] = overlaps[overlaps.length - 1];\n              return d0 === 0.0 && d1 === 1.0;\n\n            }\n\n            return false;\n\n          },\n\n        });\n\n        overlapsToLines(line, overlaps, finalEdges);\n\n        const delta = window.performance.now() - timeStart;\n        if (delta > runTime) {\n\n          outputContainer.innerText = `processing: ${(100 * i / edges.length).toFixed(2)}%`;\n          trimTime += delta;\n\n          projection.geometry.dispose();\n          projection.geometry = edgesToGeometry(finalEdges, 0);\n          yield;\n          timeStart = window.performance.now();\n\n        }\n\n      }\n\n      projection.geometry.dispose();\n      projection.geometry = edgesToGeometry(finalEdges, 0);\n      trimTime += window.performance.now() - timeStart;\n\n      outputContainer.innerText =\n        `merge geometry  : ${mergeTime.toFixed(2)}ms\\n` +\n        `bvh generation  : ${bvhTime.toFixed(2)}ms\\n` +\n        `edge generation : ${edgeGenerateTime.toFixed(2)}ms\\n` +\n        `edge trimming   : ${trimTime.toFixed(2)}ms\\n\\n` +\n        `total time      : ${(mergeTime + bvhTime + edgeGenerateTime + trimTime).toFixed(2)}ms\\n` +\n        `total edges     : ${finalEdges.length} edges`;\n\n    }\n\n\n    function render() {\n\n      requestAnimationFrame(render);\n\n      controls.update();\n\n      if (task) {\n\n        const res = task.next();\n        if (res.done) {\n\n          task = null;\n\n        }\n\n      }\n\n      model.visible = params.displayModel === 'color';\n      whiteModel.visible = params.displayModel === 'white';\n      lines.visible = params.displayEdges;\n      projection.visible = params.displayProjection;\n\n      renderer.render(scene, camera);\n\n    }\n  }\n}\n</script>\n<style>\n#output {\n  color: #333;\n  position: absolute;\n  left: 10px;\n  bottom: 10px;\n  white-space: pre;\n}\n\n#info {\n  position: absolute;\n  top: 100px;\n  width: 100%;\n  color: #333;\n  font-family: monospace;\n  text-align: center;\n  padding: 5px 0;\n}\n</style>","import { Vector3, Triangle, Line3, MathUtils, Plane, BufferGeometry, BufferAttribute } from 'three';\nimport { ExtendedTriangle } from 'three-mesh-bvh/src/math/ExtendedTriangle.js';\n\nconst _upVector = new Vector3( 0, 1, 0 );\nconst EPSILON = 1e-16;\n\n// Modified version of js EdgesGeometry logic to handle silhouette edges\nexport const generateEdges = ( function () {\n\n\tconst _v0 = new Vector3();\n\tconst _v1 = new Vector3();\n\tconst _normal = new Vector3();\n\tconst _triangle = new Triangle();\n\n\treturn function generateEdges( geometry, projectionDir, thresholdAngle = 1 ) {\n\n\t\tconst edges = [];\n\n\t\tconst precisionPoints = 4;\n\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\tconst thresholdDot = Math.cos( MathUtils.DEG2RAD * thresholdAngle );\n\n\t\tconst indexAttr = geometry.getIndex();\n\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\tconst indexArr = [ 0, 0, 0 ];\n\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\tconst hashes = new Array( 3 );\n\n\t\tconst edgeData = {};\n\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\tif ( indexAttr ) {\n\n\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t} else {\n\n\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t}\n\n\t\t\tconst { a, b, c } = _triangle;\n\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t// create hashes for the edge from the vertices\n\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t// skip degenerate triangles\n\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// iterate over every edge\n\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\tconst otherNormal = edgeData[ reverseHash ].normal;\n\t\t\t\t\tconst meetsThreshold = _normal.dot( otherNormal ) <= thresholdDot;\n\t\t\t\t\tconst projectionThreshold = Math.sign( projectionDir.dot( _normal ) ) !== Math.sign( projectionDir.dot( otherNormal ) );\n\t\t\t\t\tif ( meetsThreshold || projectionThreshold ) {\n\n\t\t\t\t\t\tconst line = new Line3();\n\t\t\t\t\t\tline.start.copy( v0 );\n\t\t\t\t\t\tline.end.copy( v1 );\n\t\t\t\t\t\tedges.push( line );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\tfor ( const key in edgeData ) {\n\n\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t_v1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\tconst line = new Line3();\n\t\t\t\tline.start.copy( _v0 );\n\t\t\t\tline.end.copy( _v1 );\n\t\t\t\tedges.push( line );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn edges;\n\n\t};\n\n} )();\n\n// outputs the overlapping segment of a coplanar line and triangle\nexport const getOverlappingLine = ( function () {\n\n\tconst _dir0 = new Vector3();\n\tconst _dir1 = new Vector3();\n\tconst _tempDir = new Vector3();\n\tconst _orthoPlane = new Plane();\n\tconst _line0 = new Line3();\n\tconst _line1 = new Line3();\n\tconst _tempLine = new Line3();\n\n\treturn function getOverlappingLine( line, triangle, lineTarget = new Line3() ) {\n\n\t\tif ( triangle.needsUpdate ) {\n\n\t\t\ttriangle.needsUpdate();\n\n\t\t}\n\n\t\t// if the triangle is degenerate then return no overlap\n\t\tif ( triangle.getArea() <= EPSILON ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst { points, plane } = triangle;\n\n\t\t_line0.copy( line );\n\t\t_line0.delta( _dir0 );\n\n\t\t// if the line and triangle are not coplanar then return no overlap\n\t\tconst areCoplanar = plane.normal.dot( _dir0 ) === 0.0;\n\t\tif ( ! areCoplanar ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// a plane that's orthogonal to the triangle that the line lies on\n\t\t_dir0.cross( plane.normal ).normalize();\n\t\t_orthoPlane.setFromNormalAndCoplanarPoint( _dir0, _line0.start );\n\n\t\t// find the line of intersection of the triangle along the plane if it exists\n\t\tlet intersectCount = 0;\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst p1 = points[ i ];\n\t\t\tconst p2 = points[ ( i + 1 ) % 3 ];\n\n\t\t\t_tempLine.start.copy( p1 );\n\t\t\t_tempLine.end.copy( p2 );\n\t\t\tif ( _orthoPlane.distanceToPoint( _tempLine.end ) === 0 && _orthoPlane.distanceToPoint( _tempLine.start ) === 0 ) {\n\n\t\t\t\t// if the edge lies on the plane then take the line\n\t\t\t\t_line1.copy( _tempLine );\n\t\t\t\tintersectCount = 2;\n\t\t\t\tbreak;\n\n\t\t\t} else if ( _orthoPlane.intersectLine( _tempLine, intersectCount === 0 ? _line1.start : _line1.end ) ) {\n\n\t\t\t\tlet p;\n\t\t\t\tif ( intersectCount === 0 ) {\n\n\t\t\t\t\tp = _line1.start;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp = _line1.end;\n\n\t\t\t\t}\n\n\t\t\t\tif ( p.distanceTo( p2 ) === 0.0 ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tintersectCount ++;\n\t\t\t\tif ( intersectCount === 2 ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( intersectCount === 2 ) {\n\n\t\t\t// find the intersect line if any\n\t\t\t_line0.delta( _dir0 ).normalize();\n\t\t\t_line1.delta( _dir1 ).normalize();\n\n\t\t\t// swap edges so they're facing in the same direction\n\t\t\tif ( _dir0.dot( _dir1 ) < 0 ) {\n\n\t\t\t\tlet tmp = _line1.start;\n\t\t\t\t_line1.start = _line1.end;\n\t\t\t\t_line1.end = tmp;\n\n\t\t\t}\n\n\t\t\t// check if the edges are overlapping\n\t\t\tconst s1 = _line0.start.dot( _dir0 );\n\t\t\tconst e1 = _line0.end.dot( _dir0 );\n\t\t\tconst s2 = _line1.start.dot( _dir0 );\n\t\t\tconst e2 = _line1.end.dot( _dir0 );\n\t\t\tconst separated1 = e1 < s2;\n\t\t\tconst separated2 = s1 < e2;\n\n\t\t\tif ( s1 !== e2 && s2 !== e1 && separated1 === separated2 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// assign the target output\n\t\t\t_tempDir.subVectors( _line0.start, _line1.start );\n\t\t\tif ( _tempDir.dot( _dir0 ) > 0 ) {\n\n\t\t\t\tlineTarget.start.copy( _line0.start );\n\n\t\t\t} else {\n\n\t\t\t\tlineTarget.start.copy( _line1.start );\n\n\t\t\t}\n\n\t\t\t_tempDir.subVectors( _line0.end, _line1.end );\n\t\t\tif ( _tempDir.dot( _dir0 ) < 0 ) {\n\n\t\t\t\tlineTarget.end.copy( _line0.end );\n\n\t\t\t} else {\n\n\t\t\t\tlineTarget.end.copy( _line1.end );\n\n\t\t\t}\n\n\t\t\treturn lineTarget;\n\n\t\t}\n\n\t\treturn null;\n\n\t};\n\n} )();\n\n// returns the the y value on the plane at the given point x, z\nexport const getPlaneYAtPoint = ( function () {\n\n\tconst testLine = new Line3();\n\treturn function getPlaneYAtPoint( plane, point, target = null ) {\n\n\t\ttestLine.start.copy( point );\n\t\ttestLine.end.copy( point );\n\n\t\ttestLine.start.y += 1e5;\n\t\ttestLine.end.y -= 1e5;\n\n\t\tplane.intersectLine( testLine, target );\n\n\t};\n\n} )();\n\n// returns whether the given line is above the given triangle plane\nexport const isLineAbovePlane = ( function () {\n\n\tconst _v0 = new Vector3();\n\tconst _v1 = new Vector3();\n\n\treturn function isLineAbovePlane( plane, line ) {\n\n\t\t_v0.lerpVectors( line.start, line.end, 0.5 );\n\t\tgetPlaneYAtPoint( plane, _v0, _v1 );\n\n\t\treturn _v1.y < _v0.y;\n\n\t};\n\n} )();\n\nexport const isYProjectedLineDegenerate = ( function () {\n\n\tconst _tempDir = new Vector3();\n\tconst _upVector = new Vector3( 0, 1, 0 );\n\treturn function isYProjectedLineDegenerate( line ) {\n\n\t\tline.delta( _tempDir ).normalize();\n\t\treturn Math.abs( _tempDir.dot( _upVector ) ) >= 1.0 - EPSILON;\n\n\t};\n\n} )();\n\n// checks whether the y-projected triangle will be degerate\nexport function isYProjectedTriangleDegenerate( tri ) {\n\n\tif ( tri.needsUpdate ) {\n\n\t\ttri.update();\n\n\t}\n\n\treturn Math.abs( tri.plane.normal.dot( _upVector ) ) <= EPSILON;\n\n}\n\n// Is the provided line exactly an edge on the triangle\nexport function isLineTriangleEdge( tri, line ) {\n\n\t// if this is the same line as on the triangle\n\tconst triPoints = tri.points;\n\tlet matches = 0;\n\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\tconst { start, end } = line;\n\t\tconst tp = triPoints[ i ];\n\t\tif ( start.distanceToSquared( tp ) <= EPSILON ) {\n\n\t\t\tmatches ++;\n\n\t\t}\n\n\t\tif ( end.distanceToSquared( tp ) <= EPSILON ) {\n\n\t\t\tmatches ++;\n\n\t\t}\n\n\t}\n\n\treturn matches >= 2;\n\n}\n\n// Extracts the normalized [0, 1] distances along the given line that overlaps with the provided triangle when\n// projected along the y axis\nexport const getProjectedOverlaps = ( function () {\n\n\tconst _target = new Line3();\n\tconst _tempDir = new Vector3();\n\tconst _tempVec0 = new Vector3();\n\tconst _tempVec1 = new Vector3();\n\tconst _line = new Line3();\n\tconst _tri = new ExtendedTriangle();\n\n\treturn function getProjectedOverlaps( tri, line, overlapsTarget ) {\n\n\t\t_line.copy( line );\n\t\t_tri.copy( tri );\n\n\t\t// flatten them to a common plane\n\t\t_line.start.y = 0;\n\t\t_line.end.y = 0;\n\t\t_tri.a.y = 0;\n\t\t_tri.b.y = 0;\n\t\t_tri.c.y = 0;\n\t\t_tri.needsUpdate = true;\n\t\t_tri.update();\n\n\t\t// if the line is meaningfully long and the we have an overlapping line then extract the\n\t\t// distances along the original line to return\n\t\tif ( getOverlappingLine( _line, _tri, _target ) ) {\n\n\t\t\t_line.delta( _tempDir );\n\t\t\t_tempVec0.subVectors( _target.start, _line.start );\n\t\t\t_tempVec1.subVectors( _target.end, _line.start );\n\n\t\t\tlet d0 = _tempVec0.length() / _tempDir.length();\n\t\t\tlet d1 = _tempVec1.length() / _tempDir.length();\n\n\t\t\td0 = Math.min( Math.max( d0, 0 ), 1 );\n\t\t\td1 = Math.min( Math.max( d1, 0 ), 1 );\n\n\t\t\tif ( ! ( Math.abs( d0 - d1 ) <= EPSILON ) ) {\n\n\t\t\t\toverlapsTarget.push( new Float32Array( [ d0, d1 ] ) );\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t};\n\n} )();\n\n// Trim the provided line to just the section below the given triangle plane\nexport const trimToBeneathTriPlane = ( function () {\n\n\tconst _lineDirection = new Vector3();\n\tconst _planeHit = new Vector3();\n\tconst _centerPoint = new Vector3();\n\tconst _planePoint = new Vector3();\n\n\treturn function trimToBeneathTriPlane( tri, line, lineTarget ) {\n\n\t\tif ( tri.needsUpdate ) {\n\n\t\t\ttri.update();\n\n\t\t}\n\n\t\tlineTarget.copy( line );\n\n\t\t// handle vertical triangles\n\t\tconst { plane } = tri;\n\t\tif ( isYProjectedTriangleDegenerate( tri ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// if the line and plane are coplanar then return that we can't trim\n\t\tline.delta( _lineDirection );\n\n\t\tconst areCoplanar = plane.normal.dot( _lineDirection ) === 0.0;\n\t\tif ( areCoplanar ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// if the line does intersect the plane then trim\n\t\tconst doesLineIntersect = plane.intersectLine( line, _planeHit );\n\t\tif ( doesLineIntersect ) {\n\n\t\t\tconst { start, end } = lineTarget;\n\n\t\t\t// test the line side with the largest segment extending beyond the plane\n\t\t\tlet testPoint;\n\t\t\tlet flipped = false;\n\t\t\tif ( start.distanceTo( _planeHit ) > end.distanceTo( _planeHit ) ) {\n\n\t\t\t\ttestPoint = start;\n\n\t\t\t} else {\n\n\t\t\t\ttestPoint = end;\n\t\t\t\tflipped = true;\n\n\t\t\t}\n\n\t\t\t// get the center point of the line segment and the plane hit\n\t\t\t_centerPoint.lerpVectors( testPoint, _planeHit, 0.5 );\n\t\t\tgetPlaneYAtPoint( tri.plane, _centerPoint, _planePoint );\n\n\t\t\t// adjust the appropriate line point align with the plane hit point\n\t\t\tif ( _planePoint.y < _centerPoint.y ) {\n\n\t\t\t\tif ( flipped ) end.copy( _planeHit );\n\t\t\t\telse start.copy( _planeHit );\n\n\t\t\t} else {\n\n\t\t\t\tif ( flipped ) start.copy( _planeHit );\n\t\t\t\telse end.copy( _planeHit );\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t};\n\n} )();\n\n// Converts the given array of overlaps into line segments\nexport const overlapsToLines = ( function () {\n\n\tconst newLine = new Line3();\n\n\treturn function overlapsToLines( line, overlaps, target = [] ) {\n\n\t\tcompressEdgeOverlaps( overlaps );\n\n\t\tconst invOverlaps = [[ 0, 1 ]];\n\t\tfor ( let i = 0, l = overlaps.length; i < l; i ++ ) {\n\n\t\t\tconst invOverlap = invOverlaps[ i ];\n\t\t\tconst overlap = overlaps[ i ];\n\t\t\tinvOverlap[ 1 ] = overlap[ 0 ];\n\t\t\tinvOverlaps.push( new Float32Array( [ overlap[ 1 ], 1 ] ) );\n\n\t\t}\n\n\t\tfor ( let i = 0, l = invOverlaps.length; i < l; i ++ ) {\n\n\t\t\tconst { start, end } = line;\n\t\t\tnewLine.start.lerpVectors( start, end, invOverlaps[ i ][ 0 ] );\n\t\t\tnewLine.end.lerpVectors( start, end, invOverlaps[ i ][ 1 ] );\n\n\t\t\ttarget.push( new Float32Array( [\n\t\t\t\tnewLine.start.x,\n\t\t\t\tnewLine.start.y,\n\t\t\t\tnewLine.start.z,\n\n\t\t\t\tnewLine.end.x,\n\t\t\t\tnewLine.end.y,\n\t\t\t\tnewLine.end.z,\n\t\t\t] ) );\n\n\t\t}\n\n\t\treturn target;\n\n\t};\n\n} )();\n\n// converts the given list of edges to a line segments geometry\nexport function edgesToGeometry( edges, y = null ) {\n\n\tconst edgeArray = new Float32Array( edges.length * 6 );\n\tlet c = 0;\n\tfor ( let i = 0, l = edges.length; i < l; i ++ ) {\n\n\t\tconst line = edges[ i ];\n\t\tedgeArray[ c ++ ] = line[ 0 ];\n\t\tedgeArray[ c ++ ] = y === null ? line[ 1 ] : y;\n\t\tedgeArray[ c ++ ] = line[ 2 ];\n\t\tedgeArray[ c ++ ] = line[ 3 ];\n\t\tedgeArray[ c ++ ] = y === null ? line[ 4 ] : y;\n\t\tedgeArray[ c ++ ] = line[ 5 ];\n\n\t}\n\n\tconst edgeGeom = new BufferGeometry();\n\tconst edgeBuffer = new BufferAttribute( edgeArray, 3, true );\n\tedgeGeom.setAttribute( 'position', edgeBuffer );\n\treturn edgeGeom;\n\n}\n\n// compresses the given edge overlaps into a minimal set of representative objects\nexport function compressEdgeOverlaps( overlaps ) {\n\n\toverlaps.sort( ( a, b ) => {\n\n\t\treturn a[ 0 ] - b[ 0 ];\n\n\t} );\n\n\tfor ( let i = 1; i < overlaps.length; i ++ ) {\n\n\t\tconst overlap = overlaps[ i ];\n\t\tconst prevOverlap = overlaps[ i - 1 ];\n\n\t\tif ( overlap[ 0 ] <= prevOverlap[ 1 ] ) {\n\n\t\t\tprevOverlap[ 1 ] = Math.max( prevOverlap[ 1 ], overlap[ 1 ] );\n\t\t\toverlaps.splice( i, 1 );\n\t\t\ti --;\n\n\t\t}\n\n\t}\n\n}\n","import { render } from \"./EdgeProjectionPage.vue?vue&type=template&id=5d420833\"\nimport script from \"./EdgeProjectionPage.vue?vue&type=script&lang=js\"\nexport * from \"./EdgeProjectionPage.vue?vue&type=script&lang=js\"\n\nimport \"./EdgeProjectionPage.vue?vue&type=style&index=0&id=5d420833&lang=css\"\n\nimport exportComponent from \"G:\\\\Threejs\\\\VuejsThreejsForDemo-main\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <div id=\"info\">\n      Basic character movement example. Click and drag to rotate the camera direction and use WASD to move.\n    </div>\n    <nav-menu />\n    <div id=\"my-gui-container\"></div>\n  </div>\n</template>\n<script>\nimport NavMenu from '@/components/NavMenu.vue'\nimport * as THREE from 'three';\nimport { RoundedBoxGeometry } from 'three/examples/jsm/geometries/RoundedBoxGeometry.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport * as BufferGeometryUtils from 'three/examples/jsm/utils/BufferGeometryUtils.js';\n//import Stats from 'stats.js';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\nimport { MeshBVH, MeshBVHVisualizer, StaticGeometryGenerator } from 'three-mesh-bvh';\n\nlet gui;\nexport default {\n  name: 'CharacterMovementPage',\n  components: {\n    NavMenu\n  },\n  unmounted() {\n    if (gui) gui.destroy();\n    gui = null;\n  },\n  mounted() {\n    const params = {\n\n      firstPerson: false,\n\n      displayCollider: false,\n      displayBVH: false,\n      visualizeDepth: 10,\n      gravity: - 30,\n      playerSpeed: 10,\n      physicsSteps: 5,\n\n      reset: reset,\n\n    };\n\n    let renderer, camera, scene, clock, gui;\n    let environment, collider, visualizer, player, controls;\n    let playerIsOnGround = false;\n    let fwdPressed = false, bkdPressed = false, lftPressed = false, rgtPressed = false;\n    let playerVelocity = new THREE.Vector3();\n    let upVector = new THREE.Vector3(0, 1, 0);\n    let tempVector = new THREE.Vector3();\n    let tempVector2 = new THREE.Vector3();\n    let tempBox = new THREE.Box3();\n    let tempMat = new THREE.Matrix4();\n    let tempSegment = new THREE.Line3();\n    let container = this.$el;\n\n    init();\n    render();\n\n    function init() {\n\n      const bgColor = 0x263238 / 2;\n\n      // renderer setup\n      renderer = new THREE.WebGLRenderer({ antialias: true });\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      renderer.setClearColor(bgColor, 1);\n      renderer.shadowMap.enabled = true;\n      renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n      renderer.outputEncoding = THREE.sRGBEncoding;\n      container.appendChild(renderer.domElement);\n\n      // scene setup\n      scene = new THREE.Scene();\n      scene.fog = new THREE.Fog(bgColor, 20, 70);\n\n      // lights\n      const light = new THREE.DirectionalLight(0xffffff, 1);\n      light.position.set(1, 1.5, 1).multiplyScalar(50);\n      light.shadow.mapSize.setScalar(2048);\n      light.shadow.bias = - 1e-4;\n      light.shadow.normalBias = 0.05;\n      light.castShadow = true;\n\n      const shadowCam = light.shadow.camera;\n      shadowCam.bottom = shadowCam.left = - 30;\n      shadowCam.top = 30;\n      shadowCam.right = 45;\n\n      scene.add(light);\n      scene.add(new THREE.HemisphereLight(0xffffff, 0x223344, 0.4));\n\n      // camera setup\n      camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 50);\n      camera.position.set(10, 10, - 10);\n      camera.far = 100;\n      camera.updateProjectionMatrix();\n      window.camera = camera;\n\n      clock = new THREE.Clock();\n\n      controls = new OrbitControls(camera, renderer.domElement);\n\n      // stats setup\n      //stats = new Stats();\n      //document.body.appendChild(stats.dom);\n\n      loadColliderEnvironment();\n\n      // character\n      player = new THREE.Mesh(\n        new RoundedBoxGeometry(1.0, 2.0, 1.0, 10, 0.5),\n        new THREE.MeshStandardMaterial()\n      );\n      player.geometry.translate(0, - 0.5, 0);\n      player.capsuleInfo = {\n        radius: 0.5,\n        segment: new THREE.Line3(new THREE.Vector3(), new THREE.Vector3(0, - 1.0, 0.0))\n      };\n      player.castShadow = true;\n      player.receiveShadow = true;\n      player.material.shadowSide = 2;\n      scene.add(player);\n      reset();\n\n      // dat.gui\n      gui = new GUI({ autoPlace: false });\n      var customContainer = document.getElementById('my-gui-container');\n      customContainer.appendChild(gui.domElement);\n      gui.add(params, 'firstPerson').onChange(v => {\n\n        if (!v) {\n\n          camera\n            .position\n            .sub(controls.target)\n            .normalize()\n            .multiplyScalar(10)\n            .add(controls.target);\n\n        }\n\n      });\n\n      const visFolder = gui.addFolder('Visualization');\n      visFolder.add(params, 'displayCollider');\n      visFolder.add(params, 'displayBVH');\n      visFolder.add(params, 'visualizeDepth', 1, 20, 1).onChange(v => {\n\n        visualizer.depth = v;\n        visualizer.update();\n\n      });\n      visFolder.open();\n\n      const physicsFolder = gui.addFolder('Player');\n      physicsFolder.add(params, 'physicsSteps', 0, 30, 1);\n      physicsFolder.add(params, 'gravity', - 100, 100, 0.01).onChange(v => {\n\n        params.gravity = parseFloat(v);\n\n      });\n      physicsFolder.add(params, 'playerSpeed', 1, 20);\n      physicsFolder.open();\n\n      gui.add(params, 'reset');\n      gui.open();\n\n      window.addEventListener('resize', function () {\n\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n\n        renderer.setSize(window.innerWidth, window.innerHeight);\n\n      }, false);\n\n      window.addEventListener('keydown', function (e) {\n\n        switch (e.code) {\n\n          case 'KeyW': fwdPressed = true; break;\n          case 'KeyS': bkdPressed = true; break;\n          case 'KeyD': rgtPressed = true; break;\n          case 'KeyA': lftPressed = true; break;\n          case 'Space':\n            if (playerIsOnGround) {\n\n              playerVelocity.y = 10.0;\n              playerIsOnGround = false;\n\n            }\n\n            break;\n\n        }\n\n      });\n\n      window.addEventListener('keyup', function (e) {\n\n        switch (e.code) {\n\n          case 'KeyW': fwdPressed = false; break;\n          case 'KeyS': bkdPressed = false; break;\n          case 'KeyD': rgtPressed = false; break;\n          case 'KeyA': lftPressed = false; break;\n\n        }\n\n      });\n\n    }\n\n    function loadColliderEnvironment() {\n\n      new GLTFLoader().load('models/scene.gltf', res => {\n\n        const gltfScene = res.scene;\n        gltfScene.scale.setScalar(.01);\n\n        const box = new THREE.Box3();\n        box.setFromObject(gltfScene);\n        box.getCenter(gltfScene.position).negate();\n        gltfScene.updateMatrixWorld(true);\n\n        // visual geometry setup\n        const toMerge = {};\n        gltfScene.traverse(c => {\n\n          if (\n            /Boss/.test(c.name) ||\n            /Enemie/.test(c.name) ||\n            /Shield/.test(c.name) ||\n            /Sword/.test(c.name) ||\n            /Character/.test(c.name) ||\n            /Gate/.test(c.name) ||\n\n            // spears\n            /Cube/.test(c.name) ||\n\n            // pink brick\n            c.material && c.material.color.r === 1.0\n          ) {\n\n            return;\n\n          }\n\n          if (c.isMesh) {\n\n            const hex = c.material.color.getHex();\n            toMerge[hex] = toMerge[hex] || [];\n            toMerge[hex].push(c);\n\n          }\n\n        });\n\n        environment = new THREE.Group();\n        for (const hex in toMerge) {\n\n          const arr = toMerge[hex];\n          const visualGeometries = [];\n          arr.forEach(mesh => {\n\n            if (mesh.material.emissive.r !== 0) {\n\n              environment.attach(mesh);\n\n            } else {\n\n              const geom = mesh.geometry.clone();\n              geom.applyMatrix4(mesh.matrixWorld);\n              visualGeometries.push(geom);\n\n            }\n\n          });\n\n          if (visualGeometries.length) {\n\n            const newGeom = BufferGeometryUtils.mergeBufferGeometries(visualGeometries);\n            const newMesh = new THREE.Mesh(newGeom, new THREE.MeshStandardMaterial({ color: parseInt(hex), shadowSide: 2 }));\n            newMesh.castShadow = true;\n            newMesh.receiveShadow = true;\n            newMesh.material.shadowSide = 2;\n\n            environment.add(newMesh);\n\n          }\n\n        }\n\n        const staticGenerator = new StaticGeometryGenerator(environment);\n        staticGenerator.attributes = ['position'];\n\n        const mergedGeometry = staticGenerator.generate();\n        mergedGeometry.boundsTree = new MeshBVH(mergedGeometry, { lazyGeneration: false });\n\n        collider = new THREE.Mesh(mergedGeometry);\n        collider.material.wireframe = true;\n        collider.material.opacity = 0.5;\n        collider.material.transparent = true;\n\n        visualizer = new MeshBVHVisualizer(collider, params.visualizeDepth);\n        scene.add(visualizer);\n        scene.add(collider);\n        scene.add(environment);\n\n      });\n\n    }\n\n    function reset() {\n\n      playerVelocity.set(0, 0, 0);\n      player.position.set(15.75, - 3, 30);\n      camera.position.sub(controls.target);\n      controls.target.copy(player.position);\n      camera.position.add(player.position);\n      controls.update();\n\n    }\n\n    function updatePlayer(delta) {\n\n      if (playerIsOnGround) {\n\n        playerVelocity.y = delta * params.gravity;\n\n      } else {\n\n        playerVelocity.y += delta * params.gravity;\n\n      }\n\n      player.position.addScaledVector(playerVelocity, delta);\n\n      // move the player\n      const angle = controls.getAzimuthalAngle();\n      if (fwdPressed) {\n\n        tempVector.set(0, 0, - 1).applyAxisAngle(upVector, angle);\n        player.position.addScaledVector(tempVector, params.playerSpeed * delta);\n\n      }\n\n      if (bkdPressed) {\n\n        tempVector.set(0, 0, 1).applyAxisAngle(upVector, angle);\n        player.position.addScaledVector(tempVector, params.playerSpeed * delta);\n\n      }\n\n      if (lftPressed) {\n\n        tempVector.set(- 1, 0, 0).applyAxisAngle(upVector, angle);\n        player.position.addScaledVector(tempVector, params.playerSpeed * delta);\n\n      }\n\n      if (rgtPressed) {\n\n        tempVector.set(1, 0, 0).applyAxisAngle(upVector, angle);\n        player.position.addScaledVector(tempVector, params.playerSpeed * delta);\n\n      }\n\n      player.updateMatrixWorld();\n\n      // adjust player position based on collisions\n      const capsuleInfo = player.capsuleInfo;\n      tempBox.makeEmpty();\n      tempMat.copy(collider.matrixWorld).invert();\n      tempSegment.copy(capsuleInfo.segment);\n\n      // get the position of the capsule in the local space of the collider\n      tempSegment.start.applyMatrix4(player.matrixWorld).applyMatrix4(tempMat);\n      tempSegment.end.applyMatrix4(player.matrixWorld).applyMatrix4(tempMat);\n\n      // get the axis aligned bounding box of the capsule\n      tempBox.expandByPoint(tempSegment.start);\n      tempBox.expandByPoint(tempSegment.end);\n\n      tempBox.min.addScalar(- capsuleInfo.radius);\n      tempBox.max.addScalar(capsuleInfo.radius);\n\n      collider.geometry.boundsTree.shapecast({\n\n        intersectsBounds: box => box.intersectsBox(tempBox),\n\n        intersectsTriangle: tri => {\n\n          // check if the triangle is intersecting the capsule and adjust the\n          // capsule position if it is.\n          const triPoint = tempVector;\n          const capsulePoint = tempVector2;\n\n          const distance = tri.closestPointToSegment(tempSegment, triPoint, capsulePoint);\n          if (distance < capsuleInfo.radius) {\n\n            const depth = capsuleInfo.radius - distance;\n            const direction = capsulePoint.sub(triPoint).normalize();\n\n            tempSegment.start.addScaledVector(direction, depth);\n            tempSegment.end.addScaledVector(direction, depth);\n\n          }\n\n        }\n\n      });\n\n      // get the adjusted position of the capsule collider in world space after checking\n      // triangle collisions and moving it. capsuleInfo.segment.start is assumed to be\n      // the origin of the player model.\n      const newPosition = tempVector;\n      newPosition.copy(tempSegment.start).applyMatrix4(collider.matrixWorld);\n\n      // check how much the collider was moved\n      const deltaVector = tempVector2;\n      deltaVector.subVectors(newPosition, player.position);\n\n      // if the player was primarily adjusted vertically we assume it's on something we should consider ground\n      playerIsOnGround = deltaVector.y > Math.abs(delta * playerVelocity.y * 0.25);\n\n      const offset = Math.max(0.0, deltaVector.length() - 1e-5);\n      deltaVector.normalize().multiplyScalar(offset);\n\n      // adjust the player model\n      player.position.add(deltaVector);\n\n      if (!playerIsOnGround) {\n\n        deltaVector.normalize();\n        playerVelocity.addScaledVector(deltaVector, - deltaVector.dot(playerVelocity));\n\n      } else {\n\n        playerVelocity.set(0, 0, 0);\n\n      }\n\n      // adjust the camera\n      camera.position.sub(controls.target);\n      controls.target.copy(player.position);\n      camera.position.add(player.position);\n\n      // if the player has fallen too far below the level reset their position to the start\n      if (player.position.y < - 25) {\n\n        reset();\n\n      }\n\n    }\n\n    function render() {\n\n      //stats.update();\n      requestAnimationFrame(render);\n\n      const delta = Math.min(clock.getDelta(), 0.1);\n      if (params.firstPerson) {\n\n        controls.maxPolarAngle = Math.PI;\n        controls.minDistance = 1e-4;\n        controls.maxDistance = 1e-4;\n\n      } else {\n\n        controls.maxPolarAngle = Math.PI / 2;\n        controls.minDistance = 1;\n        controls.maxDistance = 20;\n\n      }\n\n      if (collider) {\n\n        collider.visible = params.displayCollider;\n        visualizer.visible = params.displayBVH;\n\n        const physicsSteps = params.physicsSteps;\n\n        for (let i = 0; i < physicsSteps; i++) {\n\n          updatePlayer(delta / physicsSteps);\n\n        }\n\n      }\n\n      // TODO: limit the camera movement based on the collider\n      // raycast in direction of camera and move it if it's further than the closest point\n\n      controls.update();\n\n      renderer.render(scene, camera);\n\n    }\n  }\n}\n</script>\n<style>\n#info {\n  position: absolute;\n  top: 100px;\n  width: 100%;\n  color: white;\n  font-family: monospace;\n  text-align: center;\n  padding: 5px 0;\n}\n</style>","import { render } from \"./CharacterMovementPage.vue?vue&type=template&id=2b370ea1\"\nimport script from \"./CharacterMovementPage.vue?vue&type=script&lang=js\"\nexport * from \"./CharacterMovementPage.vue?vue&type=script&lang=js\"\n\nimport \"./CharacterMovementPage.vue?vue&type=style&index=0&id=2b370ea1&lang=css\"\n\nimport exportComponent from \"G:\\\\Threejs\\\\VuejsThreejsForDemo-main\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router';\nimport FollowCamPage from './components/FollowCamPage.vue';\nimport SelectBoxPage from './components/SelectBoxPage.vue';\nimport MulticoloredSpherePage from './components/MulticoloredSpherePage.vue';\nimport ParticlesSystemPage from './components/ParticlesSystemPage.vue';\nimport TempPage from './components/TempPage.vue';\nimport CanonJSPage from './components/CanonJSPage.vue';\nimport ConvexObjectPage from './components/ConvexObjectPage.vue';\nimport WaterPage from './components/WaterPage.vue';\nimport EdgeDetectPage from './components/EdgeDetectPage.vue';\nimport ShadersOceanPage from './components/ShadersOceanPage.vue';\nimport GamePage from './components/GamePage.vue';\nimport Draw3DSurfacePage from './components/Draw3DSurfacePage.vue';\nimport DrawRainBowLightPage from './components/DrawRainBowLightPage.vue';\nimport DrawDimensionPage from './components/DrawDimensionPage.vue';\nimport DrawSelectAreaPage from './components/DrawSelectAreaPage.vue';\nimport EdgeProjectionPage from './components/EdgeProjectionPage.vue';\nimport CharacterMovementPage from './components/CharacterMovementPage.vue';\n\nconst routes = [\n  {\n    path: '/water',\n    name: 'Water',\n    component: WaterPage\n  },\n  {\n    path: '/canonjs',\n    name: 'Canon JS',\n    component: CanonJSPage\n  },\n  {\n    path: '/convexobject',\n    name: 'Convex Object',\n    component: ConvexObjectPage\n  },\n  {\n    path: '/',\n    name: 'Follow Cam',\n    component: FollowCamPage\n  },\n  {\n    path: '/temp',\n    name: 'Temp Page',\n    component: TempPage\n  },\n  {\n    path: '/selectbox',\n    name: 'Select Box',\n    component: SelectBoxPage\n  },\n  {\n    path: '/multicoloredsphere',\n    name: 'Multicolored Sphere',\n    component: MulticoloredSpherePage\n  },\n  {\n    path: '/particlessystem',\n    name: 'Particles System Page',\n    component: ParticlesSystemPage\n  },\n  {\n    path: '/edgedetect',\n    name: 'Edge Detect ',\n    component: EdgeDetectPage\n  },\n  {\n    path: '/shadersocean',\n    name: 'Shaders Ocean ',\n    component: ShadersOceanPage\n  },\n  {\n    path: '/game',\n    name: 'Shoot Game ',\n    component: GamePage\n  },\n  {\n    path: '/draw3dsurface',\n    name: 'Draw 3D Surface ',\n    component: Draw3DSurfacePage\n  },\n  {\n    path: '/rainbow',\n    name: 'Rainbow Light ',\n    component: DrawRainBowLightPage\n  },\n  {\n    path: '/drawdimen',\n    name: 'Draw Dimension ',\n    component: DrawDimensionPage\n  },\n  {\n    path: '/selectarea',\n    name: 'Select Area ',\n    component: DrawSelectAreaPage\n  },\n  {\n    path: '/edgeprojection',\n    name: 'Edge Projection ',\n    component: EdgeProjectionPage\n  },\n  {\n    path: '/charactermovement',\n    name: 'Character Movement ',\n    component: CharacterMovementPage\n  },\n  \n];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\nexport default router;\n","import { render } from \"./App.vue?vue&type=template&id=fbf93568\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=fbf93568&lang=css\"\n\nimport exportComponent from \"G:\\\\Threejs\\\\VuejsThreejsForDemo-main\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\n\n// Import CSS\n//import './assets/css/style.css';\n\n// Create Vue app instance\nconst app = createApp(App);\n\n// Register Vue router instance\napp.use(router);\n\n// Mount Vue app instance to the DOM\napp.mount('#app');","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkthreejsdemo\"] = self[\"webpackChunkthreejsdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(1364); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","xmlns","style","_hoisted_3","_createElementVNode","_hoisted_1","_createVNode","_component_router_view","_createElementBlock","_hoisted_2","_hoisted_7","_hoisted_8","class","_component_nav_menu","href","src","width","height","alt","type","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_component_router_link","to","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","script","__exports__","name","components","NavMenu","mounted","scene","THREE","light1","position","set","angle","Math","PI","penumbra","castShadow","shadow","mapSize","camera","near","far","add","light2","window","innerWidth","innerHeight","followCamPivot","rotation","order","followCam","z","renderer","setSize","outputEncoding","shadowMap","enabled","this","$el","appendChild","domElement","world","CANNON","gravity","groundMaterial","slipperyMaterial","slippery_ground_cm","friction","restitution","contactEquationStiffness","contactEquationRelaxation","addContactMaterial","characterCollider","y","colliderShape","colliderBody","mass","material","mixer","addShape","x","linearDamping","angularFactor","addBody","modelMesh","modelReady","animationActions","activeAction","lastAction","gltfLoader","GLTFLoader","load","gltf","traverse","child","isMesh","m","receiveShadow","frustumCulled","geometry","computeVertexNormals","mat","transparent","side","animationAction","clipAction","animations","push","target","console","log","tracks","shift","setAction","xhr","lengthComputable","error","toAction","loop","fadeOut","reset","fadeIn","play","clampWhenFinished","moveForward","moveBackward","moveLeft","moveRight","canJump","contactNormal","upAxis","addEventListener","e","contact","bi","ni","negate","copy","dot","planeGeometry","texture","plane","map","rotateX","planeShape","planeBody","quaternion","setFromAxisAngle","boxes","boxMeshes","i","halfExtents","random","boxShape","boxGeometry","boxBody","boxMesh","menuPanel","document","getElementById","startButton","controls","lock","PointerLockControls","onWindowResize","aspect","updateProjectionMatrix","render","display","onDocumentKey","onDocumentMouseMove","onDocumentMouseWheel","removeEventListener","setTimeout","movementX","movementY","newVal","deltaY","keyMap","code","isLocked","velocity","inputVelocity","euler","quat","camTo","targetQuaternion","distance","clock","delta","animate","requestAnimationFrame","update","p","distanceTo","rotationMatrix","lookAt","up","setFromRotationMatrix","equals","rotateTowards","setFromEuler","applyQuaternion","lerp","applyImpulse","min","getDelta","step","forEach","b","w","getWorldPosition","lerpVectors","RENDERER_CLEAR_COLOR","TOLERANCE","currentpage","init","light","object","color","scale","antialias","setPixelRatio","devicePixelRatio","setClearColor","MYCONST","selectionBox","SelectionBox","helper","SelectionHelper","event","item","collection","emissive","startPoint","clientX","clientY","isDown","length","endPoint","allSelected","select","OrbitControls","axesHelper","size","divisions","gridHelper","sphereMesh","createsphere","radius","widthSegments","heightSegments","sphereGeometry","rainbowColors","colors","Array","attributes","count","fill","setHex","floor","colorAttribute","flatMap","toArray","setAttribute","vertexColors","particleGeometry","positions","positionAttribute","particleMaterial","particleSystem","mouseX","mouseY","r","g","bSplat","mouse","raycaster","setFromCamera","particleSystemWorldPosition","particleSystemWorldQuaternion","getWorldQuaternion","particleSystemWorldScale","getWorldScale","particleSystemMatrixWorld","compose","particleSystemInverseMatrixWorld","invert","particleSystemLocalRaycaster","ray","applyMatrix4","intersection","intersectObject","getAttribute","array1","Float32Array","array","needsUpdate","array0","getX","getZ","gui","unmounted","destroy","GUI","autoPlace","customContainer","enableDamping","normalMaterial","phongMaterial","cubeGeometry","cubeMesh","cubeShape","cubeBody","sphereShape","sphereBody","icosahedronGeometry","icosahedronMesh","icosahedronPoints","icosahedronFaces","icosahedronShape","vertices","faces","icosahedronBody","torusKnotGeometry","torusKnotMesh","torusKnotShape","CreateTrimesh","torusKnotBody","indices","Object","keys","Number","planeMesh","physicsFolder","addFolder","close","value","max","CannonUtils","static","index","clone","toNonIndexed","normal","fromBufferAttribute","vertexNormals","undefined","face","a","c","normals","verticesMap","points","changes","il","v","key","round","faceIdsToRemove","n","idx","splice","cannonFaces","f","body","centreOfMass","shapeOffsets","offset","vadd","shapes","vsub","worldCenterOfMass","vectorToWorldFrame","progressBar","axisY","currentDir","onKeyDown","applyAxisAngle","_q","tempRot","weapon","multiply","TWEEN","_x","_y","_z","_w","easing","start","tempPos","tempDir","addScaledVector","metalness","roughness","opacity","pmremGenerator","envTexture","envMap","fromEquirectangular","meshes","bodies","meshId","groundMirror","Reflector","clipBias","textureWidth","textureHeight","convexObjectBreaker","ConvexObjectBreaker","geo","cube","abs","prepareBreakableObject","userData","splitCount","bullets","bulletBodies","bulletId","bulletMaterial","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","onClick","bullet","bulletShape","bulletBody","splitObject","multiplyScalar","angularVelocity","remove","removeBody","contactId","poi","pointToLocalFrame","bj","rj","shards","subdivideByImpact","d","nextId","shape","gemoetryToShape","convexHull","ConvexGeometry","geometryS","materialS","pointS","visible","geometryT","materialT","torus","onMouseMove","preventDefault","arrayMeshs","wall_intersects","intersectObjects","transformDirection","matrixWorld","point","direction","gunPos","subVectors","normalize","rotateY","rayDirection","pointB","loader","isLight","l","bias","percentComplete","loaded","total","Infinity","Floater","constructor","earth","gerstnerWater","isPlayerFloater","_defineProperty","startsWith","floatPoints","floatPoint","aabb","setFromObject","collisionSphere","getBoundingSphere","cogHelper","velocityHelper","fp","waveNormalHelper","waveNormalHelpers","gravitySlideHelper","gravitySlideHelpers","t","water","uniforms","accumulatedPosition","accumulatedNormal","fpWorldPos","sub","waveInfo","getWaveInfo","setDirection","gravitySlideDirection","divideScalar","forces","sin","heading","power","cos","lastPosition","dist","ms","setLength","center","children","GerstnerWater","waterGeometry","wrapS","wrapT","waves","steepness","wavelength","Water","waterNormals","sunDirection","sunColor","waterColor","distortionScale","fog","wireframe","onBeforeCompile","shader","offsetX","offsetZ","waveA","waveB","waveC","vertexShader","fragmentShader","waterUniforms","folderWater","waveAFolder","onChange","waveBFolder","waveCFolder","time","pos","tangent","binormal","k","sqrt","cross","cameraLerp","controlsChanging","maxPolarAngle","maxDistance","sun","sky","Sky","setScalar","skyUniforms","parameters","elevation","azimuth","renderTarget","updateSun","phi","theta","setFromSphericalCoords","dispose","fromScene","environment","divisor","divisorMultiplier","locationDataText","locationDataElem","controlledBoatId","lat","lon","boatDataText","boatDataElem","startX","startZ","floaters","loadTestBoxes","box","group","floater","folderSky","toFixed","innerText","composer","effectSobel","params","enable","doc","ambientLight","pointLight","EffectComposer","renderPass","RenderPass","addPass","effectGrayScale","ShaderPass","LuminosityShader","SobelOperatorShader","minDistance","mesh","container","outputColorSpace","toneMapping","performance","now","background","fillLight1","directionalLight","right","left","top","bottom","GRAVITY","NUM_SPHERES","SPHERE_RADIUS","STEPS_PER_FRAME","sphereMaterial","spheres","sphereIdx","sphere","collider","worldOctree","Octree","playerCollider","Capsule","playerVelocity","playerDirection","playerOnFloor","mouseTime","keyStates","vector1","vector2","vector3","controls1","throwBall","getWorldDirection","end","impulse","exp","playerCollisions","result","capsuleIntersect","translate","depth","updatePlayer","deltaTime","damping","deltaPosition","playerSphereCollision","addVectors","sphere_center","r2","d2","distanceToSquared","v1","v2","spheresCollisions","s1","j","s2","updateSpheres","sphereIntersect","getForwardVector","getSideVector","speedDelta","setPath","teleportPlayerIfOob","fromGraphNode","anisotropy","OctreeHelper","debug","ambient","translateY","elementE","elementC","elementCheck","checkbox","getText","clearAll","visibleMesh","checkboxOxy","elementCheckOxy","checked","arraylines","colorValue","inputValue","lines","split","line","re","replace","ar","concat","slice","filter","hex","parseInt","firstPoint","geometry1","material1","alert","setFromPoints","autoFit","FIT_OFFSET","checkLastValueInArray","minX","minY","minZ","maxX","maxY","maxZ","isFirst","isExistBox","localMesh","posAttr","computeBoundingBox","boundingBox","isBox3","bBox","bBox_min","bBox_max","getCenter","maxSize","fitHeightDistance","atan","fov","fitWidthDistance","autoRotate","mirrorBack1","spotLightColors","spotLights","spotlightTargets","spotlight","createSpotlight","spotlightTarget","createSpotlightTarget","decay","tween","st","zz","fbxLoader","FBXLoader","loadModel","url","animationIndex","clocks","numClocks","prototype","hasOwnProperty","call","animationMixer","labelRenderer","CSS2DRenderer","pointerEvents","onDoubleClick","geometrysphere","materialsphere","spheresphere","geometrysphere1","materialsphere1","spheresphere1","intersectedObject","originalMaterials","highlightedMaterial","sceneMeshes","arrowHelper","coneGeometry","intersects","drawingLine","v0","measurementLabels","lineId","element","intersects1","ctrlDown","measurementDiv","createElement","className","measurementLabel","CSS2DObject","cursor","acceleratedRaycast","computeBoundsTree","disposeBoundsTree","rotate","targetMesh","brushMesh","lastTime","mouseType","brushActive","bgColor","touchAction","tube","tubularSegments","radialSegments","knotGeometry","colorArray","Uint8Array","colorAttr","setUsage","knotMaterial","brushGeometry","brushMaterial","premultipliedAlpha","emissiveIntensity","open","button","firstHitOnly","res","pointerType","deltaMode","controllersRecursive","updateDisplay","active","bvh","boundsTree","indexAttr","inverseMatrix","tempVec","shapecast","intersectsBounds","intersectsBox","containsPoint","INTERSECTED","CONTAINED","NOT_INTERSECTED","intersectsTriangle","tri","contained","intersectsSphere","i3","i2","setX","setY","setZ","currTime","_upVector","Vector3","EPSILON","generateEdges","_v0","_v1","_normal","_triangle","Triangle","projectionDir","thresholdAngle","edges","precisionPoints","precision","pow","thresholdDot","MathUtils","getIndex","positionAttr","indexCount","indexArr","vertKeys","hashes","edgeData","getNormal","jNext","vecHash0","vecHash1","hash","reverseHash","otherNormal","meetsThreshold","projectionThreshold","sign","Line3","index0","index1","getOverlappingLine","_dir0","_dir1","_tempDir","_orthoPlane","Plane","_line0","_line1","_tempLine","triangle","lineTarget","getArea","areCoplanar","setFromNormalAndCoplanarPoint","intersectCount","p1","p2","distanceToPoint","intersectLine","tmp","e1","e2","separated1","separated2","getPlaneYAtPoint","testLine","isLineAbovePlane","isYProjectedLineDegenerate","isYProjectedTriangleDegenerate","isLineTriangleEdge","triPoints","matches","tp","getProjectedOverlaps","_target","_tempVec0","_tempVec1","_line","_tri","ExtendedTriangle","overlapsTarget","d0","d1","trimToBeneathTriPlane","_lineDirection","_planeHit","_centerPoint","_planePoint","doesLineIntersect","testPoint","flipped","overlapsToLines","newLine","overlaps","compressEdgeOverlaps","invOverlaps","invOverlap","overlap","edgesToGeometry","edgeArray","edgeGeom","BufferGeometry","edgeBuffer","BufferAttribute","sort","prevOverlap","displayModel","displayEdges","displayProjection","useBVH","sortEdges","updateMatrixWorld","model","regenerate","task","updateEdges","projection","whiteModel","outputContainer","async","setMeshoptDecoder","MeshoptDecoder","loadAsync","whiteMaterial","geomLines","runTime","timeStart","geometries","updateWorldMatrix","deleteAttribute","mergedGeometry","mergeBufferGeometries","mergeTime","MeshBVH","bvhTime","edgeGenerateTime","finalEdges","tempLine","tempRay","trimTime","lowestLineY","origin","intersectBox","distanceSq","highestTriangleY","next","done","firstPerson","displayCollider","displayBVH","visualizeDepth","playerSpeed","physicsSteps","visualizer","player","playerIsOnGround","fwdPressed","bkdPressed","lftPressed","rgtPressed","upVector","tempVector","tempVector2","tempBox","tempMat","tempSegment","normalBias","shadowCam","loadColliderEnvironment","RoundedBoxGeometry","capsuleInfo","segment","shadowSide","visFolder","parseFloat","gltfScene","toMerge","test","getHex","arr","visualGeometries","attach","geom","newGeom","BufferGeometryUtils","newMesh","staticGenerator","StaticGeometryGenerator","generate","lazyGeneration","MeshBVHVisualizer","getAzimuthalAngle","makeEmpty","expandByPoint","addScalar","triPoint","capsulePoint","closestPointToSegment","newPosition","deltaVector","routes","path","component","WaterPage","CanonJSPage","ConvexObjectPage","FollowCamPage","TempPage","SelectBoxPage","MulticoloredSpherePage","ParticlesSystemPage","EdgeDetectPage","ShadersOceanPage","GamePage","Draw3DSurfacePage","DrawRainBowLightPage","DrawDimensionPage","DrawSelectAreaPage","EdgeProjectionPage","CharacterMovementPage","router","createRouter","history","createWebHistory","app","createApp","App","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","deferred","O","chunkIds","fn","priority","notFulfilled","fulfilled","every","getter","__esModule","definition","o","defineProperty","enumerable","get","globalThis","Function","obj","prop","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}